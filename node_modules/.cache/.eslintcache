[{"/home/haim/github/job-search-tracker-api/frontend/src/index.tsx":"1","/home/haim/github/job-search-tracker-api/frontend/src/App.tsx":"2","/home/haim/github/job-search-tracker-api/frontend/src/providers/index.ts":"3","/home/haim/github/job-search-tracker-api/frontend/src/pages/index.ts":"4","/home/haim/github/job-search-tracker-api/frontend/src/providers/AuthProvider.tsx":"5","/home/haim/github/job-search-tracker-api/frontend/src/providers/AppProvider.tsx":"6","/home/haim/github/job-search-tracker-api/frontend/src/providers/QueryProvider.tsx":"7","/home/haim/github/job-search-tracker-api/frontend/src/pages/DashboardPage.tsx":"8","/home/haim/github/job-search-tracker-api/frontend/src/pages/RegisterPage.tsx":"9","/home/haim/github/job-search-tracker-api/frontend/src/pages/LoginPage.tsx":"10","/home/haim/github/job-search-tracker-api/frontend/src/utils/sessionPersistence.ts":"11","/home/haim/github/job-search-tracker-api/frontend/src/lib/queryClient.ts":"12","/home/haim/github/job-search-tracker-api/frontend/src/hooks/useAuth.ts":"13","/home/haim/github/job-search-tracker-api/frontend/src/components/auth/AuthGuard.tsx":"14","/home/haim/github/job-search-tracker-api/frontend/src/components/auth/RegisterForm.tsx":"15","/home/haim/github/job-search-tracker-api/frontend/src/components/auth/LoginForm.tsx":"16","/home/haim/github/job-search-tracker-api/frontend/src/services/index.ts":"17","/home/haim/github/job-search-tracker-api/frontend/src/components/ui/index.ts":"18","/home/haim/github/job-search-tracker-api/frontend/src/utils/tokenManager.ts":"19","/home/haim/github/job-search-tracker-api/frontend/src/components/ui/Input.tsx":"20","/home/haim/github/job-search-tracker-api/frontend/src/components/ui/Button.tsx":"21","/home/haim/github/job-search-tracker-api/frontend/src/components/ui/Modal.tsx":"22","/home/haim/github/job-search-tracker-api/frontend/src/utils/cn.ts":"23","/home/haim/github/job-search-tracker-api/frontend/src/services/authService.ts":"24","/home/haim/github/job-search-tracker-api/frontend/src/services/positionService.ts":"25","/home/haim/github/job-search-tracker-api/frontend/src/services/httpClient.ts":"26","/home/haim/github/job-search-tracker-api/frontend/src/services/interviewService.ts":"27","/home/haim/github/job-search-tracker-api/frontend/src/services/statisticsService.ts":"28","/home/haim/github/job-search-tracker-api/frontend/src/components/ui/TextArea.tsx":"29","/home/haim/github/job-search-tracker-api/frontend/src/components/ui/StatusBadge.tsx":"30","/home/haim/github/job-search-tracker-api/frontend/src/components/ui/Select.tsx":"31","/home/haim/github/job-search-tracker-api/frontend/src/types/index.ts":"32","/home/haim/github/job-search-tracker-api/frontend/src/types/validation.ts":"33","/home/haim/github/job-search-tracker-api/frontend/src/hooks/usePositions.ts":"34","/home/haim/github/job-search-tracker-api/frontend/src/components/index.ts":"35","/home/haim/github/job-search-tracker-api/frontend/src/components/auth/index.ts":"36","/home/haim/github/job-search-tracker-api/frontend/src/components/positions/index.ts":"37","/home/haim/github/job-search-tracker-api/frontend/src/components/layout/index.ts":"38","/home/haim/github/job-search-tracker-api/frontend/src/components/dashboard/index.ts":"39","/home/haim/github/job-search-tracker-api/frontend/src/components/positions/PositionCard.tsx":"40","/home/haim/github/job-search-tracker-api/frontend/src/components/positions/PositionList.tsx":"41","/home/haim/github/job-search-tracker-api/frontend/src/components/layout/AppLayout.tsx":"42","/home/haim/github/job-search-tracker-api/frontend/src/components/layout/Sidebar.tsx":"43","/home/haim/github/job-search-tracker-api/frontend/src/components/layout/MobileNavigation.tsx":"44","/home/haim/github/job-search-tracker-api/frontend/src/components/layout/Header.tsx":"45","/home/haim/github/job-search-tracker-api/frontend/src/components/dashboard/DashboardSummary.tsx":"46","/home/haim/github/job-search-tracker-api/frontend/src/utils/index.ts":"47","/home/haim/github/job-search-tracker-api/frontend/src/pages/EditPositionPage.tsx":"48","/home/haim/github/job-search-tracker-api/frontend/src/pages/CreatePositionPage.tsx":"49","/home/haim/github/job-search-tracker-api/frontend/src/components/positions/PositionForm.tsx":"50","/home/haim/github/job-search-tracker-api/frontend/src/pages/PositionDetailsPage.tsx":"51","/home/haim/github/job-search-tracker-api/frontend/src/components/positions/PositionDetails.tsx":"52","/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/index.ts":"53","/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/InterviewCard.tsx":"54","/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/InterviewList.tsx":"55","/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/InterviewForm.tsx":"56","/home/haim/github/job-search-tracker-api/frontend/src/hooks/useInterviews.ts":"57","/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/InlineDatePicker.tsx":"58","/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/InlineStatusSelector.tsx":"59","/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/InterviewQuickActions.tsx":"60","/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/InterviewTooltip.tsx":"61","/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/InterviewPreview.tsx":"62","/home/haim/github/job-search-tracker-api/frontend/src/components/positions/FilterBar.tsx":"63","/home/haim/github/job-search-tracker-api/frontend/src/components/positions/NoResultsState.tsx":"64","/home/haim/github/job-search-tracker-api/frontend/src/hooks/index.ts":"65","/home/haim/github/job-search-tracker-api/frontend/src/hooks/usePositionFilters.ts":"66","/home/haim/github/job-search-tracker-api/frontend/src/hooks/useStatistics.ts":"67","/home/haim/github/job-search-tracker-api/frontend/src/pages/PositionsPage.tsx":"68","/home/haim/github/job-search-tracker-api/frontend/src/utils/filterValidation.ts":"69","/home/haim/github/job-search-tracker-api/frontend/src/utils/filterExport.ts":"70","/home/haim/github/job-search-tracker-api/frontend/src/components/positions/FilterPresets.tsx":"71","/home/haim/github/job-search-tracker-api/frontend/src/components/ui/DateRangePicker.tsx":"72","/home/haim/github/job-search-tracker-api/frontend/src/pages/StatisticsPage.tsx":"73","/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/index.ts":"74","/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/StatisticsOverview.tsx":"75","/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/InterviewOutcomeChart.tsx":"76","/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/PositionStatusChart.tsx":"77","/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/KeyMetricsCards.tsx":"78","/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/InterviewTypeChart.tsx":"79","/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/CompanyStatsTable.tsx":"80","/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/DateRangeSelector.tsx":"81","/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/ResponsiveStatisticsLayout.tsx":"82","/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/DrillDownModal.tsx":"83","/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/StatisticsExport.tsx":"84","/home/haim/github/job-search-tracker-api/frontend/src/components/ui/SwipeableCard.tsx":"85","/home/haim/github/job-search-tracker-api/frontend/src/hooks/useSwipeGestures.ts":"86","/home/haim/github/job-search-tracker-api/frontend/src/components/ui/MobileLoadingStates.tsx":"87","/home/haim/github/job-search-tracker-api/frontend/src/components/ui/PullToRefresh.tsx":"88","/home/haim/github/job-search-tracker-api/frontend/src/hooks/usePullToRefresh.ts":"89","/home/haim/github/job-search-tracker-api/frontend/src/components/ui/LazyImage.tsx":"90","/home/haim/github/job-search-tracker-api/frontend/src/components/ui/MobileForm.tsx":"91","/home/haim/github/job-search-tracker-api/frontend/src/utils/cacheManager.ts":"92","/home/haim/github/job-search-tracker-api/frontend/src/hooks/useCacheInvalidation.ts":"93","/home/haim/github/job-search-tracker-api/frontend/src/providers/CacheProvider.tsx":"94","/home/haim/github/job-search-tracker-api/frontend/src/hooks/useCacheMetrics.ts":"95","/home/haim/github/job-search-tracker-api/frontend/src/hooks/useCacheWarming.ts":"96","/home/haim/github/job-search-tracker-api/frontend/src/utils/cachePersistence.ts":"97","/home/haim/github/job-search-tracker-api/frontend/src/utils/offlineQueue.ts":"98","/home/haim/github/job-search-tracker-api/frontend/src/utils/performanceMonitor.ts":"99","/home/haim/github/job-search-tracker-api/frontend/src/components/error/index.ts":"100","/home/haim/github/job-search-tracker-api/frontend/src/components/error/ErrorBoundary.tsx":"101","/home/haim/github/job-search-tracker-api/frontend/src/components/error/ErrorDisplay.tsx":"102","/home/haim/github/job-search-tracker-api/frontend/src/components/error/FeatureErrorBoundary.tsx":"103","/home/haim/github/job-search-tracker-api/frontend/src/utils/errorMessages.ts":"104","/home/haim/github/job-search-tracker-api/frontend/src/utils/retryMechanism.ts":"105","/home/haim/github/job-search-tracker-api/frontend/src/components/ui/OfflineIndicator.tsx":"106","/home/haim/github/job-search-tracker-api/frontend/src/components/ui/LoadingStates.tsx":"107","/home/haim/github/job-search-tracker-api/frontend/src/components/ui/SuccessConfirmation.tsx":"108","/home/haim/github/job-search-tracker-api/frontend/src/hooks/useFeedback.ts":"109","/home/haim/github/job-search-tracker-api/frontend/src/utils/notifications.tsx":"110","/home/haim/github/job-search-tracker-api/frontend/src/utils/serviceWorker.ts":"111","/home/haim/github/job-search-tracker-api/frontend/src/config/environment.ts":"112","/home/haim/github/job-search-tracker-api/frontend/src/components/dev/AccessibilityTester.tsx":"113","/home/haim/github/job-search-tracker-api/frontend/src/contexts/ThemeContext.tsx":"114","/home/haim/github/job-search-tracker-api/frontend/src/components/analytics/PerformanceMonitor.tsx":"115","/home/haim/github/job-search-tracker-api/frontend/src/utils/accessibility.ts":"116","/home/haim/github/job-search-tracker-api/frontend/src/config/performance.ts":"117","/home/haim/github/job-search-tracker-api/frontend/src/components/ui/ScreenReaderAnnouncement.tsx":"118","/home/haim/github/job-search-tracker-api/frontend/src/components/ui/ThemeToggle.tsx":"119","/home/haim/github/job-search-tracker-api/frontend/src/components/ui/SkipLink.tsx":"120"},{"size":486,"mtime":1758619438108,"results":"121","hashOfConfig":"122"},{"size":1836,"mtime":1758543039440,"results":"123","hashOfConfig":"122"},{"size":239,"mtime":1758530067373,"results":"124","hashOfConfig":"122"},{"size":411,"mtime":1758527573091,"results":"125","hashOfConfig":"122"},{"size":9620,"mtime":1758443413987,"results":"126","hashOfConfig":"122"},{"size":1865,"mtime":1758574987007,"results":"127","hashOfConfig":"122"},{"size":1075,"mtime":1758436068147,"results":"128","hashOfConfig":"122"},{"size":3804,"mtime":1758525484741,"results":"129","hashOfConfig":"122"},{"size":1633,"mtime":1758443241756,"results":"130","hashOfConfig":"122"},{"size":1980,"mtime":1758443233070,"results":"131","hashOfConfig":"122"},{"size":5897,"mtime":1758472221007,"results":"132","hashOfConfig":"122"},{"size":11763,"mtime":1758529873749,"results":"133","hashOfConfig":"122"},{"size":7139,"mtime":1758444009188,"results":"134","hashOfConfig":"122"},{"size":2401,"mtime":1758443362190,"results":"135","hashOfConfig":"122"},{"size":14068,"mtime":1758443201568,"results":"136","hashOfConfig":"122"},{"size":9326,"mtime":1758572944641,"results":"137","hashOfConfig":"122"},{"size":306,"mtime":1758443704194,"results":"138","hashOfConfig":"122"},{"size":798,"mtime":1758574987017,"results":"139","hashOfConfig":"122"},{"size":5673,"mtime":1758442899295,"results":"140","hashOfConfig":"122"},{"size":1894,"mtime":1758574987007,"results":"141","hashOfConfig":"122"},{"size":2753,"mtime":1758574987007,"results":"142","hashOfConfig":"122"},{"size":2964,"mtime":1758528952663,"results":"143","hashOfConfig":"122"},{"size":168,"mtime":1758443068460,"results":"144","hashOfConfig":"122"},{"size":3422,"mtime":1758442956644,"results":"145","hashOfConfig":"122"},{"size":5027,"mtime":1758524101344,"results":"146","hashOfConfig":"122"},{"size":9867,"mtime":1758543089980,"results":"147","hashOfConfig":"122"},{"size":7571,"mtime":1758523815317,"results":"148","hashOfConfig":"122"},{"size":6542,"mtime":1758524253777,"results":"149","hashOfConfig":"122"},{"size":1889,"mtime":1758528976532,"results":"150","hashOfConfig":"122"},{"size":4827,"mtime":1758445927852,"results":"151","hashOfConfig":"122"},{"size":2781,"mtime":1758528987238,"results":"152","hashOfConfig":"122"},{"size":6144,"mtime":1758472342293,"results":"153","hashOfConfig":"122"},{"size":5121,"mtime":1758524324928,"results":"154","hashOfConfig":"122"},{"size":9302,"mtime":1758529863294,"results":"155","hashOfConfig":"122"},{"size":348,"mtime":1758527590880,"results":"156","hashOfConfig":"122"},{"size":157,"mtime":1758443373450,"results":"157","hashOfConfig":"122"},{"size":285,"mtime":1758525451544,"results":"158","hashOfConfig":"122"},{"size":167,"mtime":1758446057758,"results":"159","hashOfConfig":"122"},{"size":54,"mtime":1758451942758,"results":"160","hashOfConfig":"122"},{"size":10635,"mtime":1758572643071,"results":"161","hashOfConfig":"122"},{"size":7150,"mtime":1758529192942,"results":"162","hashOfConfig":"122"},{"size":3765,"mtime":1758574987007,"results":"163","hashOfConfig":"122"},{"size":6715,"mtime":1758574987007,"results":"164","hashOfConfig":"122"},{"size":5959,"mtime":1758446052621,"results":"165","hashOfConfig":"122"},{"size":8395,"mtime":1758574987007,"results":"166","hashOfConfig":"122"},{"size":9241,"mtime":1758452142963,"results":"167","hashOfConfig":"122"},{"size":234,"mtime":1758526857133,"results":"168","hashOfConfig":"122"},{"size":7497,"mtime":1758453662614,"results":"169","hashOfConfig":"122"},{"size":4020,"mtime":1758453657616,"results":"170","hashOfConfig":"122"},{"size":9360,"mtime":1758529294239,"results":"171","hashOfConfig":"122"},{"size":4668,"mtime":1758523602091,"results":"172","hashOfConfig":"122"},{"size":14473,"mtime":1758472258427,"results":"173","hashOfConfig":"122"},{"size":527,"mtime":1758524924577,"results":"174","hashOfConfig":"122"},{"size":9183,"mtime":1758524969921,"results":"175","hashOfConfig":"122"},{"size":13237,"mtime":1758524978648,"results":"176","hashOfConfig":"122"},{"size":9777,"mtime":1758524628191,"results":"177","hashOfConfig":"122"},{"size":12907,"mtime":1758529924757,"results":"178","hashOfConfig":"122"},{"size":3377,"mtime":1758524950070,"results":"179","hashOfConfig":"122"},{"size":2561,"mtime":1758524956845,"results":"180","hashOfConfig":"122"},{"size":11884,"mtime":1758525009356,"results":"181","hashOfConfig":"122"},{"size":7472,"mtime":1758524831247,"results":"182","hashOfConfig":"122"},{"size":7589,"mtime":1758524982922,"results":"183","hashOfConfig":"122"},{"size":17412,"mtime":1758526827598,"results":"184","hashOfConfig":"122"},{"size":2740,"mtime":1758525590450,"results":"185","hashOfConfig":"122"},{"size":524,"mtime":1758543329451,"results":"186","hashOfConfig":"122"},{"size":3260,"mtime":1758570215949,"results":"187","hashOfConfig":"122"},{"size":8327,"mtime":1758473325266,"results":"188","hashOfConfig":"122"},{"size":2859,"mtime":1758529231119,"results":"189","hashOfConfig":"122"},{"size":11076,"mtime":1758526635448,"results":"190","hashOfConfig":"122"},{"size":10057,"mtime":1758526682354,"results":"191","hashOfConfig":"122"},{"size":12111,"mtime":1758526577594,"results":"192","hashOfConfig":"122"},{"size":9029,"mtime":1758526723062,"results":"193","hashOfConfig":"122"},{"size":174,"mtime":1758527561795,"results":"194","hashOfConfig":"122"},{"size":591,"mtime":1758528452558,"results":"195","hashOfConfig":"122"},{"size":9356,"mtime":1758528368661,"results":"196","hashOfConfig":"122"},{"size":4523,"mtime":1758528410032,"results":"197","hashOfConfig":"122"},{"size":5397,"mtime":1758528393655,"results":"198","hashOfConfig":"122"},{"size":4639,"mtime":1758527674871,"results":"199","hashOfConfig":"122"},{"size":4381,"mtime":1758528426551,"results":"200","hashOfConfig":"122"},{"size":8871,"mtime":1758528443685,"results":"201","hashOfConfig":"122"},{"size":5986,"mtime":1758528157861,"results":"202","hashOfConfig":"122"},{"size":8269,"mtime":1758528281099,"results":"203","hashOfConfig":"122"},{"size":10791,"mtime":1758528245474,"results":"204","hashOfConfig":"122"},{"size":12069,"mtime":1758528203646,"results":"205","hashOfConfig":"122"},{"size":4204,"mtime":1758528891540,"results":"206","hashOfConfig":"122"},{"size":2899,"mtime":1758528871999,"results":"207","hashOfConfig":"122"},{"size":5467,"mtime":1758529073880,"results":"208","hashOfConfig":"122"},{"size":4110,"mtime":1758529045602,"results":"209","hashOfConfig":"122"},{"size":3013,"mtime":1758529026245,"results":"210","hashOfConfig":"122"},{"size":6109,"mtime":1758529102123,"results":"211","hashOfConfig":"122"},{"size":8821,"mtime":1758529139982,"results":"212","hashOfConfig":"122"},{"size":12639,"mtime":1758529716540,"results":"213","hashOfConfig":"122"},{"size":11608,"mtime":1758529808907,"results":"214","hashOfConfig":"122"},{"size":16714,"mtime":1758530352254,"results":"215","hashOfConfig":"122"},{"size":11798,"mtime":1758529974908,"results":"216","hashOfConfig":"122"},{"size":10844,"mtime":1758529761407,"results":"217","hashOfConfig":"122"},{"size":11860,"mtime":1758530159406,"results":"218","hashOfConfig":"122"},{"size":7929,"mtime":1758530109656,"results":"219","hashOfConfig":"122"},{"size":13969,"mtime":1758530215237,"results":"220","hashOfConfig":"122"},{"size":509,"mtime":1758543012022,"results":"221","hashOfConfig":"122"},{"size":5188,"mtime":1758542826037,"results":"222","hashOfConfig":"122"},{"size":5973,"mtime":1758543004305,"results":"223","hashOfConfig":"122"},{"size":6433,"mtime":1758542861043,"results":"224","hashOfConfig":"122"},{"size":9957,"mtime":1758542961572,"results":"225","hashOfConfig":"122"},{"size":6995,"mtime":1758542897000,"results":"226","hashOfConfig":"122"},{"size":5876,"mtime":1758571021542,"results":"227","hashOfConfig":"122"},{"size":9740,"mtime":1758543195561,"results":"228","hashOfConfig":"122"},{"size":7899,"mtime":1758543257348,"results":"229","hashOfConfig":"122"},{"size":5822,"mtime":1758571025539,"results":"230","hashOfConfig":"122"},{"size":10363,"mtime":1758571398529,"results":"231","hashOfConfig":"122"},{"size":2000,"mtime":1758619438108,"results":"232","hashOfConfig":"122"},{"size":4332,"mtime":1758619438108,"results":"233","hashOfConfig":"122"},{"size":1531,"mtime":1758574987007,"results":"234","hashOfConfig":"122"},{"size":3018,"mtime":1758574987007,"results":"235","hashOfConfig":"122"},{"size":2364,"mtime":1758619438108,"results":"236","hashOfConfig":"122"},{"size":5499,"mtime":1758574987007,"results":"237","hashOfConfig":"122"},{"size":1575,"mtime":1758619438127,"results":"238","hashOfConfig":"122"},{"size":899,"mtime":1758574987007,"results":"239","hashOfConfig":"122"},{"size":2990,"mtime":1758574987007,"results":"240","hashOfConfig":"122"},{"size":575,"mtime":1758574987007,"results":"241","hashOfConfig":"122"},{"filePath":"242","messages":"243","suppressedMessages":"244","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"v4i3p9",{"filePath":"245","messages":"246","suppressedMessages":"247","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"248","messages":"249","suppressedMessages":"250","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"251","messages":"252","suppressedMessages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"254","messages":"255","suppressedMessages":"256","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"257","messages":"258","suppressedMessages":"259","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"260","messages":"261","suppressedMessages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"263","messages":"264","suppressedMessages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"266","messages":"267","suppressedMessages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"269","messages":"270","suppressedMessages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"272","messages":"273","suppressedMessages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"275","messages":"276","suppressedMessages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"278","messages":"279","suppressedMessages":"280","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"281","messages":"282","suppressedMessages":"283","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"284","messages":"285","suppressedMessages":"286","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"287","messages":"288","suppressedMessages":"289","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"290","messages":"291","suppressedMessages":"292","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"293","messages":"294","suppressedMessages":"295","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"296","messages":"297","suppressedMessages":"298","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"299","messages":"300","suppressedMessages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"302","messages":"303","suppressedMessages":"304","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"305","messages":"306","suppressedMessages":"307","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"308","messages":"309","suppressedMessages":"310","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"311","messages":"312","suppressedMessages":"313","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"314","messages":"315","suppressedMessages":"316","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"317","messages":"318","suppressedMessages":"319","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"320","messages":"321","suppressedMessages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"323","messages":"324","suppressedMessages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"326","messages":"327","suppressedMessages":"328","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"329","messages":"330","suppressedMessages":"331","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"332","messages":"333","suppressedMessages":"334","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"335","messages":"336","suppressedMessages":"337","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"338","messages":"339","suppressedMessages":"340","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"341","messages":"342","suppressedMessages":"343","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"344","messages":"345","suppressedMessages":"346","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"347","messages":"348","suppressedMessages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","suppressedMessages":"352","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"353","messages":"354","suppressedMessages":"355","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"356","messages":"357","suppressedMessages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","suppressedMessages":"361","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","suppressedMessages":"364","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"365","messages":"366","suppressedMessages":"367","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":null},{"filePath":"368","messages":"369","suppressedMessages":"370","errorCount":1,"fatalErrorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"371","messages":"372","suppressedMessages":"373","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","suppressedMessages":"376","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"377","messages":"378","suppressedMessages":"379","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","suppressedMessages":"382","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"383","messages":"384","suppressedMessages":"385","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","suppressedMessages":"388","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"389","messages":"390","suppressedMessages":"391","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","suppressedMessages":"394","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"395","messages":"396","suppressedMessages":"397","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","suppressedMessages":"400","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"401","messages":"402","suppressedMessages":"403","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":null},{"filePath":"404","messages":"405","suppressedMessages":"406","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","suppressedMessages":"409","errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"410","messages":"411","suppressedMessages":"412","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":null},{"filePath":"413","messages":"414","suppressedMessages":"415","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"416","messages":"417","suppressedMessages":"418","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","suppressedMessages":"421","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"422","messages":"423","suppressedMessages":"424","errorCount":4,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":4,"fixableWarningCount":0,"source":null},{"filePath":"425","messages":"426","suppressedMessages":"427","errorCount":6,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":6,"fixableWarningCount":0,"source":null},{"filePath":"428","messages":"429","suppressedMessages":"430","errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"431","messages":"432","suppressedMessages":"433","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"434","messages":"435","suppressedMessages":"436","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","suppressedMessages":"439","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"440","messages":"441","suppressedMessages":"442","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"443","messages":"444","suppressedMessages":"445","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"446","messages":"447","suppressedMessages":"448","errorCount":12,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":12,"fixableWarningCount":0,"source":null},{"filePath":"449","messages":"450","suppressedMessages":"451","errorCount":5,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":5,"fixableWarningCount":0,"source":null},{"filePath":"452","messages":"453","suppressedMessages":"454","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":null},{"filePath":"455","messages":"456","suppressedMessages":"457","errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"458","messages":"459","suppressedMessages":"460","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"461","messages":"462","suppressedMessages":"463","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","suppressedMessages":"466","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"467","messages":"468","suppressedMessages":"469","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","suppressedMessages":"472","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"473","messages":"474","suppressedMessages":"475","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","suppressedMessages":"478","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"479","messages":"480","suppressedMessages":"481","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"482","messages":"483","suppressedMessages":"484","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"485","messages":"486","suppressedMessages":"487","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","suppressedMessages":"490","errorCount":1,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"491","messages":"492","suppressedMessages":"493","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"494","messages":"495","suppressedMessages":"496","errorCount":3,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":3,"fixableWarningCount":0,"source":null},{"filePath":"497","messages":"498","suppressedMessages":"499","errorCount":2,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":2,"fixableWarningCount":0,"source":null},{"filePath":"500","messages":"501","suppressedMessages":"502","errorCount":1,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"503","messages":"504","suppressedMessages":"505","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"506","messages":"507","suppressedMessages":"508","errorCount":5,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":5,"fixableWarningCount":0,"source":null},{"filePath":"509","messages":"510","suppressedMessages":"511","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":null},{"filePath":"512","messages":"513","suppressedMessages":"514","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"515","messages":"516","suppressedMessages":"517","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"518","messages":"519","suppressedMessages":"520","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"521","messages":"522","suppressedMessages":"523","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"524","messages":"525","suppressedMessages":"526","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"527","messages":"528","suppressedMessages":"529","errorCount":1,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"530","messages":"531","suppressedMessages":"532","errorCount":1,"fatalErrorCount":0,"warningCount":13,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"533","messages":"534","suppressedMessages":"535","errorCount":1,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"536","messages":"537","suppressedMessages":"538","errorCount":1,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"539","messages":"540","suppressedMessages":"541","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"542","messages":"543","suppressedMessages":"544","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"545","messages":"546","suppressedMessages":"547","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"548","messages":"549","suppressedMessages":"550","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"551","messages":"552","suppressedMessages":"553","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"554","messages":"555","suppressedMessages":"556","errorCount":1,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":1,"fixableWarningCount":0,"source":null},{"filePath":"557","messages":"558","suppressedMessages":"559","errorCount":4,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":4,"fixableWarningCount":0,"source":null},{"filePath":"560","messages":"561","suppressedMessages":"562","errorCount":2,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":2,"fixableWarningCount":0,"source":null},{"filePath":"563","messages":"564","suppressedMessages":"565","errorCount":5,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":5,"fixableWarningCount":0,"source":null},{"filePath":"566","messages":"567","suppressedMessages":"568","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"569","messages":"570","suppressedMessages":"571","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"572","messages":"573","suppressedMessages":"574","errorCount":1,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"575","messages":"576","suppressedMessages":"577","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","suppressedMessages":"580","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"581","messages":"582","suppressedMessages":"583","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"584","messages":"585","suppressedMessages":"586","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"587","messages":"588","suppressedMessages":"589","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"590","messages":"591","suppressedMessages":"592","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"593","messages":"594","suppressedMessages":"595","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"596","messages":"597","suppressedMessages":"598","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"599","messages":"600","suppressedMessages":"601","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/haim/github/job-search-tracker-api/frontend/src/index.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/App.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/providers/index.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/pages/index.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/providers/AuthProvider.tsx",["602"],[],"/home/haim/github/job-search-tracker-api/frontend/src/providers/AppProvider.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/providers/QueryProvider.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/pages/DashboardPage.tsx",["603","604","605","606"],[],"/home/haim/github/job-search-tracker-api/frontend/src/pages/RegisterPage.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/pages/LoginPage.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/utils/sessionPersistence.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/lib/queryClient.ts",["607","608"],[],"/home/haim/github/job-search-tracker-api/frontend/src/hooks/useAuth.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/auth/AuthGuard.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/auth/RegisterForm.tsx",["609","610"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/auth/LoginForm.tsx",["611","612","613","614"],[],"/home/haim/github/job-search-tracker-api/frontend/src/services/index.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/ui/index.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/utils/tokenManager.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/ui/Input.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/ui/Button.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/ui/Modal.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/utils/cn.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/services/authService.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/services/positionService.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/services/httpClient.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/services/interviewService.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/services/statisticsService.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/ui/TextArea.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/ui/StatusBadge.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/ui/Select.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/types/index.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/types/validation.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/hooks/usePositions.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/index.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/auth/index.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/positions/index.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/layout/index.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/dashboard/index.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/positions/PositionCard.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/positions/PositionList.tsx",["615"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/layout/AppLayout.tsx",["616","617","618"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/layout/Sidebar.tsx",["619"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/layout/MobileNavigation.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/layout/Header.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/dashboard/DashboardSummary.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/utils/index.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/pages/EditPositionPage.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/pages/CreatePositionPage.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/positions/PositionForm.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/pages/PositionDetailsPage.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/positions/PositionDetails.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/index.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/InterviewCard.tsx",["620","621","622"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/InterviewList.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/InterviewForm.tsx",["623","624","625"],[],"/home/haim/github/job-search-tracker-api/frontend/src/hooks/useInterviews.ts",["626","627"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/InlineDatePicker.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/InlineStatusSelector.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/InterviewQuickActions.tsx",["628"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/InterviewTooltip.tsx",["629","630","631","632"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/InterviewPreview.tsx",["633","634","635","636","637","638"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/positions/FilterBar.tsx",["639","640","641"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/positions/NoResultsState.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/hooks/index.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/hooks/usePositionFilters.ts",["642","643"],[],"/home/haim/github/job-search-tracker-api/frontend/src/hooks/useStatistics.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/pages/PositionsPage.tsx",["644"],[],"/home/haim/github/job-search-tracker-api/frontend/src/utils/filterValidation.ts",["645","646","647","648","649","650","651","652","653","654","655","656","657"],[],"/home/haim/github/job-search-tracker-api/frontend/src/utils/filterExport.ts",["658","659","660","661","662","663"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/positions/FilterPresets.tsx",["664","665","666"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/ui/DateRangePicker.tsx",["667","668","669"],[],"/home/haim/github/job-search-tracker-api/frontend/src/pages/StatisticsPage.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/index.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/StatisticsOverview.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/InterviewOutcomeChart.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/PositionStatusChart.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/KeyMetricsCards.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/InterviewTypeChart.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/CompanyStatsTable.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/DateRangeSelector.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/ResponsiveStatisticsLayout.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/DrillDownModal.tsx",["670","671","672","673","674","675"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/StatisticsExport.tsx",["676"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/ui/SwipeableCard.tsx",["677","678","679"],[],"/home/haim/github/job-search-tracker-api/frontend/src/hooks/useSwipeGestures.ts",["680","681","682"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/ui/MobileLoadingStates.tsx",["683","684"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/ui/PullToRefresh.tsx",["685"],[],"/home/haim/github/job-search-tracker-api/frontend/src/hooks/usePullToRefresh.ts",["686","687","688","689","690","691"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/ui/LazyImage.tsx",["692","693"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/ui/MobileForm.tsx",["694","695"],[],"/home/haim/github/job-search-tracker-api/frontend/src/utils/cacheManager.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/hooks/useCacheInvalidation.ts",["696"],[],"/home/haim/github/job-search-tracker-api/frontend/src/providers/CacheProvider.tsx",["697","698","699","700","701","702","703"],[],"/home/haim/github/job-search-tracker-api/frontend/src/hooks/useCacheMetrics.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/hooks/useCacheWarming.ts",["704"],[],"/home/haim/github/job-search-tracker-api/frontend/src/utils/cachePersistence.ts",["705","706","707","708","709","710","711","712","713","714","715","716","717","718"],[],"/home/haim/github/job-search-tracker-api/frontend/src/utils/offlineQueue.ts",["719","720","721","722","723","724","725","726","727","728","729","730","731"],[],"/home/haim/github/job-search-tracker-api/frontend/src/utils/performanceMonitor.ts",["732","733","734","735","736","737","738"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/error/index.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/error/ErrorBoundary.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/error/ErrorDisplay.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/error/FeatureErrorBoundary.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/utils/errorMessages.ts",["739"],[],"/home/haim/github/job-search-tracker-api/frontend/src/utils/retryMechanism.ts",["740","741","742"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/ui/OfflineIndicator.tsx",["743","744","745","746","747"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/ui/LoadingStates.tsx",["748","749"],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/ui/SuccessConfirmation.tsx",["750","751","752","753","754"],[],"/home/haim/github/job-search-tracker-api/frontend/src/hooks/useFeedback.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/utils/notifications.tsx",["755"],[],"/home/haim/github/job-search-tracker-api/frontend/src/utils/serviceWorker.ts",["756","757","758","759"],[],"/home/haim/github/job-search-tracker-api/frontend/src/config/environment.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/dev/AccessibilityTester.tsx",["760"],[],"/home/haim/github/job-search-tracker-api/frontend/src/contexts/ThemeContext.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/analytics/PerformanceMonitor.tsx",["761"],[],"/home/haim/github/job-search-tracker-api/frontend/src/utils/accessibility.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/config/performance.ts",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/ui/ScreenReaderAnnouncement.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/ui/ThemeToggle.tsx",[],[],"/home/haim/github/job-search-tracker-api/frontend/src/components/ui/SkipLink.tsx",[],[],{"ruleId":"762","severity":1,"message":"763","line":207,"column":7,"nodeType":"764","messageId":"765","endLine":207,"endColumn":18,"suggestions":"766"},{"ruleId":"762","severity":1,"message":"763","line":40,"column":5,"nodeType":"764","messageId":"765","endLine":40,"endColumn":16,"suggestions":"767"},{"ruleId":"762","severity":1,"message":"763","line":46,"column":5,"nodeType":"764","messageId":"765","endLine":46,"endColumn":16,"suggestions":"768"},{"ruleId":"762","severity":1,"message":"763","line":54,"column":5,"nodeType":"764","messageId":"765","endLine":54,"endColumn":16,"suggestions":"769"},{"ruleId":"762","severity":1,"message":"763","line":60,"column":5,"nodeType":"764","messageId":"765","endLine":60,"endColumn":16,"suggestions":"770"},{"ruleId":"762","severity":1,"message":"763","line":86,"column":9,"nodeType":"764","messageId":"765","endLine":86,"endColumn":20,"suggestions":"771"},{"ruleId":"762","severity":1,"message":"763","line":103,"column":9,"nodeType":"764","messageId":"765","endLine":103,"endColumn":20,"suggestions":"772"},{"ruleId":"762","severity":1,"message":"763","line":336,"column":15,"nodeType":"764","messageId":"765","endLine":336,"endColumn":26,"suggestions":"773"},{"ruleId":"762","severity":1,"message":"763","line":366,"column":15,"nodeType":"764","messageId":"765","endLine":366,"endColumn":26,"suggestions":"774"},{"ruleId":"775","severity":1,"message":"776","line":9,"column":10,"nodeType":"777","messageId":"778","endLine":9,"endColumn":29},{"ruleId":"779","severity":1,"message":"780","line":84,"column":9,"nodeType":"781","endLine":84,"endColumn":107},{"ruleId":"762","severity":1,"message":"763","line":214,"column":15,"nodeType":"764","messageId":"765","endLine":214,"endColumn":26,"suggestions":"782"},{"ruleId":"762","severity":1,"message":"763","line":244,"column":15,"nodeType":"764","messageId":"765","endLine":244,"endColumn":26,"suggestions":"783"},{"ruleId":"775","severity":1,"message":"784","line":2,"column":32,"nodeType":"777","messageId":"778","endLine":2,"endColumn":41},{"ruleId":"785","severity":2,"message":"786","line":50,"column":20,"nodeType":"787","messageId":"788","endLine":50,"endColumn":27,"fix":"789"},{"ruleId":"785","severity":2,"message":"786","line":62,"column":24,"nodeType":"787","messageId":"788","endLine":62,"endColumn":31,"fix":"790"},{"ruleId":"785","severity":2,"message":"786","line":72,"column":24,"nodeType":"787","messageId":"788","endLine":72,"endColumn":31,"fix":"791"},{"ruleId":null,"fatal":true,"severity":2,"message":"792","line":187,"column":8,"nodeType":null},{"ruleId":"785","severity":2,"message":"786","line":80,"column":20,"nodeType":"787","messageId":"788","endLine":80,"endColumn":54,"fix":"793"},{"ruleId":"785","severity":2,"message":"786","line":81,"column":27,"nodeType":"787","messageId":"788","endLine":81,"endColumn":67,"fix":"794"},{"ruleId":"785","severity":2,"message":"786","line":82,"column":21,"nodeType":"787","messageId":"788","endLine":82,"endColumn":57,"fix":"795"},{"ruleId":"796","severity":1,"message":"797","line":65,"column":6,"nodeType":"798","endLine":65,"endColumn":42,"suggestions":"799"},{"ruleId":"796","severity":1,"message":"800","line":65,"column":7,"nodeType":"801","endLine":65,"endColumn":14},{"ruleId":"785","severity":2,"message":"786","line":123,"column":28,"nodeType":"787","messageId":"788","endLine":123,"endColumn":35,"fix":"802"},{"ruleId":"785","severity":2,"message":"786","line":117,"column":21,"nodeType":"787","messageId":"788","endLine":117,"endColumn":44,"fix":"803"},{"ruleId":"785","severity":2,"message":"786","line":268,"column":23,"nodeType":"787","messageId":"788","endLine":268,"endColumn":34,"fix":"804"},{"ruleId":"785","severity":2,"message":"786","line":83,"column":26,"nodeType":"787","messageId":"788","endLine":83,"endColumn":33,"fix":"805"},{"ruleId":"785","severity":2,"message":"786","line":65,"column":27,"nodeType":"787","messageId":"788","endLine":65,"endColumn":42,"fix":"806"},{"ruleId":"785","severity":2,"message":"786","line":66,"column":30,"nodeType":"787","messageId":"788","endLine":66,"endColumn":48,"fix":"807"},{"ruleId":"785","severity":2,"message":"786","line":67,"column":20,"nodeType":"787","messageId":"788","endLine":67,"endColumn":37,"fix":"808"},{"ruleId":"785","severity":2,"message":"786","line":68,"column":21,"nodeType":"787","messageId":"788","endLine":68,"endColumn":39,"fix":"809"},{"ruleId":"785","severity":2,"message":"786","line":69,"column":20,"nodeType":"787","messageId":"788","endLine":69,"endColumn":88,"fix":"810"},{"ruleId":"785","severity":2,"message":"786","line":70,"column":27,"nodeType":"787","messageId":"788","endLine":70,"endColumn":94,"fix":"811"},{"ruleId":"785","severity":2,"message":"786","line":71,"column":30,"nodeType":"787","messageId":"788","endLine":71,"endColumn":101,"fix":"812"},{"ruleId":"785","severity":2,"message":"786","line":72,"column":21,"nodeType":"787","messageId":"788","endLine":72,"endColumn":93,"fix":"813"},{"ruleId":"785","severity":2,"message":"786","line":83,"column":91,"nodeType":"787","messageId":"788","endLine":83,"endColumn":101,"fix":"814"},{"ruleId":"785","severity":2,"message":"786","line":84,"column":91,"nodeType":"787","messageId":"788","endLine":84,"endColumn":100,"fix":"815"},{"ruleId":"775","severity":1,"message":"816","line":7,"column":3,"nodeType":"777","messageId":"778","endLine":7,"endColumn":15},{"ruleId":"796","severity":1,"message":"817","line":82,"column":6,"nodeType":"798","endLine":82,"endColumn":8,"suggestions":"818"},{"ruleId":"785","severity":2,"message":"786","line":186,"column":16,"nodeType":"787","messageId":"788","endLine":186,"endColumn":23,"fix":"819"},{"ruleId":"775","severity":1,"message":"820","line":1,"column":33,"nodeType":"777","messageId":"778","endLine":1,"endColumn":42},{"ruleId":"785","severity":2,"message":"786","line":41,"column":36,"nodeType":"787","messageId":"788","endLine":41,"endColumn":43,"fix":"821"},{"ruleId":"762","severity":1,"message":"763","line":33,"column":5,"nodeType":"764","messageId":"765","endLine":33,"endColumn":16,"suggestions":"822"},{"ruleId":"785","severity":2,"message":"786","line":23,"column":51,"nodeType":"787","messageId":"788","endLine":23,"endColumn":63,"fix":"823"},{"ruleId":"785","severity":2,"message":"786","line":33,"column":59,"nodeType":"787","messageId":"788","endLine":33,"endColumn":72,"fix":"824"},{"ruleId":"785","severity":2,"message":"786","line":34,"column":55,"nodeType":"787","messageId":"788","endLine":34,"endColumn":68,"fix":"825"},{"ruleId":"785","severity":2,"message":"786","line":47,"column":63,"nodeType":"787","messageId":"788","endLine":47,"endColumn":76,"fix":"826"},{"ruleId":"785","severity":2,"message":"786","line":58,"column":74,"nodeType":"787","messageId":"788","endLine":58,"endColumn":87,"fix":"827"},{"ruleId":"785","severity":2,"message":"786","line":67,"column":52,"nodeType":"787","messageId":"788","endLine":67,"endColumn":65,"fix":"828"},{"ruleId":"785","severity":2,"message":"786","line":81,"column":46,"nodeType":"787","messageId":"788","endLine":81,"endColumn":59,"fix":"829"},{"ruleId":"785","severity":2,"message":"786","line":90,"column":28,"nodeType":"787","messageId":"788","endLine":90,"endColumn":40,"fix":"830"},{"ruleId":"785","severity":2,"message":"786","line":102,"column":51,"nodeType":"787","messageId":"788","endLine":102,"endColumn":63,"fix":"831"},{"ruleId":"785","severity":2,"message":"786","line":116,"column":51,"nodeType":"787","messageId":"788","endLine":116,"endColumn":63,"fix":"832"},{"ruleId":"785","severity":2,"message":"786","line":327,"column":38,"nodeType":"787","messageId":"788","endLine":327,"endColumn":51,"fix":"833"},{"ruleId":"785","severity":2,"message":"786","line":328,"column":44,"nodeType":"787","messageId":"788","endLine":328,"endColumn":57,"fix":"834"},{"ruleId":"835","severity":1,"message":"836","line":354,"column":1,"nodeType":"837","endLine":361,"endColumn":3},{"ruleId":"785","severity":2,"message":"786","line":147,"column":17,"nodeType":"787","messageId":"788","endLine":147,"endColumn":48,"fix":"838"},{"ruleId":"785","severity":2,"message":"786","line":148,"column":18,"nodeType":"787","messageId":"788","endLine":148,"endColumn":44,"fix":"839"},{"ruleId":"785","severity":2,"message":"786","line":149,"column":17,"nodeType":"787","messageId":"788","endLine":149,"endColumn":41,"fix":"840"},{"ruleId":"785","severity":2,"message":"786","line":150,"column":19,"nodeType":"787","messageId":"788","endLine":150,"endColumn":48,"fix":"841"},{"ruleId":"785","severity":2,"message":"786","line":151,"column":17,"nodeType":"787","messageId":"788","endLine":151,"endColumn":42,"fix":"842"},{"ruleId":"835","severity":1,"message":"836","line":355,"column":1,"nodeType":"837","endLine":369,"endColumn":3},{"ruleId":"785","severity":2,"message":"786","line":112,"column":53,"nodeType":"787","messageId":"788","endLine":112,"endColumn":66,"fix":"843"},{"ruleId":"785","severity":2,"message":"786","line":126,"column":29,"nodeType":"787","messageId":"788","endLine":126,"endColumn":36,"fix":"844"},{"ruleId":"785","severity":2,"message":"786","line":170,"column":18,"nodeType":"787","messageId":"788","endLine":170,"endColumn":41,"fix":"845"},{"ruleId":"775","severity":1,"message":"846","line":4,"column":3,"nodeType":"777","messageId":"778","endLine":4,"endColumn":18},{"ruleId":"775","severity":1,"message":"847","line":5,"column":3,"nodeType":"777","messageId":"778","endLine":5,"endColumn":19},{"ruleId":"785","severity":2,"message":"786","line":109,"column":35,"nodeType":"787","messageId":"788","endLine":109,"endColumn":54,"fix":"848"},{"ruleId":"775","severity":1,"message":"849","line":5,"column":3,"nodeType":"777","messageId":"778","endLine":5,"endColumn":12},{"ruleId":"775","severity":1,"message":"846","line":6,"column":3,"nodeType":"777","messageId":"778","endLine":6,"endColumn":18},{"ruleId":"775","severity":1,"message":"850","line":8,"column":3,"nodeType":"777","messageId":"778","endLine":8,"endColumn":16},{"ruleId":"775","severity":1,"message":"851","line":9,"column":3,"nodeType":"777","messageId":"778","endLine":9,"endColumn":26},{"ruleId":"796","severity":1,"message":"852","line":68,"column":6,"nodeType":"798","endLine":68,"endColumn":27,"suggestions":"853"},{"ruleId":"854","severity":2,"message":"855","line":75,"column":11,"nodeType":"777","messageId":"856","endLine":75,"endColumn":32,"fix":"857"},{"ruleId":"785","severity":2,"message":"786","line":193,"column":30,"nodeType":"787","messageId":"788","endLine":193,"endColumn":40,"fix":"858"},{"ruleId":"785","severity":2,"message":"786","line":39,"column":35,"nodeType":"787","messageId":"788","endLine":39,"endColumn":42,"fix":"859"},{"ruleId":"785","severity":2,"message":"786","line":49,"column":34,"nodeType":"787","messageId":"788","endLine":49,"endColumn":41,"fix":"860"},{"ruleId":"785","severity":2,"message":"786","line":71,"column":31,"nodeType":"787","messageId":"788","endLine":71,"endColumn":38,"fix":"861"},{"ruleId":"775","severity":1,"message":"820","line":1,"column":31,"nodeType":"777","messageId":"778","endLine":1,"endColumn":40},{"ruleId":"785","severity":2,"message":"786","line":49,"column":51,"nodeType":"787","messageId":"788","endLine":49,"endColumn":58,"fix":"862"},{"ruleId":"785","severity":2,"message":"786","line":81,"column":19,"nodeType":"787","messageId":"788","endLine":81,"endColumn":26,"fix":"863"},{"ruleId":"785","severity":2,"message":"786","line":113,"column":19,"nodeType":"787","messageId":"788","endLine":113,"endColumn":31,"fix":"864"},{"ruleId":"835","severity":1,"message":"836","line":183,"column":1,"nodeType":"837","endLine":191,"endColumn":3},{"ruleId":"785","severity":2,"message":"786","line":40,"column":19,"nodeType":"787","messageId":"788","endLine":40,"endColumn":26,"fix":"865"},{"ruleId":"775","severity":1,"message":"820","line":1,"column":31,"nodeType":"777","messageId":"778","endLine":1,"endColumn":40},{"ruleId":"785","severity":2,"message":"786","line":27,"column":35,"nodeType":"787","messageId":"788","endLine":27,"endColumn":42,"fix":"866"},{"ruleId":"785","severity":2,"message":"786","line":30,"column":44,"nodeType":"787","messageId":"788","endLine":30,"endColumn":51,"fix":"867"},{"ruleId":"785","severity":2,"message":"786","line":37,"column":49,"nodeType":"787","messageId":"788","endLine":37,"endColumn":56,"fix":"868"},{"ruleId":"785","severity":2,"message":"786","line":57,"column":49,"nodeType":"787","messageId":"788","endLine":57,"endColumn":56,"fix":"869"},{"ruleId":"785","severity":2,"message":"786","line":78,"column":31,"nodeType":"787","messageId":"788","endLine":78,"endColumn":38,"fix":"870"},{"ruleId":"785","severity":2,"message":"786","line":35,"column":21,"nodeType":"787","messageId":"788","endLine":35,"endColumn":28,"fix":"871"},{"ruleId":"785","severity":2,"message":"786","line":172,"column":21,"nodeType":"787","messageId":"788","endLine":172,"endColumn":28,"fix":"872"},{"ruleId":"775","severity":1,"message":"820","line":1,"column":27,"nodeType":"777","messageId":"778","endLine":1,"endColumn":36},{"ruleId":"835","severity":1,"message":"836","line":318,"column":1,"nodeType":"837","endLine":324,"endColumn":3},{"ruleId":"796","severity":1,"message":"873","line":202,"column":6,"nodeType":"798","endLine":210,"endColumn":4,"suggestions":"874"},{"ruleId":"775","severity":1,"message":"875","line":7,"column":24,"nodeType":"777","messageId":"778","endLine":7,"endColumn":36},{"ruleId":"775","severity":1,"message":"876","line":8,"column":10,"nodeType":"777","messageId":"778","endLine":8,"endColumn":22},{"ruleId":"775","severity":1,"message":"877","line":9,"column":10,"nodeType":"777","messageId":"778","endLine":9,"endColumn":26},{"ruleId":"775","severity":1,"message":"878","line":10,"column":10,"nodeType":"777","messageId":"778","endLine":10,"endColumn":28},{"ruleId":"775","severity":1,"message":"879","line":102,"column":5,"nodeType":"777","messageId":"778","endLine":102,"endColumn":22},{"ruleId":"775","severity":1,"message":"880","line":204,"column":13,"nodeType":"777","messageId":"778","endLine":204,"endColumn":21},{"ruleId":"775","severity":1,"message":"880","line":220,"column":13,"nodeType":"777","messageId":"778","endLine":220,"endColumn":21},{"ruleId":"785","severity":2,"message":"786","line":298,"column":20,"nodeType":"787","messageId":"788","endLine":298,"endColumn":27,"fix":"881"},{"ruleId":"775","severity":1,"message":"882","line":2,"column":10,"nodeType":"777","messageId":"778","endLine":2,"endColumn":22},{"ruleId":"762","severity":1,"message":"763","line":121,"column":7,"nodeType":"764","messageId":"765","endLine":121,"endColumn":18,"suggestions":"883"},{"ruleId":"762","severity":1,"message":"763","line":143,"column":9,"nodeType":"764","messageId":"765","endLine":143,"endColumn":20,"suggestions":"884"},{"ruleId":"762","severity":1,"message":"763","line":150,"column":9,"nodeType":"764","messageId":"765","endLine":150,"endColumn":20,"suggestions":"885"},{"ruleId":"762","severity":1,"message":"763","line":179,"column":7,"nodeType":"764","messageId":"765","endLine":179,"endColumn":18,"suggestions":"886"},{"ruleId":"762","severity":1,"message":"763","line":311,"column":7,"nodeType":"764","messageId":"765","endLine":311,"endColumn":18,"suggestions":"887"},{"ruleId":"762","severity":1,"message":"763","line":361,"column":7,"nodeType":"764","messageId":"765","endLine":361,"endColumn":18,"suggestions":"888"},{"ruleId":"889","severity":1,"message":"890","line":372,"column":39,"nodeType":"777","messageId":"891","endLine":372,"endColumn":44},{"ruleId":"889","severity":1,"message":"890","line":373,"column":51,"nodeType":"777","messageId":"891","endLine":373,"endColumn":56},{"ruleId":"889","severity":1,"message":"890","line":378,"column":3,"nodeType":"777","messageId":"891","endLine":378,"endColumn":8},{"ruleId":"889","severity":1,"message":"890","line":400,"column":24,"nodeType":"777","messageId":"891","endLine":400,"endColumn":29},{"ruleId":"889","severity":1,"message":"890","line":404,"column":31,"nodeType":"777","messageId":"891","endLine":404,"endColumn":36},{"ruleId":"889","severity":1,"message":"890","line":409,"column":21,"nodeType":"777","messageId":"891","endLine":409,"endColumn":26},{"ruleId":"892","severity":2,"message":"893","line":423,"column":1,"nodeType":"894","endLine":423,"endColumn":27,"fix":"895"},{"ruleId":"775","severity":1,"message":"882","line":1,"column":10,"nodeType":"777","messageId":"778","endLine":1,"endColumn":22},{"ruleId":"762","severity":1,"message":"763","line":40,"column":5,"nodeType":"764","messageId":"765","endLine":40,"endColumn":16,"suggestions":"896"},{"ruleId":"762","severity":1,"message":"763","line":90,"column":5,"nodeType":"764","messageId":"765","endLine":90,"endColumn":16,"suggestions":"897"},{"ruleId":"762","severity":1,"message":"763","line":96,"column":9,"nodeType":"764","messageId":"765","endLine":96,"endColumn":20,"suggestions":"898"},{"ruleId":"762","severity":1,"message":"763","line":175,"column":7,"nodeType":"764","messageId":"765","endLine":175,"endColumn":18,"suggestions":"899"},{"ruleId":"889","severity":1,"message":"890","line":228,"column":29,"nodeType":"777","messageId":"891","endLine":228,"endColumn":34},{"ruleId":"889","severity":1,"message":"890","line":229,"column":35,"nodeType":"777","messageId":"891","endLine":229,"endColumn":40},{"ruleId":"889","severity":1,"message":"890","line":231,"column":3,"nodeType":"777","messageId":"891","endLine":231,"endColumn":8},{"ruleId":"889","severity":1,"message":"890","line":249,"column":22,"nodeType":"777","messageId":"891","endLine":249,"endColumn":27},{"ruleId":"889","severity":1,"message":"890","line":253,"column":24,"nodeType":"777","messageId":"891","endLine":253,"endColumn":29},{"ruleId":"889","severity":1,"message":"890","line":257,"column":22,"nodeType":"777","messageId":"891","endLine":257,"endColumn":27},{"ruleId":"889","severity":1,"message":"890","line":261,"column":25,"nodeType":"777","messageId":"891","endLine":261,"endColumn":30},{"ruleId":"892","severity":2,"message":"893","line":282,"column":1,"nodeType":"894","endLine":282,"endColumn":27,"fix":"900"},{"ruleId":"889","severity":1,"message":"890","line":370,"column":33,"nodeType":"777","messageId":"891","endLine":370,"endColumn":38},{"ruleId":"889","severity":1,"message":"890","line":371,"column":33,"nodeType":"777","messageId":"891","endLine":371,"endColumn":38},{"ruleId":"889","severity":1,"message":"890","line":373,"column":3,"nodeType":"777","messageId":"891","endLine":373,"endColumn":8},{"ruleId":"889","severity":1,"message":"890","line":393,"column":28,"nodeType":"777","messageId":"891","endLine":393,"endColumn":33},{"ruleId":"889","severity":1,"message":"890","line":397,"column":22,"nodeType":"777","messageId":"891","endLine":397,"endColumn":27},{"ruleId":"889","severity":1,"message":"890","line":410,"column":21,"nodeType":"777","messageId":"891","endLine":410,"endColumn":26},{"ruleId":"892","severity":2,"message":"893","line":465,"column":1,"nodeType":"894","endLine":465,"endColumn":27,"fix":"901"},{"ruleId":"775","severity":1,"message":"902","line":1,"column":10,"nodeType":"777","messageId":"778","endLine":1,"endColumn":18},{"ruleId":"775","severity":1,"message":"902","line":1,"column":10,"nodeType":"777","messageId":"778","endLine":1,"endColumn":18},{"ruleId":"785","severity":2,"message":"786","line":19,"column":26,"nodeType":"787","messageId":"788","endLine":19,"endColumn":38,"fix":"903"},{"ruleId":"762","severity":1,"message":"763","line":174,"column":9,"nodeType":"764","messageId":"765","endLine":174,"endColumn":20,"suggestions":"904"},{"ruleId":"785","severity":2,"message":"786","line":42,"column":17,"nodeType":"787","messageId":"788","endLine":42,"endColumn":29,"fix":"905"},{"ruleId":"775","severity":1,"message":"906","line":73,"column":10,"nodeType":"777","messageId":"778","endLine":73,"endColumn":24},{"ruleId":"785","severity":2,"message":"786","line":110,"column":20,"nodeType":"787","messageId":"788","endLine":110,"endColumn":42,"fix":"907"},{"ruleId":"785","severity":2,"message":"786","line":111,"column":64,"nodeType":"787","messageId":"788","endLine":111,"endColumn":89,"fix":"908"},{"ruleId":"785","severity":2,"message":"786","line":116,"column":20,"nodeType":"787","messageId":"788","endLine":116,"endColumn":37,"fix":"909"},{"ruleId":"785","severity":2,"message":"786","line":272,"column":14,"nodeType":"787","messageId":"788","endLine":272,"endColumn":37,"fix":"910"},{"ruleId":"785","severity":2,"message":"786","line":366,"column":17,"nodeType":"787","messageId":"788","endLine":366,"endColumn":29,"fix":"911"},{"ruleId":"785","severity":2,"message":"786","line":32,"column":30,"nodeType":"787","messageId":"788","endLine":32,"endColumn":37,"fix":"912"},{"ruleId":"785","severity":2,"message":"786","line":51,"column":14,"nodeType":"787","messageId":"788","endLine":51,"endColumn":26,"fix":"913"},{"ruleId":"785","severity":2,"message":"786","line":133,"column":43,"nodeType":"787","messageId":"788","endLine":133,"endColumn":50,"fix":"914"},{"ruleId":"785","severity":2,"message":"786","line":142,"column":14,"nodeType":"787","messageId":"788","endLine":142,"endColumn":26,"fix":"915"},{"ruleId":"785","severity":2,"message":"786","line":190,"column":14,"nodeType":"787","messageId":"788","endLine":190,"endColumn":26,"fix":"916"},{"ruleId":"775","severity":1,"message":"917","line":2,"column":17,"nodeType":"777","messageId":"778","endLine":2,"endColumn":22},{"ruleId":"762","severity":1,"message":"763","line":18,"column":7,"nodeType":"764","messageId":"765","endLine":18,"endColumn":18,"suggestions":"918"},{"ruleId":"762","severity":1,"message":"763","line":38,"column":9,"nodeType":"764","messageId":"765","endLine":38,"endColumn":20,"suggestions":"919"},{"ruleId":"920","severity":2,"message":"921","line":46,"column":9,"nodeType":"777","messageId":"922","endLine":46,"endColumn":16},{"ruleId":"762","severity":1,"message":"763","line":56,"column":9,"nodeType":"764","messageId":"765","endLine":56,"endColumn":20,"suggestions":"923"},{"ruleId":"775","severity":1,"message":"924","line":2,"column":10,"nodeType":"777","messageId":"778","endLine":2,"endColumn":31},{"ruleId":"762","severity":1,"message":"763","line":22,"column":9,"nodeType":"764","messageId":"765","endLine":22,"endColumn":20,"suggestions":"925"},"no-console","Unexpected console statement.","MemberExpression","unexpected",["926"],["927"],["928"],["929"],["930"],["931"],["932"],["933"],["934"],"@typescript-eslint/no-unused-vars","'getFormErrorMessage' is defined but never used.","Identifier","unusedVar","jsx-a11y/no-redundant-roles","The element form has an implicit role of form. Defining this explicitly is redundant and should be avoided.","JSXOpeningElement",["935"],["936"],"'TrashIcon' is defined but never used.","curly","Expected { after 'if' condition.","IfStatement","missingCurlyAfterCondition",{"range":"937","text":"938"},{"range":"939","text":"938"},{"range":"940","text":"938"},"Parsing error: Expected corresponding JSX closing tag for 'aside'.",{"range":"941","text":"942"},{"range":"943","text":"944"},{"range":"945","text":"946"},"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'watch'. Either include it or remove the dependency array.","ArrayExpression",["947"],"React Hook useEffect has a complex expression in the dependency array. Extract it to a separate variable so it can be statically checked.","CallExpression",{"range":"948","text":"938"},{"range":"949","text":"950"},{"range":"951","text":"952"},{"range":"953","text":"938"},{"range":"954","text":"955"},{"range":"956","text":"957"},{"range":"958","text":"959"},{"range":"960","text":"961"},{"range":"962","text":"963"},{"range":"964","text":"965"},{"range":"966","text":"967"},{"range":"968","text":"969"},{"range":"970","text":"971"},{"range":"972","text":"973"},"'CalendarIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'onFiltersChange' and 'searchParams'. Either include them or remove the dependency array. If 'onFiltersChange' changes too often, find the parent component that defines it and wrap that definition in useCallback.",["974"],{"range":"975","text":"938"},"'useEffect' is defined but never used.",{"range":"976","text":"938"},["977"],{"range":"978","text":"979"},{"range":"980","text":"981"},{"range":"982","text":"981"},{"range":"983","text":"981"},{"range":"984","text":"981"},{"range":"985","text":"981"},{"range":"986","text":"981"},{"range":"987","text":"979"},{"range":"988","text":"979"},{"range":"989","text":"979"},{"range":"990","text":"981"},{"range":"991","text":"981"},"import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration",{"range":"992","text":"993"},{"range":"994","text":"995"},{"range":"996","text":"997"},{"range":"998","text":"999"},{"range":"1000","text":"1001"},{"range":"1002","text":"981"},{"range":"1003","text":"938"},{"range":"1004","text":"1005"},"'ChevronLeftIcon' is defined but never used.","'ChevronRightIcon' is defined but never used.",{"range":"1006","text":"1007"},"'XMarkIcon' is defined but never used.","'BriefcaseIcon' is defined but never used.","'ChatBubbleLeftRightIcon' is defined but never used.","React Hook useEffect has a missing dependency: 'fetchDrillDownData'. Either include it or remove the dependency array.",["1008"],"prefer-const","'result' is never reassigned. Use 'const' instead.","useConst",{"range":"1009","text":"1010"},{"range":"1011","text":"1012"},{"range":"1013","text":"938"},{"range":"1014","text":"938"},{"range":"1015","text":"938"},{"range":"1016","text":"938"},{"range":"1017","text":"938"},{"range":"1018","text":"1019"},{"range":"1020","text":"938"},{"range":"1021","text":"938"},{"range":"1022","text":"938"},{"range":"1023","text":"938"},{"range":"1024","text":"938"},{"range":"1025","text":"938"},{"range":"1026","text":"938"},{"range":"1027","text":"938"},"React Hook useCallback has an unnecessary dependency: 'queryClient'. Either exclude it or remove the dependency array.",["1028"],"'SessionCache' is defined but never used.","'OfflineQueue' is defined but never used.","'CachePersistence' is defined but never used.","'PerformanceMonitor' is defined but never used.","'trackMutationTime' is assigned a value but never used.","'duration' is assigned a value but never used.",{"range":"1029","text":"938"},"'CacheManager' is defined but never used.",["1030"],["1031"],["1032"],["1033"],["1034"],["1035"],"@typescript-eslint/no-use-before-define","'React' was used before it was defined.","noUseBeforeDefine","import/first","Import in body of module; reorder to top.","ImportDeclaration",{"range":"1036","text":"1037"},["1038"],["1039"],["1040"],["1041"],{"range":"1042","text":"1043"},{"range":"1044","text":"1045"},"'ApiError' is defined but never used.",{"range":"1046","text":"979"},["1047"],{"range":"1048","text":"1019"},"'connectionType' is assigned a value but never used.",{"range":"1049","text":"1050"},{"range":"1051","text":"1052"},{"range":"1053","text":"1054"},{"range":"1055","text":"1056"},{"range":"1057","text":"1019"},{"range":"1058","text":"938"},{"range":"1059","text":"1019"},{"range":"1060","text":"938"},{"range":"1061","text":"1019"},{"range":"1062","text":"1019"},"'Toast' is defined but never used.",["1063"],["1064"],"no-restricted-globals","Unexpected use of 'confirm'.","defaultMessage",["1065"],"'runAccessibilityTests' is defined but never used.",["1066"],{"messageId":"1067","data":"1068","fix":"1069","desc":"1070"},{"messageId":"1067","data":"1071","fix":"1072","desc":"1070"},{"messageId":"1067","data":"1073","fix":"1074","desc":"1070"},{"messageId":"1067","data":"1075","fix":"1076","desc":"1070"},{"messageId":"1067","data":"1077","fix":"1078","desc":"1070"},{"messageId":"1067","data":"1079","fix":"1080","desc":"1070"},{"messageId":"1067","data":"1081","fix":"1082","desc":"1070"},{"messageId":"1067","data":"1083","fix":"1084","desc":"1070"},{"messageId":"1067","data":"1085","fix":"1086","desc":"1070"},{"messageId":"1067","data":"1087","fix":"1088","desc":"1070"},{"messageId":"1067","data":"1089","fix":"1090","desc":"1070"},[1415,1422],"{return;}",[1687,1694],[1947,1954],[2638,2672],"{return 'border-red-300 bg-red-50';}",[2699,2739],"{return 'border-yellow-300 bg-yellow-50';}",[2760,2796],"{return 'border-blue-300 bg-blue-50';}",{"desc":"1091","fix":"1092"},[3580,3587],[3672,3695],"{return [tempInterview];}",[8802,8813],"{return old;}",[2484,2491],[2072,2087],"{return 'Today';}",[2117,2135],"{return 'Tomorrow';}",[2155,2172],"{return 'Overdue';}",[2193,2211],"{return 'Upcoming';}",[2351,2419],"{return { type: 'overdue', label: 'Overdue', color: 'text-red-600' };}",[2446,2513],"{return { type: 'today', label: 'Today', color: 'text-yellow-600' };}",[2543,2614],"{return { type: 'tomorrow', label: 'Tomorrow', color: 'text-blue-600' };}",[2635,2707],"{return { type: 'upcoming', label: 'Upcoming', color: 'text-green-600' };}",[3138,3148],"{return -1;}",[3239,3248],"{return 1;}",{"desc":"1093","fix":"1094"},[6103,6110],[1570,1577],{"messageId":"1067","data":"1095","fix":"1096","desc":"1070"},[592,604],"{return true;}",[955,968],"{return false;}",[1023,1036],[1468,1481],[1824,1837],[2136,2149],[2660,2673],[2901,2913],[3319,3331],[3870,3882],[10216,10229],[10273,10286],[4021,4052],"{filters.status = status as any;}",[4070,4096],"{filters.company = company;}",[4113,4137],"{filters.search = search;}",[4156,4185],"{filters.date_from = dateFrom;}",[4202,4227],"{filters.date_to = dateTo;}",[3172,3185],[3602,3609],[4836,4859],"{params.set(key, value);}",[2846,2865],"{return placeholder;}",{"desc":"1097","fix":"1098"},[1751,1782],"const result: DrillDownData = {};",[6160,6170],"{return '';}",[1040,1047],[1265,1272],[1752,1759],[1217,1224],[2255,2262],[3114,3126],"{return null;}",[853,860],[761,768],[856,863],[1071,1078],[1665,1672],[2203,2210],[913,920],[4786,4793],{"desc":"1099","fix":"1100"},[9446,9453],{"messageId":"1067","data":"1101","fix":"1102","desc":"1070"},{"messageId":"1067","data":"1103","fix":"1104","desc":"1070"},{"messageId":"1067","data":"1105","fix":"1106","desc":"1070"},{"messageId":"1067","data":"1107","fix":"1108","desc":"1070"},{"messageId":"1067","data":"1109","fix":"1110","desc":"1070"},{"messageId":"1067","data":"1111","fix":"1112","desc":"1070"},[0,11860],"import { QueryClient } from '@tanstack/react-query';\nimport { CacheManager } from './cacheManager';\n\n// Export React import for the hook\nimport React from 'react';\n\n// Cache persistence configuration\ninterface PersistenceConfig {\n  version: string;\n  maxAge: number;\n  compress: boolean;\n  includeQueries: string[];\n  excludeQueries: string[];\n}\n\n// Default persistence configuration\nconst DEFAULT_CONFIG: PersistenceConfig = {\n  version: '1.0',\n  maxAge: 24 * 60 * 60 * 1000, // 24 hours\n  compress: false,\n  includeQueries: [\n    'positions',\n    'interviews',\n    'statistics',\n    'auth',\n  ],\n  excludeQueries: [\n    'temp',\n    'draft',\n  ],\n};\n\n// Persisted cache entry\ninterface PersistedCacheEntry {\n  queryKey: any[];\n  data: any;\n  timestamp: number;\n  version: string;\n  dataUpdatedAt: number;\n  staleTime?: number;\n}\n\n// Cache persistence manager\nexport class CachePersistence {\n  private static readonly CACHE_KEY = 'react_query_cache';\n  private static readonly CONFIG_KEY = 'cache_persistence_config';\n  private static config: PersistenceConfig = DEFAULT_CONFIG;\n\n  // Set persistence configuration\n  static setConfig(config: Partial<PersistenceConfig>): void {\n    this.config = { ...DEFAULT_CONFIG, ...config };\n    localStorage.setItem(this.CONFIG_KEY, JSON.stringify(this.config));\n  }\n\n  // Get persistence configuration\n  static getConfig(): PersistenceConfig {\n    try {\n      const stored = localStorage.getItem(this.CONFIG_KEY);\n      if (stored) {\n        this.config = { ...DEFAULT_CONFIG, ...JSON.parse(stored) };\n      }\n    } catch (error) {\n      console.warn('Failed to load cache persistence config:', error);\n    }\n    return this.config;\n  }\n\n  // Check if query should be persisted\n  private static shouldPersistQuery(queryKey: any[]): boolean {\n    const keyString = JSON.stringify(queryKey);\n    \n    // Check exclude patterns\n    if (this.config.excludeQueries.some(pattern => keyString.includes(pattern))) {\n      return false;\n    }\n\n    // Check include patterns\n    if (this.config.includeQueries.length > 0) {\n      return this.config.includeQueries.some(pattern => keyString.includes(pattern));\n    }\n\n    return true;\n  }\n\n  // Persist query client cache\n  static persistCache(queryClient: QueryClient): void {\n    try {\n      const queryCache = queryClient.getQueryCache();\n      const queries = queryCache.getAll();\n      \n      const persistedEntries: PersistedCacheEntry[] = [];\n\n      queries.forEach(query => {\n        if (\n          query.state.data !== undefined &&\n          query.state.status === 'success' &&\n          this.shouldPersistQuery(query.queryKey)\n        ) {\n          const entry: PersistedCacheEntry = {\n            queryKey: query.queryKey,\n            data: query.state.data,\n            timestamp: Date.now(),\n            version: this.config.version,\n            dataUpdatedAt: query.state.dataUpdatedAt,\n            staleTime: query.options.staleTime,\n          };\n\n          persistedEntries.push(entry);\n        }\n      });\n\n      const cacheData = {\n        entries: persistedEntries,\n        timestamp: Date.now(),\n        version: this.config.version,\n      };\n\n      const serialized = this.config.compress \n        ? this.compressData(JSON.stringify(cacheData))\n        : JSON.stringify(cacheData);\n\n      localStorage.setItem(this.CACHE_KEY, serialized);\n      \n      console.log(`Persisted ${persistedEntries.length} cache entries`);\n    } catch (error) {\n      console.error('Failed to persist cache:', error);\n    }\n  }\n\n  // Restore query client cache\n  static restoreCache(queryClient: QueryClient): void {\n    try {\n      const stored = localStorage.getItem(this.CACHE_KEY);\n      if (!stored) {\n        return;\n      }\n\n      const serialized = this.config.compress \n        ? this.decompressData(stored)\n        : stored;\n\n      const cacheData = JSON.parse(serialized);\n\n      // Check version compatibility\n      if (cacheData.version !== this.config.version) {\n        console.log('Cache version mismatch, clearing persisted cache');\n        localStorage.removeItem(this.CACHE_KEY);\n        return;\n      }\n\n      // Check if cache is too old\n      if (Date.now() - cacheData.timestamp > this.config.maxAge) {\n        console.log('Persisted cache is too old, clearing');\n        localStorage.removeItem(this.CACHE_KEY);\n        return;\n      }\n\n      const queryCache = queryClient.getQueryCache();\n      let restoredCount = 0;\n\n      cacheData.entries.forEach((entry: PersistedCacheEntry) => {\n        try {\n          // Check if entry is still valid\n          const entryAge = Date.now() - entry.dataUpdatedAt;\n          const isStale = entry.staleTime ? entryAge > entry.staleTime : false;\n\n          if (!isStale || entryAge < this.config.maxAge) {\n            queryCache.build(queryClient, {\n              queryKey: entry.queryKey,\n              queryFn: () => Promise.resolve(entry.data),\n            }).setData(entry.data, {\n              updatedAt: entry.dataUpdatedAt,\n            });\n\n            restoredCount++;\n          }\n        } catch (error) {\n          console.warn('Failed to restore cache entry:', entry.queryKey, error);\n        }\n      });\n\n      console.log(`Restored ${restoredCount} cache entries from persistence`);\n    } catch (error) {\n      console.error('Failed to restore cache:', error);\n      // Clear corrupted cache\n      localStorage.removeItem(this.CACHE_KEY);\n    }\n  }\n\n  // Clear persisted cache\n  static clearPersistedCache(): void {\n    localStorage.removeItem(this.CACHE_KEY);\n  }\n\n  // Get persisted cache size\n  static getPersistedCacheSize(): { size: number; entryCount: number } {\n    try {\n      const stored = localStorage.getItem(this.CACHE_KEY);\n      if (!stored) {\n        return { size: 0, entryCount: 0 };\n      }\n\n      const serialized = this.config.compress \n        ? this.decompressData(stored)\n        : stored;\n\n      const cacheData = JSON.parse(serialized);\n      \n      return {\n        size: new Blob([stored]).size,\n        entryCount: cacheData.entries?.length || 0,\n      };\n    } catch (error) {\n      console.warn('Failed to get persisted cache size:', error);\n      return { size: 0, entryCount: 0 };\n    }\n  }\n\n  // Compress data (simple base64 compression)\n  private static compressData(data: string): string {\n    try {\n      return btoa(data);\n    } catch (error) {\n      console.warn('Failed to compress data:', error);\n      return data;\n    }\n  }\n\n  // Decompress data\n  private static decompressData(data: string): string {\n    try {\n      return atob(data);\n    } catch (error) {\n      console.warn('Failed to decompress data:', error);\n      return data;\n    }\n  }\n\n  // Auto-persist setup\n  static setupAutoPersist(queryClient: QueryClient, interval: number = 30000): () => void {\n    // Persist on page unload\n    const handleBeforeUnload = () => {\n      this.persistCache(queryClient);\n    };\n\n    // Persist periodically\n    const persistInterval = setInterval(() => {\n      this.persistCache(queryClient);\n    }, interval);\n\n    // Persist on visibility change (when tab becomes hidden)\n    const handleVisibilityChange = () => {\n      if (document.hidden) {\n        this.persistCache(queryClient);\n      }\n    };\n\n    window.addEventListener('beforeunload', handleBeforeUnload);\n    document.addEventListener('visibilitychange', handleVisibilityChange);\n\n    return () => {\n      clearInterval(persistInterval);\n      window.removeEventListener('beforeunload', handleBeforeUnload);\n      document.removeEventListener('visibilitychange', handleVisibilityChange);\n    };\n  }\n\n  // Selective cache restoration\n  static restoreSelectiveCache(\n    queryClient: QueryClient, \n    queryKeyPatterns: string[]\n  ): void {\n    try {\n      const stored = localStorage.getItem(this.CACHE_KEY);\n      if (!stored) {\n        return;\n      }\n\n      const serialized = this.config.compress \n        ? this.decompressData(stored)\n        : stored;\n\n      const cacheData = JSON.parse(serialized);\n\n      if (cacheData.version !== this.config.version) {\n        return;\n      }\n\n      const queryCache = queryClient.getQueryCache();\n      let restoredCount = 0;\n\n      cacheData.entries.forEach((entry: PersistedCacheEntry) => {\n        const keyString = JSON.stringify(entry.queryKey);\n        const shouldRestore = queryKeyPatterns.some(pattern => \n          keyString.includes(pattern)\n        );\n\n        if (shouldRestore) {\n          try {\n            queryCache.build(queryClient, {\n              queryKey: entry.queryKey,\n              queryFn: () => Promise.resolve(entry.data),\n            }).setData(entry.data, {\n              updatedAt: entry.dataUpdatedAt,\n            });\n\n            restoredCount++;\n          } catch (error) {\n            console.warn('Failed to restore selective cache entry:', entry.queryKey, error);\n          }\n        }\n      });\n\n      console.log(`Selectively restored ${restoredCount} cache entries`);\n    } catch (error) {\n      console.error('Failed to restore selective cache:', error);\n    }\n  }\n\n  // Cache migration for version updates\n  static migrateCache(\n    queryClient: QueryClient,\n    migrationFn: (oldData: any) => any\n  ): void {\n    try {\n      const stored = localStorage.getItem(this.CACHE_KEY);\n      if (!stored) {\n        return;\n      }\n\n      const serialized = this.config.compress \n        ? this.decompressData(stored)\n        : stored;\n\n      const cacheData = JSON.parse(serialized);\n\n      // Apply migration to each entry\n      const migratedEntries = cacheData.entries.map((entry: PersistedCacheEntry) => {\n        try {\n          return {\n            ...entry,\n            data: migrationFn(entry.data),\n            version: this.config.version,\n          };\n        } catch (error) {\n          console.warn('Failed to migrate cache entry:', entry.queryKey, error);\n          return null;\n        }\n      }).filter(Boolean);\n\n      // Save migrated cache\n      const migratedCacheData = {\n        entries: migratedEntries,\n        timestamp: Date.now(),\n        version: this.config.version,\n      };\n\n      const migratedSerialized = this.config.compress \n        ? this.compressData(JSON.stringify(migratedCacheData))\n        : JSON.stringify(migratedCacheData);\n\n      localStorage.setItem(this.CACHE_KEY, migratedSerialized);\n\n      console.log(`Migrated ${migratedEntries.length} cache entries`);\n    } catch (error) {\n      console.error('Failed to migrate cache:', error);\n      // Clear corrupted cache\n      localStorage.removeItem(this.CACHE_KEY);\n    }\n  }\n}\n\n// Hook for cache persistence\nexport const useCachePersistence = (queryClient: QueryClient) => {\n  const [isRestored, setIsRestored] = React.useState(false);\n  const [persistenceStats, setPersistenceStats] = React.useState({\n    size: 0,\n    entryCount: 0,\n  });\n\n  React.useEffect(() => {\n    // Restore cache on mount\n    CachePersistence.restoreCache(queryClient);\n    setIsRestored(true);\n\n    // Set up auto-persist\n    const cleanup = CachePersistence.setupAutoPersist(queryClient);\n\n    // Update stats\n    const updateStats = () => {\n      setPersistenceStats(CachePersistence.getPersistedCacheSize());\n    };\n\n    updateStats();\n    const statsInterval = setInterval(updateStats, 10000); // Every 10 seconds\n\n    return () => {\n      cleanup();\n      clearInterval(statsInterval);\n    };\n  }, [queryClient]);\n\n  const persistCache = React.useCallback(() => {\n    CachePersistence.persistCache(queryClient);\n  }, [queryClient]);\n\n  const clearPersistedCache = React.useCallback(() => {\n    CachePersistence.clearPersistedCache();\n    setPersistenceStats({ size: 0, entryCount: 0 });\n  }, []);\n\n  const setConfig = React.useCallback((config: Partial<PersistenceConfig>) => {\n    CachePersistence.setConfig(config);\n  }, []);\n\n  return {\n    isRestored,\n    persistenceStats,\n    persistCache,\n    clearPersistedCache,\n    setConfig,\n  };\n};",{"messageId":"1067","data":"1113","fix":"1114","desc":"1070"},{"messageId":"1067","data":"1115","fix":"1116","desc":"1070"},{"messageId":"1067","data":"1117","fix":"1118","desc":"1070"},{"messageId":"1067","data":"1119","fix":"1120","desc":"1070"},[0,7929],"import { CacheManager } from './cacheManager';\n\n// Export React import for the hook\nimport React from 'react';\n\n// Offline queue item interface\nexport interface OfflineQueueItem {\n  id: string;\n  type: 'create' | 'update' | 'delete';\n  resource: 'position' | 'interview';\n  data: any;\n  timestamp: number;\n  retryCount: number;\n  maxRetries: number;\n  url: string;\n  method: string;\n  headers?: Record<string, string>;\n}\n\n// Offline queue manager\nexport class OfflineQueue {\n  private static readonly QUEUE_KEY = 'offline_queue';\n  private static readonly MAX_RETRIES = 3;\n  private static readonly RETRY_DELAY = 1000; // 1 second base delay\n  private static isProcessing = false;\n  private static listeners: Array<(queue: OfflineQueueItem[]) => void> = [];\n\n  // Add item to offline queue\n  static addToQueue(item: Omit<OfflineQueueItem, 'id' | 'timestamp' | 'retryCount' | 'maxRetries'>): void {\n    const queueItem: OfflineQueueItem = {\n      ...item,\n      id: crypto.randomUUID(),\n      timestamp: Date.now(),\n      retryCount: 0,\n      maxRetries: this.MAX_RETRIES,\n    };\n\n    const queue = this.getQueue();\n    queue.push(queueItem);\n    this.saveQueue(queue);\n    this.notifyListeners(queue);\n\n    console.log('Added to offline queue:', queueItem);\n  }\n\n  // Get current queue\n  static getQueue(): OfflineQueueItem[] {\n    try {\n      const stored = localStorage.getItem(this.QUEUE_KEY);\n      return stored ? JSON.parse(stored) : [];\n    } catch (error) {\n      console.warn('Failed to load offline queue:', error);\n      return [];\n    }\n  }\n\n  // Save queue to localStorage\n  private static saveQueue(queue: OfflineQueueItem[]): void {\n    try {\n      localStorage.setItem(this.QUEUE_KEY, JSON.stringify(queue));\n    } catch (error) {\n      console.warn('Failed to save offline queue:', error);\n    }\n  }\n\n  // Remove item from queue\n  static removeFromQueue(id: string): void {\n    const queue = this.getQueue().filter(item => item.id !== id);\n    this.saveQueue(queue);\n    this.notifyListeners(queue);\n  }\n\n  // Update retry count for item\n  private static updateRetryCount(id: string): void {\n    const queue = this.getQueue();\n    const item = queue.find(item => item.id === id);\n    if (item) {\n      item.retryCount++;\n      this.saveQueue(queue);\n      this.notifyListeners(queue);\n    }\n  }\n\n  // Process offline queue\n  static async processQueue(): Promise<void> {\n    if (this.isProcessing || !navigator.onLine) {\n      return;\n    }\n\n    this.isProcessing = true;\n    const queue = this.getQueue();\n\n    console.log(`Processing offline queue with ${queue.length} items`);\n\n    for (const item of queue) {\n      try {\n        await this.processQueueItem(item);\n        this.removeFromQueue(item.id);\n        console.log('Successfully processed offline queue item:', item.id);\n      } catch (error) {\n        console.error('Failed to process offline queue item:', item.id, error);\n        \n        if (item.retryCount < item.maxRetries) {\n          this.updateRetryCount(item.id);\n          // Exponential backoff delay\n          const delay = this.RETRY_DELAY * Math.pow(2, item.retryCount);\n          setTimeout(() => {\n            // Will be processed in next queue processing cycle\n          }, delay);\n        } else {\n          // Max retries reached, remove from queue\n          console.error('Max retries reached for offline queue item:', item.id);\n          this.removeFromQueue(item.id);\n        }\n      }\n    }\n\n    this.isProcessing = false;\n  }\n\n  // Process individual queue item\n  private static async processQueueItem(item: OfflineQueueItem): Promise<void> {\n    const response = await fetch(item.url, {\n      method: item.method,\n      headers: {\n        'Content-Type': 'application/json',\n        ...item.headers,\n      },\n      body: item.data ? JSON.stringify(item.data) : undefined,\n    });\n\n    if (!response.ok) {\n      throw new Error(`HTTP ${response.status}: ${response.statusText}`);\n    }\n\n    return response.json();\n  }\n\n  // Clear entire queue\n  static clearQueue(): void {\n    localStorage.removeItem(this.QUEUE_KEY);\n    this.notifyListeners([]);\n  }\n\n  // Get queue size\n  static getQueueSize(): number {\n    return this.getQueue().length;\n  }\n\n  // Check if queue has items\n  static hasItems(): boolean {\n    return this.getQueueSize() > 0;\n  }\n\n  // Add listener for queue changes\n  static addListener(listener: (queue: OfflineQueueItem[]) => void): () => void {\n    this.listeners.push(listener);\n    return () => {\n      this.listeners = this.listeners.filter(l => l !== listener);\n    };\n  }\n\n  // Notify all listeners of queue changes\n  private static notifyListeners(queue: OfflineQueueItem[]): void {\n    this.listeners.forEach(listener => {\n      try {\n        listener(queue);\n      } catch (error) {\n        console.error('Error in offline queue listener:', error);\n      }\n    });\n  }\n\n  // Initialize offline queue\n  static initialize(): void {\n    // Process queue when coming back online\n    window.addEventListener('online', () => {\n      console.log('Network connection restored, processing offline queue');\n      this.processQueue();\n    });\n\n    // Process queue on page load if online\n    if (navigator.onLine) {\n      setTimeout(() => this.processQueue(), 1000);\n    }\n\n    // Periodic queue processing (in case of missed online events)\n    setInterval(() => {\n      if (navigator.onLine && this.hasItems()) {\n        this.processQueue();\n      }\n    }, 30000); // Every 30 seconds\n  }\n\n  // Get queue statistics\n  static getStatistics(): {\n    totalItems: number;\n    itemsByType: Record<string, number>;\n    itemsByResource: Record<string, number>;\n    oldestItem?: Date;\n    newestItem?: Date;\n  } {\n    const queue = this.getQueue();\n    \n    const itemsByType = queue.reduce((acc, item) => {\n      acc[item.type] = (acc[item.type] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n\n    const itemsByResource = queue.reduce((acc, item) => {\n      acc[item.resource] = (acc[item.resource] || 0) + 1;\n      return acc;\n    }, {} as Record<string, number>);\n\n    const timestamps = queue.map(item => item.timestamp);\n    const oldestItem = timestamps.length > 0 ? new Date(Math.min(...timestamps)) : undefined;\n    const newestItem = timestamps.length > 0 ? new Date(Math.max(...timestamps)) : undefined;\n\n    return {\n      totalItems: queue.length,\n      itemsByType,\n      itemsByResource,\n      oldestItem,\n      newestItem,\n    };\n  }\n}\n\n// Hook for using offline queue\nexport const useOfflineQueue = () => {\n  const [queue, setQueue] = React.useState<OfflineQueueItem[]>(OfflineQueue.getQueue());\n  const [isOnline, setIsOnline] = React.useState(navigator.onLine);\n\n  React.useEffect(() => {\n    // Listen for online/offline events\n    const handleOnline = () => setIsOnline(true);\n    const handleOffline = () => setIsOnline(false);\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    // Listen for queue changes\n    const unsubscribe = OfflineQueue.addListener(setQueue);\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n      unsubscribe();\n    };\n  }, []);\n\n  const addToQueue = React.useCallback((item: Omit<OfflineQueueItem, 'id' | 'timestamp' | 'retryCount' | 'maxRetries'>) => {\n    OfflineQueue.addToQueue(item);\n  }, []);\n\n  const processQueue = React.useCallback(() => {\n    OfflineQueue.processQueue();\n  }, []);\n\n  const clearQueue = React.useCallback(() => {\n    OfflineQueue.clearQueue();\n  }, []);\n\n  const getStatistics = React.useCallback(() => {\n    return OfflineQueue.getStatistics();\n  }, []);\n\n  return {\n    queue,\n    isOnline,\n    addToQueue,\n    processQueue,\n    clearQueue,\n    getStatistics,\n    hasItems: queue.length > 0,\n  };\n};\n\n// Initialize offline queue when module loads\nif (typeof window !== 'undefined') {\n  OfflineQueue.initialize();\n}",[0,13969],"// Performance monitoring utilities\n// Export React import for the hook\nimport React from 'react';\n\nexport interface PerformanceEntry {\n  name: string;\n  startTime: number;\n  duration: number;\n  type: 'query' | 'mutation' | 'render' | 'navigation' | 'cache' | 'network';\n  metadata?: Record<string, any>;\n}\n\nexport interface PerformanceMetrics {\n  entries: PerformanceEntry[];\n  averages: Record<string, number>;\n  totals: Record<string, number>;\n  counts: Record<string, number>;\n}\n\n// Performance monitor class\nexport class PerformanceMonitor {\n  private static entries: PerformanceEntry[] = [];\n  private static readonly MAX_ENTRIES = 1000;\n  private static listeners: Array<(entry: PerformanceEntry) => void> = [];\n\n  // Start performance measurement\n  static startMeasurement(name: string, type: PerformanceEntry['type'], metadata?: Record<string, any>): () => void {\n    const startTime = performance.now();\n    \n    return () => {\n      const duration = performance.now() - startTime;\n      this.addEntry({\n        name,\n        startTime,\n        duration,\n        type,\n        metadata,\n      });\n    };\n  }\n\n  // Add performance entry\n  static addEntry(entry: PerformanceEntry): void {\n    this.entries.push(entry);\n    \n    // Keep only the most recent entries\n    if (this.entries.length > this.MAX_ENTRIES) {\n      this.entries = this.entries.slice(-this.MAX_ENTRIES);\n    }\n\n    // Notify listeners\n    this.listeners.forEach(listener => {\n      try {\n        listener(entry);\n      } catch (error) {\n        console.error('Error in performance monitor listener:', error);\n      }\n    });\n  }\n\n  // Get all entries\n  static getEntries(): PerformanceEntry[] {\n    return [...this.entries];\n  }\n\n  // Get entries by type\n  static getEntriesByType(type: PerformanceEntry['type']): PerformanceEntry[] {\n    return this.entries.filter(entry => entry.type === type);\n  }\n\n  // Get entries by name pattern\n  static getEntriesByName(namePattern: string): PerformanceEntry[] {\n    return this.entries.filter(entry => entry.name.includes(namePattern));\n  }\n\n  // Get performance metrics\n  static getMetrics(): PerformanceMetrics {\n    const averages: Record<string, number> = {};\n    const totals: Record<string, number> = {};\n    const counts: Record<string, number> = {};\n\n    // Group entries by type\n    const entriesByType = this.entries.reduce((acc, entry) => {\n      if (!acc[entry.type]) {\n        acc[entry.type] = [];\n      }\n      acc[entry.type].push(entry);\n      return acc;\n    }, {} as Record<string, PerformanceEntry[]>);\n\n    // Calculate metrics for each type\n    Object.entries(entriesByType).forEach(([type, entries]) => {\n      const durations = entries.map(entry => entry.duration);\n      const total = durations.reduce((sum, duration) => sum + duration, 0);\n      \n      totals[type] = total;\n      counts[type] = entries.length;\n      averages[type] = entries.length > 0 ? total / entries.length : 0;\n    });\n\n    return {\n      entries: this.entries,\n      averages,\n      totals,\n      counts,\n    };\n  }\n\n  // Get slow operations (above threshold)\n  static getSlowOperations(threshold: number = 1000): PerformanceEntry[] {\n    return this.entries.filter(entry => entry.duration > threshold);\n  }\n\n  // Get performance summary\n  static getSummary(): {\n    totalOperations: number;\n    averageDuration: number;\n    slowOperations: number;\n    byType: Record<string, { count: number; average: number; total: number }>;\n  } {\n    const metrics = this.getMetrics();\n    const slowOps = this.getSlowOperations();\n    \n    const totalDuration = Object.values(metrics.totals).reduce((sum, total) => sum + total, 0);\n    const totalCount = Object.values(metrics.counts).reduce((sum, count) => sum + count, 0);\n\n    const byType: Record<string, { count: number; average: number; total: number }> = {};\n    Object.keys(metrics.counts).forEach(type => {\n      byType[type] = {\n        count: metrics.counts[type],\n        average: metrics.averages[type],\n        total: metrics.totals[type],\n      };\n    });\n\n    return {\n      totalOperations: totalCount,\n      averageDuration: totalCount > 0 ? totalDuration / totalCount : 0,\n      slowOperations: slowOps.length,\n      byType,\n    };\n  }\n\n  // Clear all entries\n  static clear(): void {\n    this.entries = [];\n  }\n\n  // Add listener for new entries\n  static addListener(listener: (entry: PerformanceEntry) => void): () => void {\n    this.listeners.push(listener);\n    return () => {\n      this.listeners = this.listeners.filter(l => l !== listener);\n    };\n  }\n\n  // Export performance data\n  static exportData(): string {\n    const data = {\n      entries: this.entries,\n      metrics: this.getMetrics(),\n      summary: this.getSummary(),\n      timestamp: new Date().toISOString(),\n      userAgent: navigator.userAgent,\n      url: window.location.href,\n    };\n\n    return JSON.stringify(data, null, 2);\n  }\n\n  // Monitor Core Web Vitals\n  static monitorWebVitals(): void {\n    // Largest Contentful Paint (LCP)\n    if ('PerformanceObserver' in window) {\n      try {\n        const lcpObserver = new PerformanceObserver((list) => {\n          const entries = list.getEntries();\n          const lastEntry = entries[entries.length - 1];\n          \n          this.addEntry({\n            name: 'LCP',\n            startTime: lastEntry.startTime,\n            duration: lastEntry.startTime,\n            type: 'render',\n            metadata: {\n              element: lastEntry.element?.tagName,\n              url: lastEntry.url,\n            },\n          });\n        });\n        \n        lcpObserver.observe({ entryTypes: ['largest-contentful-paint'] });\n      } catch (error) {\n        console.warn('Failed to observe LCP:', error);\n      }\n\n      // First Input Delay (FID)\n      try {\n        const fidObserver = new PerformanceObserver((list) => {\n          const entries = list.getEntries();\n          entries.forEach(entry => {\n            this.addEntry({\n              name: 'FID',\n              startTime: entry.startTime,\n              duration: entry.processingStart - entry.startTime,\n              type: 'render',\n              metadata: {\n                inputType: (entry as any).name,\n              },\n            });\n          });\n        });\n        \n        fidObserver.observe({ entryTypes: ['first-input'] });\n      } catch (error) {\n        console.warn('Failed to observe FID:', error);\n      }\n\n      // Cumulative Layout Shift (CLS)\n      try {\n        const clsObserver = new PerformanceObserver((list) => {\n          const entries = list.getEntries();\n          entries.forEach(entry => {\n            if (!(entry as any).hadRecentInput) {\n              this.addEntry({\n                name: 'CLS',\n                startTime: entry.startTime,\n                duration: (entry as any).value,\n                type: 'render',\n                metadata: {\n                  value: (entry as any).value,\n                  sources: (entry as any).sources?.map((source: any) => ({\n                    element: source.node?.tagName,\n                  })),\n                },\n              });\n            }\n          });\n        });\n        \n        clsObserver.observe({ entryTypes: ['layout-shift'] });\n      } catch (error) {\n        console.warn('Failed to observe CLS:', error);\n      }\n    }\n  }\n\n  // Monitor navigation timing\n  static monitorNavigation(): void {\n    if ('performance' in window && 'getEntriesByType' in performance) {\n      const navigationEntries = performance.getEntriesByType('navigation') as PerformanceNavigationTiming[];\n      \n      navigationEntries.forEach(entry => {\n        // DNS lookup time\n        if (entry.domainLookupEnd > entry.domainLookupStart) {\n          this.addEntry({\n            name: 'DNS Lookup',\n            startTime: entry.domainLookupStart,\n            duration: entry.domainLookupEnd - entry.domainLookupStart,\n            type: 'navigation',\n          });\n        }\n\n        // TCP connection time\n        if (entry.connectEnd > entry.connectStart) {\n          this.addEntry({\n            name: 'TCP Connection',\n            startTime: entry.connectStart,\n            duration: entry.connectEnd - entry.connectStart,\n            type: 'navigation',\n          });\n        }\n\n        // Request/Response time\n        if (entry.responseEnd > entry.requestStart) {\n          this.addEntry({\n            name: 'Request/Response',\n            startTime: entry.requestStart,\n            duration: entry.responseEnd - entry.requestStart,\n            type: 'navigation',\n          });\n        }\n\n        // DOM processing time\n        if (entry.domComplete > entry.domLoading) {\n          this.addEntry({\n            name: 'DOM Processing',\n            startTime: entry.domLoading,\n            duration: entry.domComplete - entry.domLoading,\n            type: 'navigation',\n          });\n        }\n\n        // Page load time\n        if (entry.loadEventEnd > entry.navigationStart) {\n          this.addEntry({\n            name: 'Page Load',\n            startTime: entry.navigationStart,\n            duration: entry.loadEventEnd - entry.navigationStart,\n            type: 'navigation',\n          });\n        }\n      });\n    }\n  }\n\n  // Monitor resource loading\n  static monitorResources(): void {\n    if ('PerformanceObserver' in window) {\n      try {\n        const resourceObserver = new PerformanceObserver((list) => {\n          const entries = list.getEntries();\n          entries.forEach(entry => {\n            const resourceEntry = entry as PerformanceResourceTiming;\n            \n            this.addEntry({\n              name: `Resource: ${resourceEntry.name.split('/').pop() || 'unknown'}`,\n              startTime: resourceEntry.startTime,\n              duration: resourceEntry.duration,\n              type: 'network',\n              metadata: {\n                url: resourceEntry.name,\n                initiatorType: resourceEntry.initiatorType,\n                transferSize: resourceEntry.transferSize,\n                encodedBodySize: resourceEntry.encodedBodySize,\n                decodedBodySize: resourceEntry.decodedBodySize,\n              },\n            });\n          });\n        });\n        \n        resourceObserver.observe({ entryTypes: ['resource'] });\n      } catch (error) {\n        console.warn('Failed to observe resources:', error);\n      }\n    }\n  }\n\n  // Initialize all monitoring\n  static initialize(): void {\n    this.monitorWebVitals();\n    this.monitorNavigation();\n    this.monitorResources();\n\n    // Monitor long tasks\n    if ('PerformanceObserver' in window) {\n      try {\n        const longTaskObserver = new PerformanceObserver((list) => {\n          const entries = list.getEntries();\n          entries.forEach(entry => {\n            this.addEntry({\n              name: 'Long Task',\n              startTime: entry.startTime,\n              duration: entry.duration,\n              type: 'render',\n              metadata: {\n                attribution: (entry as any).attribution,\n              },\n            });\n          });\n        });\n        \n        longTaskObserver.observe({ entryTypes: ['longtask'] });\n      } catch (error) {\n        console.warn('Failed to observe long tasks:', error);\n      }\n    }\n  }\n}\n\n// React hook for performance monitoring\nexport const usePerformanceMonitor = () => {\n  const [metrics, setMetrics] = React.useState<PerformanceMetrics>(PerformanceMonitor.getMetrics());\n  const [summary, setSummary] = React.useState(PerformanceMonitor.getSummary());\n\n  React.useEffect(() => {\n    // Update metrics periodically\n    const updateMetrics = () => {\n      setMetrics(PerformanceMonitor.getMetrics());\n      setSummary(PerformanceMonitor.getSummary());\n    };\n\n    const interval = setInterval(updateMetrics, 5000); // Every 5 seconds\n\n    // Listen for new entries\n    const unsubscribe = PerformanceMonitor.addListener(() => {\n      updateMetrics();\n    });\n\n    return () => {\n      clearInterval(interval);\n      unsubscribe();\n    };\n  }, []);\n\n  const startMeasurement = React.useCallback((name: string, type: PerformanceEntry['type'], metadata?: Record<string, any>) => {\n    return PerformanceMonitor.startMeasurement(name, type, metadata);\n  }, []);\n\n  const exportData = React.useCallback(() => {\n    const data = PerformanceMonitor.exportData();\n    const blob = new Blob([data], { type: 'application/json' });\n    const url = URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = `performance-data-${Date.now()}.json`;\n    document.body.appendChild(a);\n    a.click();\n    document.body.removeChild(a);\n    URL.revokeObjectURL(url);\n  }, []);\n\n  const clearData = React.useCallback(() => {\n    PerformanceMonitor.clear();\n    setMetrics(PerformanceMonitor.getMetrics());\n    setSummary(PerformanceMonitor.getSummary());\n  }, []);\n\n  return {\n    metrics,\n    summary,\n    startMeasurement,\n    exportData,\n    clearData,\n    getSlowOperations: PerformanceMonitor.getSlowOperations,\n  };\n};\n\n// Performance measurement decorator\nexport const measurePerformance = (name: string, type: PerformanceEntry['type'] = 'render') => {\n  return (target: any, propertyKey: string, descriptor: PropertyDescriptor) => {\n    const originalMethod = descriptor.value;\n\n    descriptor.value = function (...args: any[]) {\n      const endMeasurement = PerformanceMonitor.startMeasurement(\n        `${target.constructor.name}.${propertyKey}`,\n        type,\n        { name, args: args.length }\n      );\n\n      try {\n        const result = originalMethod.apply(this, args);\n        \n        if (result instanceof Promise) {\n          return result.finally(() => {\n            endMeasurement();\n          });\n        } else {\n          endMeasurement();\n          return result;\n        }\n      } catch (error) {\n        endMeasurement();\n        throw error;\n      }\n    };\n\n    return descriptor;\n  };\n};\n\n// Initialize performance monitoring when module loads\nif (typeof window !== 'undefined') {\n  PerformanceMonitor.initialize();\n}",[518,530],{"messageId":"1067","data":"1121","fix":"1122","desc":"1070"},[1104,1116],[3443,3465],"{return 'text-red-500';}",[3529,3554],"{return 'text-yellow-500';}",[3641,3658],"{return 'Offline';}",[6783,6806],"{return <>{children}</>;}",[9560,9572],[694,701],[1123,1135],[3778,3785],[3969,3981],[5397,5409],{"messageId":"1067","data":"1123","fix":"1124","desc":"1070"},{"messageId":"1067","data":"1125","fix":"1126","desc":"1070"},{"messageId":"1067","data":"1127","fix":"1128","desc":"1070"},{"messageId":"1067","data":"1129","fix":"1130","desc":"1070"},"removeConsole",{"propertyName":"1131"},{"range":"1132","text":"1133"},"Remove the console.log().",{"propertyName":"1131"},{"range":"1134","text":"1133"},{"propertyName":"1131"},{"range":"1135","text":"1133"},{"propertyName":"1131"},{"range":"1136","text":"1133"},{"propertyName":"1131"},{"range":"1137","text":"1133"},{"propertyName":"1131"},{"range":"1138","text":"1133"},{"propertyName":"1131"},{"range":"1139","text":"1133"},{"propertyName":"1131"},{"range":"1140","text":"1133"},{"propertyName":"1131"},{"range":"1141","text":"1133"},{"propertyName":"1131"},{"range":"1142","text":"1133"},{"propertyName":"1131"},{"range":"1143","text":"1133"},"Update the dependencies array to be: [isDirty, mode, positionId, watch]",{"range":"1144","text":"1145"},"Update the dependencies array to be: [onFiltersChange, searchParams]",{"range":"1146","text":"1147"},{"propertyName":"1131"},{"range":"1148","text":"1133"},"Update the dependencies array to be: [fetchDrillDownData, isOpen, type, value]",{"range":"1149","text":"1150"},"Update the dependencies array to be: [invalidatePosition, invalidatePositions, invalidateInterview, invalidateInterviews, invalidateStatistics, removeFromCache]",{"range":"1151","text":"1152"},{"propertyName":"1131"},{"range":"1153","text":"1133"},{"propertyName":"1131"},{"range":"1154","text":"1133"},{"propertyName":"1131"},{"range":"1155","text":"1133"},{"propertyName":"1131"},{"range":"1156","text":"1133"},{"propertyName":"1131"},{"range":"1157","text":"1133"},{"propertyName":"1131"},{"range":"1158","text":"1133"},{"propertyName":"1131"},{"range":"1159","text":"1133"},{"propertyName":"1131"},{"range":"1160","text":"1133"},{"propertyName":"1131"},{"range":"1161","text":"1133"},{"propertyName":"1131"},{"range":"1162","text":"1133"},{"propertyName":"1131"},{"range":"1163","text":"1133"},{"propertyName":"1131"},{"range":"1164","text":"1133"},{"propertyName":"1131"},{"range":"1165","text":"1133"},{"propertyName":"1131"},{"range":"1166","text":"1133"},{"propertyName":"1131"},{"range":"1167","text":"1133"},"log",[5960,6004],"",[1183,1226],[1383,1419],[1679,1734],[1895,1937],[2817,2869],[3485,3554],[11771,11815],[13038,13082],[7011,7055],[8278,8322],[1788,1824],"[isDirty, mode, positionId, watch]",[3018,3020],"[onFiltersChange, searchParams]",[953,989],[1618,1639],"[fetchDrillDownData, isOpen, type, value]",[7894,8063],"[invalidatePosition, invalidatePositions, invalidateInterview, invalidateInterviews, invalidateStatistics, removeFromCache]",[3288,3354],[3900,3964],[4149,4201],[5101,5173],[8779,8846],[10215,10279],[1143,1193],[2464,2531],[2667,2734],[4948,5017],[4841,4879],[397,441],[971,1025],[1595,1639],[674,708]]