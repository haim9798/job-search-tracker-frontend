{"ast":null,"code":"import _objectSpread from\"/home/haim/github/job-search-tracker-api/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{PositionStatus}from'../types';// Define filter combination rules\nconst FILTER_RULES=[// Date validation rules\n{name:'date_range_order',condition:filters=>{if(!filters.date_from||!filters.date_to)return true;return new Date(filters.date_from)<=new Date(filters.date_to);},message:'Start date must be before or equal to end date',type:'error'},{name:'future_date_warning',condition:filters=>{const today=new Date().toISOString().split('T')[0];if(filters.date_from&&filters.date_from>today)return false;if(filters.date_to&&filters.date_to>today)return false;return true;},message:'You have selected future dates. Most applications are in the past.',type:'warning'},{name:'very_old_dates',condition:filters=>{const oneYearAgo=new Date();oneYearAgo.setFullYear(oneYearAgo.getFullYear()-1);const oneYearAgoStr=oneYearAgo.toISOString().split('T')[0];if(filters.date_to&&filters.date_to<oneYearAgoStr)return false;return true;},message:'You are filtering for very old applications. Consider expanding your date range.',type:'warning'},// Status and search combination rules\n{name:'rejected_with_company_search',condition:filters=>{if(filters.status===PositionStatus.REJECTED&&filters.company)return false;return true;},message:'Consider removing company filter when looking at rejected applications to see patterns across companies.',type:'suggestion'},{name:'offer_status_suggestion',condition:filters=>{if(filters.status===PositionStatus.OFFER)return false;return true;},message:'Great! You have offers. Consider also filtering by \"Interviewing\" status to track your pipeline.',type:'suggestion'},// Search optimization rules\n{name:'empty_search_with_filters',condition:filters=>{const hasOtherFilters=filters.status||filters.company||filters.date_from||filters.date_to;const hasEmptySearch=!filters.search||filters.search.trim()==='';if(hasOtherFilters&&hasEmptySearch)return false;return true;},message:'Try adding a search term to narrow down your results further.',type:'suggestion'},{name:'too_specific_search',condition:filters=>{if(!filters.search)return true;const searchTerms=filters.search.trim().split(/\\s+/);return searchTerms.length<=4;// More than 4 terms might be too specific\n},message:'Your search might be too specific. Try using fewer keywords.',type:'warning'},// Date range optimization\n{name:'very_narrow_date_range',condition:filters=>{if(!filters.date_from||!filters.date_to)return true;const startDate=new Date(filters.date_from);const endDate=new Date(filters.date_to);const diffDays=(endDate.getTime()-startDate.getTime())/(1000*60*60*24);return diffDays>=7;// Less than a week might be too narrow\n},message:'Your date range is very narrow (less than a week). Consider expanding it to see more results.',type:'suggestion'},{name:'very_wide_date_range',condition:filters=>{if(!filters.date_from||!filters.date_to)return true;const startDate=new Date(filters.date_from);const endDate=new Date(filters.date_to);const diffDays=(endDate.getTime()-startDate.getTime())/(1000*60*60*24);return diffDays<=365;// More than a year might be too wide\n},message:'Your date range spans more than a year. Consider narrowing it down for more relevant results.',type:'suggestion'}];/**\n * Validates filter combinations and provides feedback\n */export const validateFilters=filters=>{const errors=[];const warnings=[];const suggestions=[];// Apply all rules\nFILTER_RULES.forEach(rule=>{if(!rule.condition(filters)){switch(rule.type){case'error':errors.push(rule.message);break;case'warning':warnings.push(rule.message);break;case'suggestion':suggestions.push(rule.message);break;}}});return{isValid:errors.length===0,errors,warnings,suggestions};};/**\n * Suggests filter improvements based on current filters\n */export const suggestFilterImprovements=(filters,resultCount)=>{const suggestions=[];// No results suggestions\nif(resultCount===0){if(Object.keys(filters).length>0){suggestions.push('No results found. Try removing some filters or broadening your search criteria.');}if(filters.search&&filters.search.length>20){suggestions.push('Try using shorter, more general search terms.');}if(filters.company&&filters.status){suggestions.push('Try removing either the company or status filter to see more results.');}if(filters.date_from&&filters.date_to){const daysDiff=(new Date(filters.date_to).getTime()-new Date(filters.date_from).getTime())/(1000*60*60*24);if(daysDiff<30){suggestions.push('Try expanding your date range to see more applications.');}}}// Too many results suggestions\nif(resultCount>50){if(!filters.status){suggestions.push('Consider filtering by status to narrow down your results.');}if(!filters.date_from&&!filters.date_to){suggestions.push('Try adding a date range to focus on recent applications.');}if(!filters.search&&!filters.company){suggestions.push('Add a search term or company filter to find specific positions.');}}// Optimal results suggestions\nif(resultCount>0&&resultCount<=20){if(filters.status===PositionStatus.APPLIED){suggestions.push('Great! These are your active applications. Consider following up on older ones.');}if(filters.status===PositionStatus.INTERVIEWING){suggestions.push('These positions are in your interview pipeline. Good luck!');}}return suggestions;};/**\n * Optimizes filters for better performance and results\n */export const optimizeFilters=filters=>{const optimized=_objectSpread({},filters);// Trim search terms\nif(optimized.search){optimized.search=optimized.search.trim();if(optimized.search===''){delete optimized.search;}}// Trim company filter\nif(optimized.company){optimized.company=optimized.company.trim();if(optimized.company===''){delete optimized.company;}}// Validate and fix date ranges\nif(optimized.date_from&&optimized.date_to){const startDate=new Date(optimized.date_from);const endDate=new Date(optimized.date_to);// Swap dates if they're in wrong order\nif(startDate>endDate){optimized.date_from=endDate.toISOString().split('T')[0];optimized.date_to=startDate.toISOString().split('T')[0];}}// Remove empty values\nObject.keys(optimized).forEach(key=>{const value=optimized[key];if(value===undefined||value===null||value===''){delete optimized[key];}});return optimized;};/**\n * Generates a human-readable description of active filters\n */export const describeFilters=filters=>{const descriptions=[];if(filters.search){descriptions.push(\"searching for \\\"\".concat(filters.search,\"\\\"\"));}if(filters.status){const statusLabels={[PositionStatus.APPLIED]:'applied positions',[PositionStatus.SCREENING]:'positions in screening',[PositionStatus.INTERVIEWING]:'positions in interview process',[PositionStatus.OFFER]:'positions with offers',[PositionStatus.REJECTED]:'rejected positions',[PositionStatus.WITHDRAWN]:'withdrawn positions'};descriptions.push(statusLabels[filters.status]);}if(filters.company){descriptions.push(\"at \".concat(filters.company));}if(filters.date_from&&filters.date_to){const startDate=new Date(filters.date_from).toLocaleDateString();const endDate=new Date(filters.date_to).toLocaleDateString();descriptions.push(\"applied between \".concat(startDate,\" and \").concat(endDate));}else if(filters.date_from){const startDate=new Date(filters.date_from).toLocaleDateString();descriptions.push(\"applied after \".concat(startDate));}else if(filters.date_to){const endDate=new Date(filters.date_to).toLocaleDateString();descriptions.push(\"applied before \".concat(endDate));}if(descriptions.length===0){return'showing all positions';}if(descriptions.length===1){return descriptions[0];}if(descriptions.length===2){return descriptions.join(' and ');}return descriptions.slice(0,-1).join(', ')+', and '+descriptions[descriptions.length-1];};/**\n * Checks if two filter sets are equivalent\n */export const areFiltersEqual=(filters1,filters2)=>{const keys1=Object.keys(filters1).sort();const keys2=Object.keys(filters2).sort();if(keys1.length!==keys2.length)return false;if(keys1.join(',')!==keys2.join(','))return false;return keys1.every(key=>{const value1=filters1[key];const value2=filters2[key];return value1===value2;});};/**\n * Merges multiple filter sets with conflict resolution\n */export const mergeFilters=function(){const merged={};for(var _len=arguments.length,filterSets=new Array(_len),_key=0;_key<_len;_key++){filterSets[_key]=arguments[_key];}filterSets.forEach(filters=>{Object.entries(filters).forEach(_ref=>{let[key,value]=_ref;if(value!==undefined&&value!==null&&value!==''){merged[key]=value;}});});return optimizeFilters(merged);};export default{validateFilters,suggestFilterImprovements,optimizeFilters,describeFilters,areFiltersEqual,mergeFilters};","map":{"version":3,"names":["PositionStatus","FILTER_RULES","name","condition","filters","date_from","date_to","Date","message","type","today","toISOString","split","oneYearAgo","setFullYear","getFullYear","oneYearAgoStr","status","REJECTED","company","OFFER","hasOtherFilters","hasEmptySearch","search","trim","searchTerms","length","startDate","endDate","diffDays","getTime","validateFilters","errors","warnings","suggestions","forEach","rule","push","isValid","suggestFilterImprovements","resultCount","Object","keys","daysDiff","APPLIED","INTERVIEWING","optimizeFilters","optimized","_objectSpread","key","value","undefined","describeFilters","descriptions","concat","statusLabels","SCREENING","WITHDRAWN","toLocaleDateString","join","slice","areFiltersEqual","filters1","filters2","keys1","sort","keys2","every","value1","value2","mergeFilters","merged","_len","arguments","filterSets","Array","_key","entries","_ref"],"sources":["/home/haim/github/job-search-tracker-api/frontend/src/utils/filterValidation.ts"],"sourcesContent":["import { PositionFilters, PositionStatus } from '../types';\n\nexport interface FilterValidationResult {\n  isValid: boolean;\n  errors: string[];\n  warnings: string[];\n  suggestions: string[];\n}\n\nexport interface FilterCombinationRule {\n  name: string;\n  condition: (filters: PositionFilters) => boolean;\n  message: string;\n  type: 'error' | 'warning' | 'suggestion';\n}\n\n// Define filter combination rules\nconst FILTER_RULES: FilterCombinationRule[] = [\n  // Date validation rules\n  {\n    name: 'date_range_order',\n    condition: (filters) => {\n      if (!filters.date_from || !filters.date_to) return true;\n      return new Date(filters.date_from) <= new Date(filters.date_to);\n    },\n    message: 'Start date must be before or equal to end date',\n    type: 'error',\n  },\n  {\n    name: 'future_date_warning',\n    condition: (filters) => {\n      const today = new Date().toISOString().split('T')[0];\n      if (filters.date_from && filters.date_from > today) return false;\n      if (filters.date_to && filters.date_to > today) return false;\n      return true;\n    },\n    message: 'You have selected future dates. Most applications are in the past.',\n    type: 'warning',\n  },\n  {\n    name: 'very_old_dates',\n    condition: (filters) => {\n      const oneYearAgo = new Date();\n      oneYearAgo.setFullYear(oneYearAgo.getFullYear() - 1);\n      const oneYearAgoStr = oneYearAgo.toISOString().split('T')[0];\n      \n      if (filters.date_to && filters.date_to < oneYearAgoStr) return false;\n      return true;\n    },\n    message: 'You are filtering for very old applications. Consider expanding your date range.',\n    type: 'warning',\n  },\n  \n  // Status and search combination rules\n  {\n    name: 'rejected_with_company_search',\n    condition: (filters) => {\n      if (filters.status === PositionStatus.REJECTED && filters.company) return false;\n      return true;\n    },\n    message: 'Consider removing company filter when looking at rejected applications to see patterns across companies.',\n    type: 'suggestion',\n  },\n  {\n    name: 'offer_status_suggestion',\n    condition: (filters) => {\n      if (filters.status === PositionStatus.OFFER) return false;\n      return true;\n    },\n    message: 'Great! You have offers. Consider also filtering by \"Interviewing\" status to track your pipeline.',\n    type: 'suggestion',\n  },\n  \n  // Search optimization rules\n  {\n    name: 'empty_search_with_filters',\n    condition: (filters) => {\n      const hasOtherFilters = filters.status || filters.company || filters.date_from || filters.date_to;\n      const hasEmptySearch = !filters.search || filters.search.trim() === '';\n      \n      if (hasOtherFilters && hasEmptySearch) return false;\n      return true;\n    },\n    message: 'Try adding a search term to narrow down your results further.',\n    type: 'suggestion',\n  },\n  {\n    name: 'too_specific_search',\n    condition: (filters) => {\n      if (!filters.search) return true;\n      const searchTerms = filters.search.trim().split(/\\s+/);\n      return searchTerms.length <= 4; // More than 4 terms might be too specific\n    },\n    message: 'Your search might be too specific. Try using fewer keywords.',\n    type: 'warning',\n  },\n  \n  // Date range optimization\n  {\n    name: 'very_narrow_date_range',\n    condition: (filters) => {\n      if (!filters.date_from || !filters.date_to) return true;\n      \n      const startDate = new Date(filters.date_from);\n      const endDate = new Date(filters.date_to);\n      const diffDays = (endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24);\n      \n      return diffDays >= 7; // Less than a week might be too narrow\n    },\n    message: 'Your date range is very narrow (less than a week). Consider expanding it to see more results.',\n    type: 'suggestion',\n  },\n  {\n    name: 'very_wide_date_range',\n    condition: (filters) => {\n      if (!filters.date_from || !filters.date_to) return true;\n      \n      const startDate = new Date(filters.date_from);\n      const endDate = new Date(filters.date_to);\n      const diffDays = (endDate.getTime() - startDate.getTime()) / (1000 * 60 * 60 * 24);\n      \n      return diffDays <= 365; // More than a year might be too wide\n    },\n    message: 'Your date range spans more than a year. Consider narrowing it down for more relevant results.',\n    type: 'suggestion',\n  },\n];\n\n/**\n * Validates filter combinations and provides feedback\n */\nexport const validateFilters = (filters: PositionFilters): FilterValidationResult => {\n  const errors: string[] = [];\n  const warnings: string[] = [];\n  const suggestions: string[] = [];\n\n  // Apply all rules\n  FILTER_RULES.forEach(rule => {\n    if (!rule.condition(filters)) {\n      switch (rule.type) {\n        case 'error':\n          errors.push(rule.message);\n          break;\n        case 'warning':\n          warnings.push(rule.message);\n          break;\n        case 'suggestion':\n          suggestions.push(rule.message);\n          break;\n      }\n    }\n  });\n\n  return {\n    isValid: errors.length === 0,\n    errors,\n    warnings,\n    suggestions,\n  };\n};\n\n/**\n * Suggests filter improvements based on current filters\n */\nexport const suggestFilterImprovements = (\n  filters: PositionFilters,\n  resultCount: number\n): string[] => {\n  const suggestions: string[] = [];\n\n  // No results suggestions\n  if (resultCount === 0) {\n    if (Object.keys(filters).length > 0) {\n      suggestions.push('No results found. Try removing some filters or broadening your search criteria.');\n    }\n    \n    if (filters.search && filters.search.length > 20) {\n      suggestions.push('Try using shorter, more general search terms.');\n    }\n    \n    if (filters.company && filters.status) {\n      suggestions.push('Try removing either the company or status filter to see more results.');\n    }\n    \n    if (filters.date_from && filters.date_to) {\n      const daysDiff = (new Date(filters.date_to).getTime() - new Date(filters.date_from).getTime()) / (1000 * 60 * 60 * 24);\n      if (daysDiff < 30) {\n        suggestions.push('Try expanding your date range to see more applications.');\n      }\n    }\n  }\n\n  // Too many results suggestions\n  if (resultCount > 50) {\n    if (!filters.status) {\n      suggestions.push('Consider filtering by status to narrow down your results.');\n    }\n    \n    if (!filters.date_from && !filters.date_to) {\n      suggestions.push('Try adding a date range to focus on recent applications.');\n    }\n    \n    if (!filters.search && !filters.company) {\n      suggestions.push('Add a search term or company filter to find specific positions.');\n    }\n  }\n\n  // Optimal results suggestions\n  if (resultCount > 0 && resultCount <= 20) {\n    if (filters.status === PositionStatus.APPLIED) {\n      suggestions.push('Great! These are your active applications. Consider following up on older ones.');\n    }\n    \n    if (filters.status === PositionStatus.INTERVIEWING) {\n      suggestions.push('These positions are in your interview pipeline. Good luck!');\n    }\n  }\n\n  return suggestions;\n};\n\n/**\n * Optimizes filters for better performance and results\n */\nexport const optimizeFilters = (filters: PositionFilters): PositionFilters => {\n  const optimized = { ...filters };\n\n  // Trim search terms\n  if (optimized.search) {\n    optimized.search = optimized.search.trim();\n    if (optimized.search === '') {\n      delete optimized.search;\n    }\n  }\n\n  // Trim company filter\n  if (optimized.company) {\n    optimized.company = optimized.company.trim();\n    if (optimized.company === '') {\n      delete optimized.company;\n    }\n  }\n\n  // Validate and fix date ranges\n  if (optimized.date_from && optimized.date_to) {\n    const startDate = new Date(optimized.date_from);\n    const endDate = new Date(optimized.date_to);\n    \n    // Swap dates if they're in wrong order\n    if (startDate > endDate) {\n      optimized.date_from = endDate.toISOString().split('T')[0];\n      optimized.date_to = startDate.toISOString().split('T')[0];\n    }\n  }\n\n  // Remove empty values\n  Object.keys(optimized).forEach(key => {\n    const value = optimized[key as keyof PositionFilters];\n    if (value === undefined || value === null || value === '') {\n      delete optimized[key as keyof PositionFilters];\n    }\n  });\n\n  return optimized;\n};\n\n/**\n * Generates a human-readable description of active filters\n */\nexport const describeFilters = (filters: PositionFilters): string => {\n  const descriptions: string[] = [];\n\n  if (filters.search) {\n    descriptions.push(`searching for \"${filters.search}\"`);\n  }\n\n  if (filters.status) {\n    const statusLabels: Record<PositionStatus, string> = {\n      [PositionStatus.APPLIED]: 'applied positions',\n      [PositionStatus.SCREENING]: 'positions in screening',\n      [PositionStatus.INTERVIEWING]: 'positions in interview process',\n      [PositionStatus.OFFER]: 'positions with offers',\n      [PositionStatus.REJECTED]: 'rejected positions',\n      [PositionStatus.WITHDRAWN]: 'withdrawn positions',\n    };\n    descriptions.push(statusLabels[filters.status]);\n  }\n\n  if (filters.company) {\n    descriptions.push(`at ${filters.company}`);\n  }\n\n  if (filters.date_from && filters.date_to) {\n    const startDate = new Date(filters.date_from).toLocaleDateString();\n    const endDate = new Date(filters.date_to).toLocaleDateString();\n    descriptions.push(`applied between ${startDate} and ${endDate}`);\n  } else if (filters.date_from) {\n    const startDate = new Date(filters.date_from).toLocaleDateString();\n    descriptions.push(`applied after ${startDate}`);\n  } else if (filters.date_to) {\n    const endDate = new Date(filters.date_to).toLocaleDateString();\n    descriptions.push(`applied before ${endDate}`);\n  }\n\n  if (descriptions.length === 0) {\n    return 'showing all positions';\n  }\n\n  if (descriptions.length === 1) {\n    return descriptions[0];\n  }\n\n  if (descriptions.length === 2) {\n    return descriptions.join(' and ');\n  }\n\n  return descriptions.slice(0, -1).join(', ') + ', and ' + descriptions[descriptions.length - 1];\n};\n\n/**\n * Checks if two filter sets are equivalent\n */\nexport const areFiltersEqual = (filters1: PositionFilters, filters2: PositionFilters): boolean => {\n  const keys1 = Object.keys(filters1).sort();\n  const keys2 = Object.keys(filters2).sort();\n\n  if (keys1.length !== keys2.length) return false;\n  if (keys1.join(',') !== keys2.join(',')) return false;\n\n  return keys1.every(key => {\n    const value1 = filters1[key as keyof PositionFilters];\n    const value2 = filters2[key as keyof PositionFilters];\n    return value1 === value2;\n  });\n};\n\n/**\n * Merges multiple filter sets with conflict resolution\n */\nexport const mergeFilters = (...filterSets: PositionFilters[]): PositionFilters => {\n  const merged: PositionFilters = {};\n\n  filterSets.forEach(filters => {\n    Object.entries(filters).forEach(([key, value]) => {\n      if (value !== undefined && value !== null && value !== '') {\n        merged[key as keyof PositionFilters] = value;\n      }\n    });\n  });\n\n  return optimizeFilters(merged);\n};\n\nexport default {\n  validateFilters,\n  suggestFilterImprovements,\n  optimizeFilters,\n  describeFilters,\n  areFiltersEqual,\n  mergeFilters,\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}