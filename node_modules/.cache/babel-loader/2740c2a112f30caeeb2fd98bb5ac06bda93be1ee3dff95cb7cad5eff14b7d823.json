{"ast":null,"code":"import axios from'axios';import{tokenManager}from'../utils/tokenManager';// Create axios instance with base configuration\nconst createHttpClient=()=>{const baseURL=process.env.REACT_APP_API_URL||'http://localhost:8000';const client=axios.create({baseURL,timeout:10000,headers:{'Content-Type':'application/json'}});// Request interceptor for authentication\nclient.interceptors.request.use(config=>{const authHeader=tokenManager.getAuthHeader();if(authHeader){config.headers.Authorization=authHeader;}return config;},error=>{return Promise.reject(error);});// Response interceptor for error handling and token refresh\nclient.interceptors.response.use(response=>{return response;},async error=>{var _error$response,_error$response2,_error$response2$data,_error$response3,_error$response3$data,_error$response4,_error$response4$data;const originalRequest=error.config;// Handle 401 errors (unauthorized)\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401&&!originalRequest._retry){originalRequest._retry=true;try{const refreshToken=tokenManager.getRefreshToken();if(refreshToken){const response=await axios.post(\"\".concat(baseURL,\"/auth/refresh\"),{refresh_token:refreshToken});const{access_token,expires_in}=response.data;tokenManager.updateAccessToken(access_token,expires_in);// Retry the original request with new token\nif(originalRequest.headers){originalRequest.headers.Authorization=\"Bearer \".concat(access_token);}return client(originalRequest);}}catch(refreshError){// Refresh failed, clear tokens and redirect to login\ntokenManager.clearTokens();window.location.href='/login';return Promise.reject(refreshError);}}// Transform error response to standardized format\nconst apiError={code:((_error$response2=error.response)===null||_error$response2===void 0?void 0:(_error$response2$data=_error$response2.data)===null||_error$response2$data===void 0?void 0:_error$response2$data.code)||'UNKNOWN_ERROR',message:((_error$response3=error.response)===null||_error$response3===void 0?void 0:(_error$response3$data=_error$response3.data)===null||_error$response3$data===void 0?void 0:_error$response3$data.message)||error.message||'An unexpected error occurred',field_errors:(_error$response4=error.response)===null||_error$response4===void 0?void 0:(_error$response4$data=_error$response4.data)===null||_error$response4$data===void 0?void 0:_error$response4$data.field_errors,timestamp:new Date().toISOString()};return Promise.reject(apiError);});return client;};// Create and export the HTTP client instance\nexport const httpClient=createHttpClient();// Utility functions for common HTTP operations\nexport const apiRequest={get:(url,config)=>httpClient.get(url,config).then(response=>response.data),post:(url,data,config)=>httpClient.post(url,data,config).then(response=>response.data),put:(url,data,config)=>httpClient.put(url,data,config).then(response=>response.data),patch:(url,data,config)=>httpClient.patch(url,data,config).then(response=>response.data),delete:(url,config)=>httpClient.delete(url,config).then(response=>response.data)};// Re-export tokenManager for backward compatibility\nexport{tokenManager};export default httpClient;","map":{"version":3,"names":["axios","tokenManager","createHttpClient","baseURL","process","env","REACT_APP_API_URL","client","create","timeout","headers","interceptors","request","use","config","authHeader","getAuthHeader","Authorization","error","Promise","reject","response","_error$response","_error$response2","_error$response2$data","_error$response3","_error$response3$data","_error$response4","_error$response4$data","originalRequest","status","_retry","refreshToken","getRefreshToken","post","concat","refresh_token","access_token","expires_in","data","updateAccessToken","refreshError","clearTokens","window","location","href","apiError","code","message","field_errors","timestamp","Date","toISOString","httpClient","apiRequest","get","url","then","put","patch","delete"],"sources":["/home/haim/github/job-search-tracker-api/frontend/src/services/httpClient.ts"],"sourcesContent":["import axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse, AxiosError } from 'axios';\nimport { ApiError } from '../types';\nimport { tokenManager } from '../utils/tokenManager';\n\n// Create axios instance with base configuration\nconst createHttpClient = (): AxiosInstance => {\n  const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n  \n  const client = axios.create({\n    baseURL,\n    timeout: 10000,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n  // Request interceptor for authentication\n  client.interceptors.request.use(\n    (config) => {\n      const authHeader = tokenManager.getAuthHeader();\n      if (authHeader) {\n        config.headers.Authorization = authHeader;\n      }\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  // Response interceptor for error handling and token refresh\n  client.interceptors.response.use(\n    (response: AxiosResponse) => {\n      return response;\n    },\n    async (error: AxiosError) => {\n      const originalRequest = error.config as AxiosRequestConfig & { _retry?: boolean };\n\n      // Handle 401 errors (unauthorized)\n      if (error.response?.status === 401 && !originalRequest._retry) {\n        originalRequest._retry = true;\n\n        try {\n          const refreshToken = tokenManager.getRefreshToken();\n          if (refreshToken) {\n            const response = await axios.post(`${baseURL}/auth/refresh`, {\n              refresh_token: refreshToken,\n            });\n\n            const { access_token, expires_in } = response.data;\n            tokenManager.updateAccessToken(access_token, expires_in);\n\n            // Retry the original request with new token\n            if (originalRequest.headers) {\n              originalRequest.headers.Authorization = `Bearer ${access_token}`;\n            }\n            return client(originalRequest);\n          }\n        } catch (refreshError) {\n          // Refresh failed, clear tokens and redirect to login\n          tokenManager.clearTokens();\n          window.location.href = '/login';\n          return Promise.reject(refreshError);\n        }\n      }\n\n      // Transform error response to standardized format\n      const apiError: ApiError = {\n        code: error.response?.data?.code || 'UNKNOWN_ERROR',\n        message: error.response?.data?.message || error.message || 'An unexpected error occurred',\n        field_errors: error.response?.data?.field_errors,\n        timestamp: new Date().toISOString(),\n      };\n\n      return Promise.reject(apiError);\n    }\n  );\n\n  return client;\n};\n\n// Create and export the HTTP client instance\nexport const httpClient = createHttpClient();\n\n// Utility functions for common HTTP operations\nexport const apiRequest = {\n  get: <T>(url: string, config?: AxiosRequestConfig): Promise<T> =>\n    httpClient.get(url, config).then((response) => response.data),\n\n  post: <T>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> =>\n    httpClient.post(url, data, config).then((response) => response.data),\n\n  put: <T>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> =>\n    httpClient.put(url, data, config).then((response) => response.data),\n\n  patch: <T>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> =>\n    httpClient.patch(url, data, config).then((response) => response.data),\n\n  delete: <T>(url: string, config?: AxiosRequestConfig): Promise<T> =>\n    httpClient.delete(url, config).then((response) => response.data),\n};\n\n// Re-export tokenManager for backward compatibility\nexport { tokenManager };\n\nexport default httpClient;"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAwE,OAAO,CAE3F,OAASC,YAAY,KAAQ,uBAAuB,CAEpD;AACA,KAAM,CAAAC,gBAAgB,CAAGA,CAAA,GAAqB,CAC5C,KAAM,CAAAC,OAAO,CAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,EAAI,uBAAuB,CAExE,KAAM,CAAAC,MAAM,CAAGP,KAAK,CAACQ,MAAM,CAAC,CAC1BL,OAAO,CACPM,OAAO,CAAE,KAAK,CACdC,OAAO,CAAE,CACP,cAAc,CAAE,kBAClB,CACF,CAAC,CAAC,CAEF;AACAH,MAAM,CAACI,YAAY,CAACC,OAAO,CAACC,GAAG,CAC5BC,MAAM,EAAK,CACV,KAAM,CAAAC,UAAU,CAAGd,YAAY,CAACe,aAAa,CAAC,CAAC,CAC/C,GAAID,UAAU,CAAE,CACdD,MAAM,CAACJ,OAAO,CAACO,aAAa,CAAGF,UAAU,CAC3C,CACA,MAAO,CAAAD,MAAM,CACf,CAAC,CACAI,KAAK,EAAK,CACT,MAAO,CAAAC,OAAO,CAACC,MAAM,CAACF,KAAK,CAAC,CAC9B,CACF,CAAC,CAED;AACAX,MAAM,CAACI,YAAY,CAACU,QAAQ,CAACR,GAAG,CAC7BQ,QAAuB,EAAK,CAC3B,MAAO,CAAAA,QAAQ,CACjB,CAAC,CACD,KAAO,CAAAH,KAAiB,EAAK,KAAAI,eAAA,CAAAC,gBAAA,CAAAC,qBAAA,CAAAC,gBAAA,CAAAC,qBAAA,CAAAC,gBAAA,CAAAC,qBAAA,CAC3B,KAAM,CAAAC,eAAe,CAAGX,KAAK,CAACJ,MAAmD,CAEjF;AACA,GAAI,EAAAQ,eAAA,CAAAJ,KAAK,CAACG,QAAQ,UAAAC,eAAA,iBAAdA,eAAA,CAAgBQ,MAAM,IAAK,GAAG,EAAI,CAACD,eAAe,CAACE,MAAM,CAAE,CAC7DF,eAAe,CAACE,MAAM,CAAG,IAAI,CAE7B,GAAI,CACF,KAAM,CAAAC,YAAY,CAAG/B,YAAY,CAACgC,eAAe,CAAC,CAAC,CACnD,GAAID,YAAY,CAAE,CAChB,KAAM,CAAAX,QAAQ,CAAG,KAAM,CAAArB,KAAK,CAACkC,IAAI,IAAAC,MAAA,CAAIhC,OAAO,kBAAiB,CAC3DiC,aAAa,CAAEJ,YACjB,CAAC,CAAC,CAEF,KAAM,CAAEK,YAAY,CAAEC,UAAW,CAAC,CAAGjB,QAAQ,CAACkB,IAAI,CAClDtC,YAAY,CAACuC,iBAAiB,CAACH,YAAY,CAAEC,UAAU,CAAC,CAExD;AACA,GAAIT,eAAe,CAACnB,OAAO,CAAE,CAC3BmB,eAAe,CAACnB,OAAO,CAACO,aAAa,WAAAkB,MAAA,CAAaE,YAAY,CAAE,CAClE,CACA,MAAO,CAAA9B,MAAM,CAACsB,eAAe,CAAC,CAChC,CACF,CAAE,MAAOY,YAAY,CAAE,CACrB;AACAxC,YAAY,CAACyC,WAAW,CAAC,CAAC,CAC1BC,MAAM,CAACC,QAAQ,CAACC,IAAI,CAAG,QAAQ,CAC/B,MAAO,CAAA1B,OAAO,CAACC,MAAM,CAACqB,YAAY,CAAC,CACrC,CACF,CAEA;AACA,KAAM,CAAAK,QAAkB,CAAG,CACzBC,IAAI,CAAE,EAAAxB,gBAAA,CAAAL,KAAK,CAACG,QAAQ,UAAAE,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBgB,IAAI,UAAAf,qBAAA,iBAApBA,qBAAA,CAAsBuB,IAAI,GAAI,eAAe,CACnDC,OAAO,CAAE,EAAAvB,gBAAA,CAAAP,KAAK,CAACG,QAAQ,UAAAI,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBc,IAAI,UAAAb,qBAAA,iBAApBA,qBAAA,CAAsBsB,OAAO,GAAI9B,KAAK,CAAC8B,OAAO,EAAI,8BAA8B,CACzFC,YAAY,EAAAtB,gBAAA,CAAET,KAAK,CAACG,QAAQ,UAAAM,gBAAA,kBAAAC,qBAAA,CAAdD,gBAAA,CAAgBY,IAAI,UAAAX,qBAAA,iBAApBA,qBAAA,CAAsBqB,YAAY,CAChDC,SAAS,CAAE,GAAI,CAAAC,IAAI,CAAC,CAAC,CAACC,WAAW,CAAC,CACpC,CAAC,CAED,MAAO,CAAAjC,OAAO,CAACC,MAAM,CAAC0B,QAAQ,CAAC,CACjC,CACF,CAAC,CAED,MAAO,CAAAvC,MAAM,CACf,CAAC,CAED;AACA,MAAO,MAAM,CAAA8C,UAAU,CAAGnD,gBAAgB,CAAC,CAAC,CAE5C;AACA,MAAO,MAAM,CAAAoD,UAAU,CAAG,CACxBC,GAAG,CAAEA,CAAIC,GAAW,CAAE1C,MAA2B,GAC/CuC,UAAU,CAACE,GAAG,CAACC,GAAG,CAAE1C,MAAM,CAAC,CAAC2C,IAAI,CAAEpC,QAAQ,EAAKA,QAAQ,CAACkB,IAAI,CAAC,CAE/DL,IAAI,CAAEA,CAAIsB,GAAW,CAAEjB,IAAU,CAAEzB,MAA2B,GAC5DuC,UAAU,CAACnB,IAAI,CAACsB,GAAG,CAAEjB,IAAI,CAAEzB,MAAM,CAAC,CAAC2C,IAAI,CAAEpC,QAAQ,EAAKA,QAAQ,CAACkB,IAAI,CAAC,CAEtEmB,GAAG,CAAEA,CAAIF,GAAW,CAAEjB,IAAU,CAAEzB,MAA2B,GAC3DuC,UAAU,CAACK,GAAG,CAACF,GAAG,CAAEjB,IAAI,CAAEzB,MAAM,CAAC,CAAC2C,IAAI,CAAEpC,QAAQ,EAAKA,QAAQ,CAACkB,IAAI,CAAC,CAErEoB,KAAK,CAAEA,CAAIH,GAAW,CAAEjB,IAAU,CAAEzB,MAA2B,GAC7DuC,UAAU,CAACM,KAAK,CAACH,GAAG,CAAEjB,IAAI,CAAEzB,MAAM,CAAC,CAAC2C,IAAI,CAAEpC,QAAQ,EAAKA,QAAQ,CAACkB,IAAI,CAAC,CAEvEqB,MAAM,CAAEA,CAAIJ,GAAW,CAAE1C,MAA2B,GAClDuC,UAAU,CAACO,MAAM,CAACJ,GAAG,CAAE1C,MAAM,CAAC,CAAC2C,IAAI,CAAEpC,QAAQ,EAAKA,QAAQ,CAACkB,IAAI,CACnE,CAAC,CAED;AACA,OAAStC,YAAY,EAErB,cAAe,CAAAoD,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}