{"ast":null,"code":"import React from'react';import{Chart as ChartJS,ArcElement,Tooltip,Legend}from'chart.js';import{Pie}from'react-chartjs-2';import{InterviewType}from'../../types';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";ChartJS.register(ArcElement,Tooltip,Legend);const TYPE_COLORS={[InterviewType.TECHNICAL]:'#3B82F6',// Blue\n[InterviewType.BEHAVIORAL]:'#10B981',// Green\n[InterviewType.HR]:'#F59E0B',// Amber\n[InterviewType.FINAL]:'#8B5CF6'// Purple\n};const TYPE_LABELS={[InterviewType.TECHNICAL]:'Technical',[InterviewType.BEHAVIORAL]:'Behavioral',[InterviewType.HR]:'HR/Screening',[InterviewType.FINAL]:'Final'};export const InterviewTypeChart=_ref=>{let{data,isLoading=false}=_ref;if(isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-64\",children:/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"})});}if(!data||Object.keys(data).length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-64 text-gray-500\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-lg font-medium mb-2\",children:\"No Interview Data\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:\"Schedule interviews to see type distribution\"})]})});}// Filter out types with 0 count and prepare chart data\nconst filteredData=Object.entries(data).filter(_ref2=>{let[_,count]=_ref2;return count>0;}).sort((_ref3,_ref4)=>{let[,a]=_ref3;let[,b]=_ref4;return b-a;});// Sort by count descending\nif(filteredData.length===0){return/*#__PURE__*/_jsx(\"div\",{className:\"flex items-center justify-center h-64 text-gray-500\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"text-lg font-medium mb-2\",children:\"No Interview Data\"}),/*#__PURE__*/_jsx(\"p\",{className:\"text-sm\",children:\"Schedule interviews to see type distribution\"})]})});}const chartData={labels:filteredData.map(_ref5=>{let[type]=_ref5;return TYPE_LABELS[type];}),datasets:[{data:filteredData.map(_ref6=>{let[_,count]=_ref6;return count;}),backgroundColor:filteredData.map(_ref7=>{let[type]=_ref7;return TYPE_COLORS[type];}),borderColor:'#FFFFFF',borderWidth:2,hoverBorderWidth:3}]};const options={responsive:true,maintainAspectRatio:false,plugins:{legend:{position:'bottom',labels:{padding:20,usePointStyle:true,font:{size:12}}},tooltip:{callbacks:{label:context=>{const label=context.label||'';const value=context.parsed;const total=context.dataset.data.reduce((a,b)=>a+b,0);const percentage=(value/total*100).toFixed(1);return\"\".concat(label,\": \").concat(value,\" (\").concat(percentage,\"%)\");}}}}};const totalInterviews=filteredData.reduce((sum,_ref8)=>{let[_,count]=_ref8;return sum+count;},0);const mostCommonType=filteredData[0];return/*#__PURE__*/_jsxs(\"div\",{className:\"relative\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"h-64\",children:/*#__PURE__*/_jsx(Pie,{data:chartData,options:options})}),/*#__PURE__*/_jsxs(\"div\",{className:\"mt-4 grid grid-cols-2 gap-4 text-sm\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:totalInterviews}),/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-600\",children:\"Total Interviews\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"font-medium text-gray-900\",children:mostCommonType?TYPE_LABELS[mostCommonType[0]]:'N/A'}),/*#__PURE__*/_jsx(\"div\",{className:\"text-gray-600\",children:\"Most Common\"})]})]})]});};","map":{"version":3,"names":["React","Chart","ChartJS","ArcElement","Tooltip","Legend","Pie","InterviewType","jsx","_jsx","jsxs","_jsxs","register","TYPE_COLORS","TECHNICAL","BEHAVIORAL","HR","FINAL","TYPE_LABELS","InterviewTypeChart","_ref","data","isLoading","className","children","Object","keys","length","filteredData","entries","filter","_ref2","_","count","sort","_ref3","_ref4","a","b","chartData","labels","map","_ref5","type","datasets","_ref6","backgroundColor","_ref7","borderColor","borderWidth","hoverBorderWidth","options","responsive","maintainAspectRatio","plugins","legend","position","padding","usePointStyle","font","size","tooltip","callbacks","label","context","value","parsed","total","dataset","reduce","percentage","toFixed","concat","totalInterviews","sum","_ref8","mostCommonType"],"sources":["/home/haim/github/job-search-tracker-api/frontend/src/components/statistics/InterviewTypeChart.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Chart as ChartJS,\n  ArcElement,\n  Tooltip,\n  Legend,\n  ChartOptions,\n} from 'chart.js';\nimport { Pie } from 'react-chartjs-2';\nimport { InterviewType } from '../../types';\n\nChartJS.register(ArcElement, Tooltip, Legend);\n\ninterface InterviewTypeChartProps {\n  data?: Record<InterviewType, number> | undefined;\n  isLoading?: boolean;\n}\n\nconst TYPE_COLORS = {\n  [InterviewType.TECHNICAL]: '#3B82F6', // Blue\n  [InterviewType.BEHAVIORAL]: '#10B981', // Green\n  [InterviewType.HR]: '#F59E0B', // Amber\n  [InterviewType.FINAL]: '#8B5CF6', // Purple\n};\n\nconst TYPE_LABELS = {\n  [InterviewType.TECHNICAL]: 'Technical',\n  [InterviewType.BEHAVIORAL]: 'Behavioral',\n  [InterviewType.HR]: 'HR/Screening',\n  [InterviewType.FINAL]: 'Final',\n};\n\nexport const InterviewTypeChart: React.FC<InterviewTypeChartProps> = ({\n  data,\n  isLoading = false,\n}) => {\n  if (isLoading) {\n    return (\n      <div className=\"flex items-center justify-center h-64\">\n        <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600\"></div>\n      </div>\n    );\n  }\n\n  if (!data || Object.keys(data).length === 0) {\n    return (\n      <div className=\"flex items-center justify-center h-64 text-gray-500\">\n        <div className=\"text-center\">\n          <div className=\"text-lg font-medium mb-2\">No Interview Data</div>\n          <p className=\"text-sm\">Schedule interviews to see type distribution</p>\n        </div>\n      </div>\n    );\n  }\n\n  // Filter out types with 0 count and prepare chart data\n  const filteredData = Object.entries(data)\n    .filter(([_, count]) => count > 0)\n    .sort(([, a], [, b]) => b - a); // Sort by count descending\n\n  if (filteredData.length === 0) {\n    return (\n      <div className=\"flex items-center justify-center h-64 text-gray-500\">\n        <div className=\"text-center\">\n          <div className=\"text-lg font-medium mb-2\">No Interview Data</div>\n          <p className=\"text-sm\">Schedule interviews to see type distribution</p>\n        </div>\n      </div>\n    );\n  }\n\n  const chartData = {\n    labels: filteredData.map(([type]) => TYPE_LABELS[type as InterviewType]),\n    datasets: [\n      {\n        data: filteredData.map(([_, count]) => count),\n        backgroundColor: filteredData.map(([type]) => TYPE_COLORS[type as InterviewType]),\n        borderColor: '#FFFFFF',\n        borderWidth: 2,\n        hoverBorderWidth: 3,\n      },\n    ],\n  };\n\n  const options: ChartOptions<'pie'> = {\n    responsive: true,\n    maintainAspectRatio: false,\n    plugins: {\n      legend: {\n        position: 'bottom',\n        labels: {\n          padding: 20,\n          usePointStyle: true,\n          font: {\n            size: 12,\n          },\n        },\n      },\n      tooltip: {\n        callbacks: {\n          label: (context) => {\n            const label = context.label || '';\n            const value = context.parsed;\n            const total = context.dataset.data.reduce((a, b) => a + b, 0);\n            const percentage = ((value / total) * 100).toFixed(1);\n            return `${label}: ${value} (${percentage}%)`;\n          },\n        },\n      },\n    },\n  };\n\n  const totalInterviews = filteredData.reduce((sum, [_, count]) => sum + count, 0);\n  const mostCommonType = filteredData[0];\n\n  return (\n    <div className=\"relative\">\n      <div className=\"h-64\">\n        <Pie data={chartData} options={options} />\n      </div>\n      \n      {/* Summary stats below chart */}\n      <div className=\"mt-4 grid grid-cols-2 gap-4 text-sm\">\n        <div className=\"text-center\">\n          <div className=\"font-medium text-gray-900\">{totalInterviews}</div>\n          <div className=\"text-gray-600\">Total Interviews</div>\n        </div>\n        <div className=\"text-center\">\n          <div className=\"font-medium text-gray-900\">\n            {mostCommonType ? TYPE_LABELS[mostCommonType[0] as InterviewType] : 'N/A'}\n          </div>\n          <div className=\"text-gray-600\">Most Common</div>\n        </div>\n      </div>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}