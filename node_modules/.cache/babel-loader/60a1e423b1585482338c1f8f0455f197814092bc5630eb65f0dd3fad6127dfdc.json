{"ast":null,"code":"import axios from'axios';import{tokenManager}from'../utils/tokenManager';// Create axios instance with base configuration\nconst createHttpClient=()=>{const baseURL=process.env.REACT_APP_API_URL||'http://localhost:8000';const client=axios.create({baseURL,timeout:10000,headers:{'Content-Type':'application/json'}});// Request interceptor for authentication\nclient.interceptors.request.use(config=>{const authHeader=tokenManager.getAuthHeader();if(authHeader){config.headers.Authorization=authHeader;}return config;},error=>{return Promise.reject(error);});// Response interceptor for error handling and token refresh\nclient.interceptors.response.use(response=>{return response;},async error=>{var _error$response,_error$response2;const originalRequest=error.config;// Handle 401 errors (unauthorized)\nif(((_error$response=error.response)===null||_error$response===void 0?void 0:_error$response.status)===401&&!originalRequest._retry){originalRequest._retry=true;try{const refreshToken=tokenManager.getRefreshToken();if(refreshToken){const response=await axios.post(\"\".concat(baseURL,\"/auth/refresh\"),{refresh_token:refreshToken});const{access_token,expires_in}=response.data;tokenManager.updateAccessToken(access_token,expires_in);// Retry the original request with new token\nif(originalRequest.headers){originalRequest.headers.Authorization=\"Bearer \".concat(access_token);}return client(originalRequest);}}catch(refreshError){// Refresh failed, clear tokens and redirect to login\ntokenManager.clearTokens();window.location.href='/login';return Promise.reject(refreshError);}}// Transform error response to standardized format\nconst responseData=(_error$response2=error.response)===null||_error$response2===void 0?void 0:_error$response2.data;const apiError={code:(responseData===null||responseData===void 0?void 0:responseData.code)||'UNKNOWN_ERROR',message:(responseData===null||responseData===void 0?void 0:responseData.message)||error.message||'An unexpected error occurred',field_errors:responseData===null||responseData===void 0?void 0:responseData.field_errors,timestamp:new Date().toISOString()};return Promise.reject(apiError);});return client;};// Create and export the HTTP client instance\nexport const httpClient=createHttpClient();// Utility functions for common HTTP operations\nexport const apiRequest={get:(url,config)=>httpClient.get(url,config).then(response=>response.data),post:(url,data,config)=>httpClient.post(url,data,config).then(response=>response.data),put:(url,data,config)=>httpClient.put(url,data,config).then(response=>response.data),patch:(url,data,config)=>httpClient.patch(url,data,config).then(response=>response.data),delete:(url,config)=>httpClient.delete(url,config).then(response=>response.data)};// Re-export tokenManager for backward compatibility\nexport{tokenManager};export default httpClient;","map":{"version":3,"names":["axios","tokenManager","createHttpClient","baseURL","process","env","REACT_APP_API_URL","client","create","timeout","headers","interceptors","request","use","config","authHeader","getAuthHeader","Authorization","error","Promise","reject","response","_error$response","_error$response2","originalRequest","status","_retry","refreshToken","getRefreshToken","post","concat","refresh_token","access_token","expires_in","data","updateAccessToken","refreshError","clearTokens","window","location","href","responseData","apiError","code","message","field_errors","timestamp","Date","toISOString","httpClient","apiRequest","get","url","then","put","patch","delete"],"sources":["/home/haim/github/job-search-tracker-api/frontend/src/services/httpClient.ts"],"sourcesContent":["import axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse, AxiosError } from 'axios';\nimport { ApiError } from '../types';\nimport { tokenManager } from '../utils/tokenManager';\n\n// Create axios instance with base configuration\nconst createHttpClient = (): AxiosInstance => {\n  const baseURL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n  \n  const client = axios.create({\n    baseURL,\n    timeout: 10000,\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  });\n\n  // Request interceptor for authentication\n  client.interceptors.request.use(\n    (config) => {\n      const authHeader = tokenManager.getAuthHeader();\n      if (authHeader) {\n        config.headers.Authorization = authHeader;\n      }\n      return config;\n    },\n    (error) => {\n      return Promise.reject(error);\n    }\n  );\n\n  // Response interceptor for error handling and token refresh\n  client.interceptors.response.use(\n    (response: AxiosResponse) => {\n      return response;\n    },\n    async (error: AxiosError) => {\n      const originalRequest = error.config as AxiosRequestConfig & { _retry?: boolean };\n\n      // Handle 401 errors (unauthorized)\n      if (error.response?.status === 401 && !originalRequest._retry) {\n        originalRequest._retry = true;\n\n        try {\n          const refreshToken = tokenManager.getRefreshToken();\n          if (refreshToken) {\n            const response = await axios.post(`${baseURL}/auth/refresh`, {\n              refresh_token: refreshToken,\n            });\n\n            const { access_token, expires_in } = response.data;\n            tokenManager.updateAccessToken(access_token, expires_in);\n\n            // Retry the original request with new token\n            if (originalRequest.headers) {\n              originalRequest.headers.Authorization = `Bearer ${access_token}`;\n            }\n            return client(originalRequest);\n          }\n        } catch (refreshError) {\n          // Refresh failed, clear tokens and redirect to login\n          tokenManager.clearTokens();\n          window.location.href = '/login';\n          return Promise.reject(refreshError);\n        }\n      }\n\n      // Transform error response to standardized format\n      const responseData = error.response?.data as any;\n      const apiError: ApiError = {\n        code: responseData?.code || 'UNKNOWN_ERROR',\n        message: responseData?.message || error.message || 'An unexpected error occurred',\n        field_errors: responseData?.field_errors,\n        timestamp: new Date().toISOString(),\n      };\n\n      return Promise.reject(apiError);\n    }\n  );\n\n  return client;\n};\n\n// Create and export the HTTP client instance\nexport const httpClient = createHttpClient();\n\n// Utility functions for common HTTP operations\nexport const apiRequest = {\n  get: <T>(url: string, config?: AxiosRequestConfig): Promise<T> =>\n    httpClient.get(url, config).then((response) => response.data),\n\n  post: <T>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> =>\n    httpClient.post(url, data, config).then((response) => response.data),\n\n  put: <T>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> =>\n    httpClient.put(url, data, config).then((response) => response.data),\n\n  patch: <T>(url: string, data?: any, config?: AxiosRequestConfig): Promise<T> =>\n    httpClient.patch(url, data, config).then((response) => response.data),\n\n  delete: <T>(url: string, config?: AxiosRequestConfig): Promise<T> =>\n    httpClient.delete(url, config).then((response) => response.data),\n};\n\n// Re-export tokenManager for backward compatibility\nexport { tokenManager };\n\nexport default httpClient;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}