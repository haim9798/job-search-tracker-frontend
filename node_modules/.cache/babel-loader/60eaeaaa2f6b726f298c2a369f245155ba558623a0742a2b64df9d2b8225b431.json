{"ast":null,"code":"var _jsxFileName = \"/home/haim/github/job-search-tracker-api/frontend/src/components/ui/OfflineIndicator.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { operationNotifications } from '../../utils/notifications';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const OfflineIndicator = ({\n  className = '',\n  showToast = true\n}) => {\n  _s();\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n  const [wasOffline, setWasOffline] = useState(false);\n  useEffect(() => {\n    const handleOnline = () => {\n      setIsOnline(true);\n      if (wasOffline && showToast) {\n        operationNotifications.online();\n      }\n      setWasOffline(false);\n    };\n    const handleOffline = () => {\n      setIsOnline(false);\n      setWasOffline(true);\n      if (showToast) {\n        operationNotifications.offline();\n      }\n    };\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, [wasOffline, showToast]);\n  if (isOnline) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `fixed top-0 left-0 right-0 z-50 ${className}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"bg-yellow-500 text-white px-4 py-2 text-center text-sm font-medium\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center justify-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"h-4 w-4\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"You are currently offline. Some features may not work properly.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n};\n_s(OfflineIndicator, \"5BFqrjTZXjJB6ut2BO/kDo17DKs=\");\n_c = OfflineIndicator;\nexport const NetworkStatus = ({\n  className = '',\n  showDetails = false\n}) => {\n  _s2();\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n  const [connectionType, setConnectionType] = useState('unknown');\n  const [effectiveType, setEffectiveType] = useState('unknown');\n  useEffect(() => {\n    const handleOnline = () => setIsOnline(true);\n    const handleOffline = () => setIsOnline(false);\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    // Get connection information if available\n    const connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;\n    if (connection) {\n      setConnectionType(connection.type || 'unknown');\n      setEffectiveType(connection.effectiveType || 'unknown');\n      const handleConnectionChange = () => {\n        setConnectionType(connection.type || 'unknown');\n        setEffectiveType(connection.effectiveType || 'unknown');\n      };\n      connection.addEventListener('change', handleConnectionChange);\n      return () => {\n        window.removeEventListener('online', handleOnline);\n        window.removeEventListener('offline', handleOffline);\n        connection.removeEventListener('change', handleConnectionChange);\n      };\n    }\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n  const getStatusColor = () => {\n    if (!isOnline) return 'text-red-500';\n    if (effectiveType === 'slow-2g' || effectiveType === '2g') return 'text-yellow-500';\n    return 'text-green-500';\n  };\n  const getStatusText = () => {\n    if (!isOnline) return 'Offline';\n    if (showDetails && effectiveType !== 'unknown') {\n      return `Online (${effectiveType.toUpperCase()})`;\n    }\n    return 'Online';\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `flex items-center space-x-2 ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: `h-2 w-2 rounded-full ${isOnline ? 'bg-green-500' : 'bg-red-500'}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: `text-sm ${getStatusColor()}`,\n      children: getStatusText()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 124,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook for network status\n_s2(NetworkStatus, \"hksD2ZUba7MsI/L5a5We5rhlFbk=\");\n_c2 = NetworkStatus;\nexport const useNetworkStatus = () => {\n  _s3();\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n  const [connectionInfo, setConnectionInfo] = useState({\n    type: 'unknown',\n    effectiveType: 'unknown'\n  });\n  useEffect(() => {\n    const handleOnline = () => setIsOnline(true);\n    const handleOffline = () => setIsOnline(false);\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    // Get connection information if available\n    const connection = navigator.connection || navigator.mozConnection || navigator.webkitConnection;\n    if (connection) {\n      const updateConnectionInfo = () => {\n        setConnectionInfo({\n          type: connection.type || 'unknown',\n          effectiveType: connection.effectiveType || 'unknown',\n          downlink: connection.downlink,\n          rtt: connection.rtt\n        });\n      };\n      updateConnectionInfo();\n      connection.addEventListener('change', updateConnectionInfo);\n      return () => {\n        window.removeEventListener('online', handleOnline);\n        window.removeEventListener('offline', handleOffline);\n        connection.removeEventListener('change', updateConnectionInfo);\n      };\n    }\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n  return {\n    isOnline,\n    ...connectionInfo,\n    isSlowConnection: connectionInfo.effectiveType === 'slow-2g' || connectionInfo.effectiveType === '2g',\n    isFastConnection: connectionInfo.effectiveType === '4g' || connectionInfo.effectiveType === '5g'\n  };\n};\n_s3(useNetworkStatus, \"B97EYaBaeGBOJd9A301zHhWY2w8=\");\nvar _c, _c2;\n$RefreshReg$(_c, \"OfflineIndicator\");\n$RefreshReg$(_c2, \"NetworkStatus\");","map":{"version":3,"names":["React","useState","useEffect","operationNotifications","jsxDEV","_jsxDEV","OfflineIndicator","className","showToast","_s","isOnline","setIsOnline","navigator","onLine","wasOffline","setWasOffline","handleOnline","online","handleOffline","offline","window","addEventListener","removeEventListener","children","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","fileName","_jsxFileName","lineNumber","columnNumber","_c","NetworkStatus","showDetails","_s2","connectionType","setConnectionType","effectiveType","setEffectiveType","connection","mozConnection","webkitConnection","type","handleConnectionChange","getStatusColor","getStatusText","toUpperCase","_c2","useNetworkStatus","_s3","connectionInfo","setConnectionInfo","updateConnectionInfo","downlink","rtt","isSlowConnection","isFastConnection","$RefreshReg$"],"sources":["/home/haim/github/job-search-tracker-api/frontend/src/components/ui/OfflineIndicator.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { operationNotifications } from '../../utils/notifications';\n\ninterface OfflineIndicatorProps {\n  className?: string;\n  showToast?: boolean;\n}\n\nexport const OfflineIndicator: React.FC<OfflineIndicatorProps> = ({\n  className = '',\n  showToast = true,\n}) => {\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n  const [wasOffline, setWasOffline] = useState(false);\n\n  useEffect(() => {\n    const handleOnline = () => {\n      setIsOnline(true);\n      if (wasOffline && showToast) {\n        operationNotifications.online();\n      }\n      setWasOffline(false);\n    };\n\n    const handleOffline = () => {\n      setIsOnline(false);\n      setWasOffline(true);\n      if (showToast) {\n        operationNotifications.offline();\n      }\n    };\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, [wasOffline, showToast]);\n\n  if (isOnline) return null;\n\n  return (\n    <div className={`fixed top-0 left-0 right-0 z-50 ${className}`}>\n      <div className=\"bg-yellow-500 text-white px-4 py-2 text-center text-sm font-medium\">\n        <div className=\"flex items-center justify-center space-x-2\">\n          <svg className=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n            <path\n              strokeLinecap=\"round\"\n              strokeLinejoin=\"round\"\n              strokeWidth={2}\n              d=\"M12 8v4m0 4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"\n            />\n          </svg>\n          <span>You are currently offline. Some features may not work properly.</span>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface NetworkStatusProps {\n  className?: string;\n  showDetails?: boolean;\n}\n\nexport const NetworkStatus: React.FC<NetworkStatusProps> = ({\n  className = '',\n  showDetails = false,\n}) => {\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n  const [connectionType, setConnectionType] = useState<string>('unknown');\n  const [effectiveType, setEffectiveType] = useState<string>('unknown');\n\n  useEffect(() => {\n    const handleOnline = () => setIsOnline(true);\n    const handleOffline = () => setIsOnline(false);\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    // Get connection information if available\n    const connection = (navigator as any).connection || (navigator as any).mozConnection || (navigator as any).webkitConnection;\n    if (connection) {\n      setConnectionType(connection.type || 'unknown');\n      setEffectiveType(connection.effectiveType || 'unknown');\n\n      const handleConnectionChange = () => {\n        setConnectionType(connection.type || 'unknown');\n        setEffectiveType(connection.effectiveType || 'unknown');\n      };\n\n      connection.addEventListener('change', handleConnectionChange);\n\n      return () => {\n        window.removeEventListener('online', handleOnline);\n        window.removeEventListener('offline', handleOffline);\n        connection.removeEventListener('change', handleConnectionChange);\n      };\n    }\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n\n  const getStatusColor = () => {\n    if (!isOnline) return 'text-red-500';\n    if (effectiveType === 'slow-2g' || effectiveType === '2g') return 'text-yellow-500';\n    return 'text-green-500';\n  };\n\n  const getStatusText = () => {\n    if (!isOnline) return 'Offline';\n    if (showDetails && effectiveType !== 'unknown') {\n      return `Online (${effectiveType.toUpperCase()})`;\n    }\n    return 'Online';\n  };\n\n  return (\n    <div className={`flex items-center space-x-2 ${className}`}>\n      <div className={`h-2 w-2 rounded-full ${isOnline ? 'bg-green-500' : 'bg-red-500'}`} />\n      <span className={`text-sm ${getStatusColor()}`}>\n        {getStatusText()}\n      </span>\n    </div>\n  );\n};\n\n// Hook for network status\nexport const useNetworkStatus = () => {\n  const [isOnline, setIsOnline] = useState(navigator.onLine);\n  const [connectionInfo, setConnectionInfo] = useState<{\n    type: string;\n    effectiveType: string;\n    downlink?: number;\n    rtt?: number;\n  }>({\n    type: 'unknown',\n    effectiveType: 'unknown',\n  });\n\n  useEffect(() => {\n    const handleOnline = () => setIsOnline(true);\n    const handleOffline = () => setIsOnline(false);\n\n    window.addEventListener('online', handleOnline);\n    window.addEventListener('offline', handleOffline);\n\n    // Get connection information if available\n    const connection = (navigator as any).connection || (navigator as any).mozConnection || (navigator as any).webkitConnection;\n    if (connection) {\n      const updateConnectionInfo = () => {\n        setConnectionInfo({\n          type: connection.type || 'unknown',\n          effectiveType: connection.effectiveType || 'unknown',\n          downlink: connection.downlink,\n          rtt: connection.rtt,\n        });\n      };\n\n      updateConnectionInfo();\n      connection.addEventListener('change', updateConnectionInfo);\n\n      return () => {\n        window.removeEventListener('online', handleOnline);\n        window.removeEventListener('offline', handleOffline);\n        connection.removeEventListener('change', updateConnectionInfo);\n      };\n    }\n\n    return () => {\n      window.removeEventListener('online', handleOnline);\n      window.removeEventListener('offline', handleOffline);\n    };\n  }, []);\n\n  return {\n    isOnline,\n    ...connectionInfo,\n    isSlowConnection: connectionInfo.effectiveType === 'slow-2g' || connectionInfo.effectiveType === '2g',\n    isFastConnection: connectionInfo.effectiveType === '4g' || connectionInfo.effectiveType === '5g',\n  };\n};"],"mappings":";;;;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,sBAAsB,QAAQ,2BAA2B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAOnE,OAAO,MAAMC,gBAAiD,GAAGA,CAAC;EAChEC,SAAS,GAAG,EAAE;EACdC,SAAS,GAAG;AACd,CAAC,KAAK;EAAAC,EAAA;EACJ,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAACW,SAAS,CAACC,MAAM,CAAC;EAC1D,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACd,MAAMc,YAAY,GAAGA,CAAA,KAAM;MACzBL,WAAW,CAAC,IAAI,CAAC;MACjB,IAAIG,UAAU,IAAIN,SAAS,EAAE;QAC3BL,sBAAsB,CAACc,MAAM,CAAC,CAAC;MACjC;MACAF,aAAa,CAAC,KAAK,CAAC;IACtB,CAAC;IAED,MAAMG,aAAa,GAAGA,CAAA,KAAM;MAC1BP,WAAW,CAAC,KAAK,CAAC;MAClBI,aAAa,CAAC,IAAI,CAAC;MACnB,IAAIP,SAAS,EAAE;QACbL,sBAAsB,CAACgB,OAAO,CAAC,CAAC;MAClC;IACF,CAAC;IAEDC,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEL,YAAY,CAAC;IAC/CI,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEH,aAAa,CAAC;IAEjD,OAAO,MAAM;MACXE,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEN,YAAY,CAAC;MAClDI,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEJ,aAAa,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,CAACJ,UAAU,EAAEN,SAAS,CAAC,CAAC;EAE3B,IAAIE,QAAQ,EAAE,OAAO,IAAI;EAEzB,oBACEL,OAAA;IAAKE,SAAS,EAAE,mCAAmCA,SAAS,EAAG;IAAAgB,QAAA,eAC7DlB,OAAA;MAAKE,SAAS,EAAC,oEAAoE;MAAAgB,QAAA,eACjFlB,OAAA;QAAKE,SAAS,EAAC,4CAA4C;QAAAgB,QAAA,gBACzDlB,OAAA;UAAKE,SAAS,EAAC,SAAS;UAACiB,IAAI,EAAC,MAAM;UAACC,MAAM,EAAC,cAAc;UAACC,OAAO,EAAC,WAAW;UAAAH,QAAA,eAC5ElB,OAAA;YACEsB,aAAa,EAAC,OAAO;YACrBC,cAAc,EAAC,OAAO;YACtBC,WAAW,EAAE,CAAE;YACfC,CAAC,EAAC;UAAmD;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACtD;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACC,CAAC,eACN7B,OAAA;UAAAkB,QAAA,EAAM;QAA+D;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACzB,EAAA,CApDWH,gBAAiD;AAAA6B,EAAA,GAAjD7B,gBAAiD;AA2D9D,OAAO,MAAM8B,aAA2C,GAAGA,CAAC;EAC1D7B,SAAS,GAAG,EAAE;EACd8B,WAAW,GAAG;AAChB,CAAC,KAAK;EAAAC,GAAA;EACJ,MAAM,CAAC5B,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAACW,SAAS,CAACC,MAAM,CAAC;EAC1D,MAAM,CAAC0B,cAAc,EAAEC,iBAAiB,CAAC,GAAGvC,QAAQ,CAAS,SAAS,CAAC;EACvE,MAAM,CAACwC,aAAa,EAAEC,gBAAgB,CAAC,GAAGzC,QAAQ,CAAS,SAAS,CAAC;EAErEC,SAAS,CAAC,MAAM;IACd,MAAMc,YAAY,GAAGA,CAAA,KAAML,WAAW,CAAC,IAAI,CAAC;IAC5C,MAAMO,aAAa,GAAGA,CAAA,KAAMP,WAAW,CAAC,KAAK,CAAC;IAE9CS,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEL,YAAY,CAAC;IAC/CI,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEH,aAAa,CAAC;;IAEjD;IACA,MAAMyB,UAAU,GAAI/B,SAAS,CAAS+B,UAAU,IAAK/B,SAAS,CAASgC,aAAa,IAAKhC,SAAS,CAASiC,gBAAgB;IAC3H,IAAIF,UAAU,EAAE;MACdH,iBAAiB,CAACG,UAAU,CAACG,IAAI,IAAI,SAAS,CAAC;MAC/CJ,gBAAgB,CAACC,UAAU,CAACF,aAAa,IAAI,SAAS,CAAC;MAEvD,MAAMM,sBAAsB,GAAGA,CAAA,KAAM;QACnCP,iBAAiB,CAACG,UAAU,CAACG,IAAI,IAAI,SAAS,CAAC;QAC/CJ,gBAAgB,CAACC,UAAU,CAACF,aAAa,IAAI,SAAS,CAAC;MACzD,CAAC;MAEDE,UAAU,CAACtB,gBAAgB,CAAC,QAAQ,EAAE0B,sBAAsB,CAAC;MAE7D,OAAO,MAAM;QACX3B,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEN,YAAY,CAAC;QAClDI,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEJ,aAAa,CAAC;QACpDyB,UAAU,CAACrB,mBAAmB,CAAC,QAAQ,EAAEyB,sBAAsB,CAAC;MAClE,CAAC;IACH;IAEA,OAAO,MAAM;MACX3B,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEN,YAAY,CAAC;MAClDI,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEJ,aAAa,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM8B,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAACtC,QAAQ,EAAE,OAAO,cAAc;IACpC,IAAI+B,aAAa,KAAK,SAAS,IAAIA,aAAa,KAAK,IAAI,EAAE,OAAO,iBAAiB;IACnF,OAAO,gBAAgB;EACzB,CAAC;EAED,MAAMQ,aAAa,GAAGA,CAAA,KAAM;IAC1B,IAAI,CAACvC,QAAQ,EAAE,OAAO,SAAS;IAC/B,IAAI2B,WAAW,IAAII,aAAa,KAAK,SAAS,EAAE;MAC9C,OAAO,WAAWA,aAAa,CAACS,WAAW,CAAC,CAAC,GAAG;IAClD;IACA,OAAO,QAAQ;EACjB,CAAC;EAED,oBACE7C,OAAA;IAAKE,SAAS,EAAE,+BAA+BA,SAAS,EAAG;IAAAgB,QAAA,gBACzDlB,OAAA;MAAKE,SAAS,EAAE,wBAAwBG,QAAQ,GAAG,cAAc,GAAG,YAAY;IAAG;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACtF7B,OAAA;MAAME,SAAS,EAAE,WAAWyC,cAAc,CAAC,CAAC,EAAG;MAAAzB,QAAA,EAC5C0B,aAAa,CAAC;IAAC;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACZ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;;AAED;AAAAI,GAAA,CAjEaF,aAA2C;AAAAe,GAAA,GAA3Cf,aAA2C;AAkExD,OAAO,MAAMgB,gBAAgB,GAAGA,CAAA,KAAM;EAAAC,GAAA;EACpC,MAAM,CAAC3C,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAACW,SAAS,CAACC,MAAM,CAAC;EAC1D,MAAM,CAACyC,cAAc,EAAEC,iBAAiB,CAAC,GAAGtD,QAAQ,CAKjD;IACD6C,IAAI,EAAE,SAAS;IACfL,aAAa,EAAE;EACjB,CAAC,CAAC;EAEFvC,SAAS,CAAC,MAAM;IACd,MAAMc,YAAY,GAAGA,CAAA,KAAML,WAAW,CAAC,IAAI,CAAC;IAC5C,MAAMO,aAAa,GAAGA,CAAA,KAAMP,WAAW,CAAC,KAAK,CAAC;IAE9CS,MAAM,CAACC,gBAAgB,CAAC,QAAQ,EAAEL,YAAY,CAAC;IAC/CI,MAAM,CAACC,gBAAgB,CAAC,SAAS,EAAEH,aAAa,CAAC;;IAEjD;IACA,MAAMyB,UAAU,GAAI/B,SAAS,CAAS+B,UAAU,IAAK/B,SAAS,CAASgC,aAAa,IAAKhC,SAAS,CAASiC,gBAAgB;IAC3H,IAAIF,UAAU,EAAE;MACd,MAAMa,oBAAoB,GAAGA,CAAA,KAAM;QACjCD,iBAAiB,CAAC;UAChBT,IAAI,EAAEH,UAAU,CAACG,IAAI,IAAI,SAAS;UAClCL,aAAa,EAAEE,UAAU,CAACF,aAAa,IAAI,SAAS;UACpDgB,QAAQ,EAAEd,UAAU,CAACc,QAAQ;UAC7BC,GAAG,EAAEf,UAAU,CAACe;QAClB,CAAC,CAAC;MACJ,CAAC;MAEDF,oBAAoB,CAAC,CAAC;MACtBb,UAAU,CAACtB,gBAAgB,CAAC,QAAQ,EAAEmC,oBAAoB,CAAC;MAE3D,OAAO,MAAM;QACXpC,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEN,YAAY,CAAC;QAClDI,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEJ,aAAa,CAAC;QACpDyB,UAAU,CAACrB,mBAAmB,CAAC,QAAQ,EAAEkC,oBAAoB,CAAC;MAChE,CAAC;IACH;IAEA,OAAO,MAAM;MACXpC,MAAM,CAACE,mBAAmB,CAAC,QAAQ,EAAEN,YAAY,CAAC;MAClDI,MAAM,CAACE,mBAAmB,CAAC,SAAS,EAAEJ,aAAa,CAAC;IACtD,CAAC;EACH,CAAC,EAAE,EAAE,CAAC;EAEN,OAAO;IACLR,QAAQ;IACR,GAAG4C,cAAc;IACjBK,gBAAgB,EAAEL,cAAc,CAACb,aAAa,KAAK,SAAS,IAAIa,cAAc,CAACb,aAAa,KAAK,IAAI;IACrGmB,gBAAgB,EAAEN,cAAc,CAACb,aAAa,KAAK,IAAI,IAAIa,cAAc,CAACb,aAAa,KAAK;EAC9F,CAAC;AACH,CAAC;AAACY,GAAA,CArDWD,gBAAgB;AAAA,IAAAjB,EAAA,EAAAgB,GAAA;AAAAU,YAAA,CAAA1B,EAAA;AAAA0B,YAAA,CAAAV,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}