{"ast":null,"code":"var _jsxFileName = \"/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/InlineStatusSelector.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { CheckIcon, XMarkIcon } from '@heroicons/react/24/outline';\nimport { InterviewOutcome } from '../../types';\nimport { Button } from '../ui/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InlineStatusSelector = ({\n  value,\n  onSave,\n  onCancel,\n  loading = false,\n  className = ''\n}) => {\n  _s();\n  const [tempValue, setTempValue] = useState(value);\n  const selectRef = useRef(null);\n  useEffect(() => {\n    // Focus the select when component mounts\n    if (selectRef.current) {\n      selectRef.current.focus();\n    }\n  }, []);\n  const handleSave = () => {\n    onSave(tempValue);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSave();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      onCancel();\n    }\n  };\n  const statusOptions = [{\n    value: InterviewOutcome.PENDING,\n    label: 'Pending'\n  }, {\n    value: InterviewOutcome.PASSED,\n    label: 'Passed'\n  }, {\n    value: InterviewOutcome.FAILED,\n    label: 'Failed'\n  }, {\n    value: InterviewOutcome.CANCELLED,\n    label: 'Cancelled'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `inline-flex items-center space-x-2 ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"select\", {\n      ref: selectRef,\n      value: tempValue,\n      onChange: e => setTempValue(e.target.value),\n      onKeyDown: handleKeyDown,\n      className: \"px-3 py-1 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\",\n      disabled: loading,\n      children: statusOptions.map(option => /*#__PURE__*/_jsxDEV(\"option\", {\n        value: option.value,\n        children: option.label\n      }, option.value, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"ghost\",\n      size: \"sm\",\n      onClick: handleSave,\n      disabled: loading || tempValue === value,\n      className: \"p-1 text-green-600 hover:text-green-700 hover:bg-green-50\",\n      children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n        className: \"h-4 w-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"ghost\",\n      size: \"sm\",\n      onClick: onCancel,\n      disabled: loading,\n      className: \"p-1 text-red-600 hover:text-red-700 hover:bg-red-50\",\n      children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n        className: \"h-4 w-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n};\n_s(InlineStatusSelector, \"XvC2DpjJl+mE/kJmLi0Vx31Yb/s=\");\n_c = InlineStatusSelector;\nexport default InlineStatusSelector;\nvar _c;\n$RefreshReg$(_c, \"InlineStatusSelector\");","map":{"version":3,"names":["React","useState","useRef","useEffect","CheckIcon","XMarkIcon","InterviewOutcome","Button","jsxDEV","_jsxDEV","InlineStatusSelector","value","onSave","onCancel","loading","className","_s","tempValue","setTempValue","selectRef","current","focus","handleSave","handleKeyDown","e","key","preventDefault","statusOptions","PENDING","label","PASSED","FAILED","CANCELLED","children","ref","onChange","target","onKeyDown","disabled","map","option","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","onClick","_c","$RefreshReg$"],"sources":["/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/InlineStatusSelector.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { CheckIcon, XMarkIcon } from '@heroicons/react/24/outline';\nimport { InterviewOutcome } from '../../types';\nimport { Button } from '../ui/Button';\nimport { StatusBadge } from '../ui/StatusBadge';\n\ninterface InlineStatusSelectorProps {\n  value: InterviewOutcome;\n  onSave: (newStatus: InterviewOutcome) => void;\n  onCancel: () => void;\n  loading?: boolean;\n  className?: string;\n}\n\nconst InlineStatusSelector: React.FC<InlineStatusSelectorProps> = ({\n  value,\n  onSave,\n  onCancel,\n  loading = false,\n  className = '',\n}) => {\n  const [tempValue, setTempValue] = useState<InterviewOutcome>(value);\n  const selectRef = useRef<HTMLSelectElement>(null);\n\n  useEffect(() => {\n    // Focus the select when component mounts\n    if (selectRef.current) {\n      selectRef.current.focus();\n    }\n  }, []);\n\n  const handleSave = () => {\n    onSave(tempValue);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSave();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      onCancel();\n    }\n  };\n\n  const statusOptions = [\n    { value: InterviewOutcome.PENDING, label: 'Pending' },\n    { value: InterviewOutcome.PASSED, label: 'Passed' },\n    { value: InterviewOutcome.FAILED, label: 'Failed' },\n    { value: InterviewOutcome.CANCELLED, label: 'Cancelled' },\n  ];\n\n  return (\n    <div className={`inline-flex items-center space-x-2 ${className}`}>\n      <select\n        ref={selectRef}\n        value={tempValue}\n        onChange={(e) => setTempValue(e.target.value as InterviewOutcome)}\n        onKeyDown={handleKeyDown}\n        className=\"px-3 py-1 border border-gray-300 rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500\"\n        disabled={loading}\n      >\n        {statusOptions.map((option) => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n\n      <Button\n        variant=\"ghost\"\n        size=\"sm\"\n        onClick={handleSave}\n        disabled={loading || tempValue === value}\n        className=\"p-1 text-green-600 hover:text-green-700 hover:bg-green-50\"\n      >\n        <CheckIcon className=\"h-4 w-4\" />\n      </Button>\n\n      <Button\n        variant=\"ghost\"\n        size=\"sm\"\n        onClick={onCancel}\n        disabled={loading}\n        className=\"p-1 text-red-600 hover:text-red-700 hover:bg-red-50\"\n      >\n        <XMarkIcon className=\"h-4 w-4\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default InlineStatusSelector;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}