{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useRef, useCallback } from 'react';\nexport const useSwipeGestures = options => {\n  _s();\n  const {\n    onSwipeLeft,\n    onSwipeRight,\n    onSwipeUp,\n    onSwipeDown,\n    threshold = 50,\n    preventDefaultTouchmove = false\n  } = options;\n  const touchStart = useRef(null);\n  const touchEnd = useRef(null);\n  const handleTouchStart = useCallback(e => {\n    touchEnd.current = null;\n    touchStart.current = {\n      x: e.targetTouches[0].clientX,\n      y: e.targetTouches[0].clientY\n    };\n  }, []);\n  const handleTouchMove = useCallback(e => {\n    if (preventDefaultTouchmove) {\n      e.preventDefault();\n    }\n    touchEnd.current = {\n      x: e.targetTouches[0].clientX,\n      y: e.targetTouches[0].clientY\n    };\n  }, [preventDefaultTouchmove]);\n  const handleTouchEnd = useCallback(() => {\n    if (!touchStart.current || !touchEnd.current) return;\n    const distanceX = touchStart.current.x - touchEnd.current.x;\n    const distanceY = touchStart.current.y - touchEnd.current.y;\n    const isLeftSwipe = distanceX > threshold;\n    const isRightSwipe = distanceX < -threshold;\n    const isUpSwipe = distanceY > threshold;\n    const isDownSwipe = distanceY < -threshold;\n\n    // Determine if horizontal or vertical swipe is more prominent\n    const isHorizontalSwipe = Math.abs(distanceX) > Math.abs(distanceY);\n    if (isHorizontalSwipe) {\n      if (isLeftSwipe && onSwipeLeft) {\n        onSwipeLeft();\n      } else if (isRightSwipe && onSwipeRight) {\n        onSwipeRight();\n      }\n    } else {\n      if (isUpSwipe && onSwipeUp) {\n        onSwipeUp();\n      } else if (isDownSwipe && onSwipeDown) {\n        onSwipeDown();\n      }\n    }\n\n    // Reset\n    touchStart.current = null;\n    touchEnd.current = null;\n  }, [onSwipeLeft, onSwipeRight, onSwipeUp, onSwipeDown, threshold]);\n  const attachSwipeListeners = useCallback(element => {\n    if (!element) return;\n    element.addEventListener('touchstart', handleTouchStart, {\n      passive: true\n    });\n    element.addEventListener('touchmove', handleTouchMove, {\n      passive: !preventDefaultTouchmove\n    });\n    element.addEventListener('touchend', handleTouchEnd, {\n      passive: true\n    });\n    return () => {\n      element.removeEventListener('touchstart', handleTouchStart);\n      element.removeEventListener('touchmove', handleTouchMove);\n      element.removeEventListener('touchend', handleTouchEnd);\n    };\n  }, [handleTouchStart, handleTouchMove, handleTouchEnd, preventDefaultTouchmove]);\n  return {\n    attachSwipeListeners\n  };\n};\n_s(useSwipeGestures, \"YzAoh3/2aQRNHiGC2yCvOQrOUvE=\");\nexport default useSwipeGestures;","map":{"version":3,"names":["useRef","useCallback","useSwipeGestures","options","_s","onSwipeLeft","onSwipeRight","onSwipeUp","onSwipeDown","threshold","preventDefaultTouchmove","touchStart","touchEnd","handleTouchStart","e","current","x","targetTouches","clientX","y","clientY","handleTouchMove","preventDefault","handleTouchEnd","distanceX","distanceY","isLeftSwipe","isRightSwipe","isUpSwipe","isDownSwipe","isHorizontalSwipe","Math","abs","attachSwipeListeners","element","addEventListener","passive","removeEventListener"],"sources":["/home/haim/github/job-search-tracker-api/frontend/src/hooks/useSwipeGestures.ts"],"sourcesContent":["import { useRef, useCallback, useEffect } from 'react';\n\ninterface SwipeGestureOptions {\n  onSwipeLeft?: () => void;\n  onSwipeRight?: () => void;\n  onSwipeUp?: () => void;\n  onSwipeDown?: () => void;\n  threshold?: number;\n  preventDefaultTouchmove?: boolean;\n}\n\ninterface TouchPosition {\n  x: number;\n  y: number;\n}\n\nexport const useSwipeGestures = (options: SwipeGestureOptions) => {\n  const {\n    onSwipeLeft,\n    onSwipeRight,\n    onSwipeUp,\n    onSwipeDown,\n    threshold = 50,\n    preventDefaultTouchmove = false,\n  } = options;\n\n  const touchStart = useRef<TouchPosition | null>(null);\n  const touchEnd = useRef<TouchPosition | null>(null);\n\n  const handleTouchStart = useCallback((e: TouchEvent) => {\n    touchEnd.current = null;\n    touchStart.current = {\n      x: e.targetTouches[0].clientX,\n      y: e.targetTouches[0].clientY,\n    };\n  }, []);\n\n  const handleTouchMove = useCallback((e: TouchEvent) => {\n    if (preventDefaultTouchmove) {\n      e.preventDefault();\n    }\n    touchEnd.current = {\n      x: e.targetTouches[0].clientX,\n      y: e.targetTouches[0].clientY,\n    };\n  }, [preventDefaultTouchmove]);\n\n  const handleTouchEnd = useCallback(() => {\n    if (!touchStart.current || !touchEnd.current) return;\n\n    const distanceX = touchStart.current.x - touchEnd.current.x;\n    const distanceY = touchStart.current.y - touchEnd.current.y;\n    const isLeftSwipe = distanceX > threshold;\n    const isRightSwipe = distanceX < -threshold;\n    const isUpSwipe = distanceY > threshold;\n    const isDownSwipe = distanceY < -threshold;\n\n    // Determine if horizontal or vertical swipe is more prominent\n    const isHorizontalSwipe = Math.abs(distanceX) > Math.abs(distanceY);\n\n    if (isHorizontalSwipe) {\n      if (isLeftSwipe && onSwipeLeft) {\n        onSwipeLeft();\n      } else if (isRightSwipe && onSwipeRight) {\n        onSwipeRight();\n      }\n    } else {\n      if (isUpSwipe && onSwipeUp) {\n        onSwipeUp();\n      } else if (isDownSwipe && onSwipeDown) {\n        onSwipeDown();\n      }\n    }\n\n    // Reset\n    touchStart.current = null;\n    touchEnd.current = null;\n  }, [onSwipeLeft, onSwipeRight, onSwipeUp, onSwipeDown, threshold]);\n\n  const attachSwipeListeners = useCallback((element: HTMLElement | null) => {\n    if (!element) return;\n\n    element.addEventListener('touchstart', handleTouchStart, { passive: true });\n    element.addEventListener('touchmove', handleTouchMove, { passive: !preventDefaultTouchmove });\n    element.addEventListener('touchend', handleTouchEnd, { passive: true });\n\n    return () => {\n      element.removeEventListener('touchstart', handleTouchStart);\n      element.removeEventListener('touchmove', handleTouchMove);\n      element.removeEventListener('touchend', handleTouchEnd);\n    };\n  }, [handleTouchStart, handleTouchMove, handleTouchEnd, preventDefaultTouchmove]);\n\n  return { attachSwipeListeners };\n};\n\nexport default useSwipeGestures;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}