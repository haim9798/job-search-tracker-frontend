{"ast":null,"code":"var _jsxFileName = \"/home/haim/github/job-search-tracker-api/frontend/src/components/auth/AuthGuard.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../hooks/useAuth';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const AuthGuard = ({\n  children,\n  redirectTo = '/login',\n  requireAuth = true\n}) => {\n  _s();\n  const {\n    isAuthenticated,\n    isLoading,\n    isInitialized\n  } = useAuth();\n  const location = useLocation();\n\n  // Show loading spinner while checking authentication\n  if (!isInitialized || isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-4 text-gray-600\",\n          children: \"Loading...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If authentication is required but user is not authenticated\n  if (requireAuth && !isAuthenticated) {\n    // Save the attempted location for redirect after login\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: redirectTo,\n      state: {\n        from: location\n      },\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this);\n  }\n\n  // If authentication is not required but user is authenticated (e.g., login page)\n  if (!requireAuth && isAuthenticated) {\n    var _location$state, _location$state$from;\n    // Redirect to dashboard or the originally requested page\n    const from = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : (_location$state$from = _location$state.from) === null || _location$state$from === void 0 ? void 0 : _location$state$from.pathname) || '/dashboard';\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: from,\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n\n  // Render children if all conditions are met\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: children\n  }, void 0, false);\n};\n\n// Higher-order component for protecting routes\n_s(AuthGuard, \"JO6iqd4KK/KI7NpYOLOSu6yerwk=\", false, function () {\n  return [useAuth, useLocation];\n});\n_c = AuthGuard;\nexport const withAuthGuard = (Component, options) => {\n  const WrappedComponent = props => /*#__PURE__*/_jsxDEV(AuthGuard, {\n    ...options,\n    children: /*#__PURE__*/_jsxDEV(Component, {\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n  WrappedComponent.displayName = `withAuthGuard(${Component.displayName || Component.name})`;\n  return WrappedComponent;\n};\n\n// Hook for checking auth status in components\nexport const useAuthGuard = () => {\n  _s2();\n  const {\n    isAuthenticated,\n    isLoading,\n    isInitialized,\n    user\n  } = useAuth();\n  return {\n    isAuthenticated,\n    isLoading,\n    isInitialized,\n    user,\n    canAccess: isAuthenticated && isInitialized && !isLoading,\n    shouldRedirect: !isAuthenticated && isInitialized && !isLoading\n  };\n};\n_s2(useAuthGuard, \"1t/VmvuGcGdwmnF/LokOxqAp5TU=\", false, function () {\n  return [useAuth];\n});\nexport default AuthGuard;\nvar _c;\n$RefreshReg$(_c, \"AuthGuard\");","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","jsxDEV","_jsxDEV","Fragment","_Fragment","AuthGuard","children","redirectTo","requireAuth","_s","isAuthenticated","isLoading","isInitialized","location","className","fileName","_jsxFileName","lineNumber","columnNumber","to","state","from","replace","_location$state","_location$state$from","pathname","_c","withAuthGuard","Component","options","WrappedComponent","props","displayName","name","useAuthGuard","_s2","user","canAccess","shouldRedirect","$RefreshReg$"],"sources":["/home/haim/github/job-search-tracker-api/frontend/src/components/auth/AuthGuard.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../hooks/useAuth';\n\ninterface AuthGuardProps {\n  children: React.ReactNode;\n  redirectTo?: string;\n  requireAuth?: boolean;\n}\n\nexport const AuthGuard: React.FC<AuthGuardProps> = ({\n  children,\n  redirectTo = '/login',\n  requireAuth = true,\n}) => {\n  const { isAuthenticated, isLoading, isInitialized } = useAuth();\n  const location = useLocation();\n\n  // Show loading spinner while checking authentication\n  if (!isInitialized || isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // If authentication is required but user is not authenticated\n  if (requireAuth && !isAuthenticated) {\n    // Save the attempted location for redirect after login\n    return (\n      <Navigate\n        to={redirectTo}\n        state={{ from: location }}\n        replace\n      />\n    );\n  }\n\n  // If authentication is not required but user is authenticated (e.g., login page)\n  if (!requireAuth && isAuthenticated) {\n    // Redirect to dashboard or the originally requested page\n    const from = location.state?.from?.pathname || '/dashboard';\n    return <Navigate to={from} replace />;\n  }\n\n  // Render children if all conditions are met\n  return <>{children}</>;\n};\n\n// Higher-order component for protecting routes\nexport const withAuthGuard = <P extends object>(\n  Component: React.ComponentType<P>,\n  options?: Omit<AuthGuardProps, 'children'>\n) => {\n  const WrappedComponent = (props: P) => (\n    <AuthGuard {...options}>\n      <Component {...props} />\n    </AuthGuard>\n  );\n\n  WrappedComponent.displayName = `withAuthGuard(${Component.displayName || Component.name})`;\n  \n  return WrappedComponent;\n};\n\n// Hook for checking auth status in components\nexport const useAuthGuard = () => {\n  const { isAuthenticated, isLoading, isInitialized, user } = useAuth();\n  \n  return {\n    isAuthenticated,\n    isLoading,\n    isInitialized,\n    user,\n    canAccess: isAuthenticated && isInitialized && !isLoading,\n    shouldRedirect: !isAuthenticated && isInitialized && !isLoading,\n  };\n};\n\nexport default AuthGuard;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}