{"ast":null,"code":"var _jsxFileName = \"/home/haim/github/job-search-tracker-api/frontend/src/providers/CacheProvider.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$();\nimport React, { createContext, useContext, useEffect } from 'react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { useLocation } from 'react-router-dom';\nimport { useCacheWarming, useSmartPrefetch, useIntelligentPrefetch, useIdlePrefetch } from '../hooks/useCacheWarming';\nimport { useCacheInvalidation, useBackgroundSync } from '../hooks/useCacheInvalidation';\nimport { useCacheMetrics, useQueryCacheMetrics } from '../hooks/useCacheMetrics';\nimport { CacheManager } from '../utils/cacheManager';\nimport { useOfflineQueue } from '../utils/offlineQueue';\nimport { useCachePersistence } from '../utils/cachePersistence';\nimport { usePerformanceMonitor } from '../utils/performanceMonitor';\n\n// Cache context interface\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CacheContext = /*#__PURE__*/createContext(undefined);\n\n// Cache provider component\nexport const CacheProvider = ({\n  children\n}) => {\n  _s();\n  const location = useLocation();\n  const queryClient = useQueryClient();\n\n  // Initialize cache warming and prefetching\n  const {\n    warmCache\n  } = useCacheWarming();\n  const {\n    prefetchOnHover,\n    prefetchRelatedData\n  } = useSmartPrefetch();\n  const {\n    prefetchBasedOnRoute,\n    prefetchBasedOnTime,\n    prefetchBasedOnUserActivity\n  } = useIntelligentPrefetch();\n  useIdlePrefetch();\n\n  // Initialize cache invalidation and background sync\n  const {\n    invalidatePositions,\n    invalidatePosition,\n    invalidateInterviews,\n    invalidateInterview,\n    clearAllCache\n  } = useCacheInvalidation();\n  const {\n    syncCriticalData,\n    startBackgroundSync,\n    syncOnReconnect,\n    syncOnVisibilityChange\n  } = useBackgroundSync();\n\n  // Initialize cache metrics\n  const {\n    metrics: cacheMetrics,\n    getCacheHealthScore,\n    exportMetrics,\n    trackCacheHit,\n    trackCacheMiss,\n    trackQueryTime,\n    trackMutationTime,\n    trackError,\n    trackSuccess\n  } = useCacheMetrics();\n  const {\n    queryMetrics\n  } = useQueryCacheMetrics();\n\n  // Initialize offline support\n  const {\n    queue: offlineQueue,\n    isOnline,\n    addToQueue: addToOfflineQueue,\n    processQueue: processOfflineQueue,\n    clearQueue: clearOfflineQueue\n  } = useOfflineQueue();\n\n  // Initialize cache persistence\n  const {\n    isRestored,\n    persistenceStats,\n    persistCache,\n    clearPersistedCache\n  } = useCachePersistence(queryClient);\n\n  // Initialize performance monitoring\n  const {\n    metrics: performanceMetrics,\n    summary: performanceSummary,\n    startMeasurement,\n    exportData: exportPerformanceData,\n    clearData: clearPerformanceData\n  } = usePerformanceMonitor();\n\n  // Set up route-based prefetching\n  useEffect(() => {\n    prefetchBasedOnRoute(location.pathname);\n  }, [location.pathname, prefetchBasedOnRoute]);\n\n  // Set up time-based prefetching\n  useEffect(() => {\n    prefetchBasedOnTime();\n\n    // Set up periodic time-based prefetching\n    const interval = setInterval(prefetchBasedOnTime, 60 * 60 * 1000); // Every hour\n    return () => clearInterval(interval);\n  }, [prefetchBasedOnTime]);\n\n  // Set up background sync\n  useEffect(() => {\n    const stopBackgroundSync = startBackgroundSync();\n    const stopReconnectSync = syncOnReconnect();\n    const stopVisibilitySync = syncOnVisibilityChange();\n    return () => {\n      stopBackgroundSync();\n      stopReconnectSync();\n      stopVisibilitySync();\n    };\n  }, [startBackgroundSync, syncOnReconnect, syncOnVisibilityChange]);\n\n  // Set up performance monitoring\n  useEffect(() => {\n    // Monitor query performance\n    const originalFetch = window.fetch;\n    window.fetch = async (...args) => {\n      const startTime = performance.now();\n      try {\n        const response = await originalFetch(...args);\n        const duration = performance.now() - startTime;\n        if (response.ok) {\n          var _args$;\n          trackSuccess();\n          if ((_args$ = args[0]) !== null && _args$ !== void 0 && _args$.toString().includes('/api/')) {\n            trackQueryTime(args[0].toString(), duration);\n          }\n        } else {\n          trackError();\n        }\n        return response;\n      } catch (error) {\n        var _args$2;\n        const duration = performance.now() - startTime;\n        trackError();\n        trackQueryTime(((_args$2 = args[0]) === null || _args$2 === void 0 ? void 0 : _args$2.toString()) || 'unknown', duration);\n        throw error;\n      }\n    };\n    return () => {\n      window.fetch = originalFetch;\n    };\n  }, [trackSuccess, trackError, trackQueryTime]);\n\n  // Set up cache hit/miss tracking\n  useEffect(() => {\n    // Override localStorage methods to track cache operations\n    const originalGetItem = localStorage.getItem;\n    const originalSetItem = localStorage.setItem;\n    localStorage.getItem = function (key) {\n      const startTime = performance.now();\n      const result = originalGetItem.call(this, key);\n      const duration = performance.now() - startTime;\n      if (key.startsWith('cache_') || key.startsWith('draft_')) {\n        if (result) {\n          trackCacheHit();\n        } else {\n          trackCacheMiss();\n        }\n      }\n      return result;\n    };\n    localStorage.setItem = function (key, value) {\n      const startTime = performance.now();\n      const result = originalSetItem.call(this, key, value);\n      const duration = performance.now() - startTime;\n      return result;\n    };\n    return () => {\n      localStorage.getItem = originalGetItem;\n      localStorage.setItem = originalSetItem;\n    };\n  }, [trackCacheHit, trackCacheMiss]);\n\n  // User activity tracking for intelligent prefetching\n  useEffect(() => {\n    let lastActivity = new Date();\n    const updateActivity = () => {\n      lastActivity = new Date();\n    };\n    const events = ['mousedown', 'keydown', 'scroll', 'touchstart'];\n    events.forEach(event => {\n      document.addEventListener(event, updateActivity);\n    });\n\n    // Check for user activity patterns\n    const activityInterval = setInterval(() => {\n      const timeSinceActivity = Date.now() - lastActivity.getTime();\n\n      // If user has been inactive for 10 minutes, prefetch based on common patterns\n      if (timeSinceActivity > 10 * 60 * 1000) {\n        prefetchBasedOnUserActivity('idle');\n      }\n    }, 5 * 60 * 1000); // Check every 5 minutes\n\n    return () => {\n      events.forEach(event => {\n        document.removeEventListener(event, updateActivity);\n      });\n      clearInterval(activityInterval);\n    };\n  }, [prefetchBasedOnUserActivity]);\n\n  // Cache cleanup on app start\n  useEffect(() => {\n    CacheManager.clearExpiredCache();\n\n    // Set up periodic cleanup\n    const cleanupInterval = setInterval(() => {\n      CacheManager.clearExpiredCache();\n    }, 30 * 60 * 1000); // Every 30 minutes\n\n    return () => clearInterval(cleanupInterval);\n  }, []);\n\n  // Context value\n  const contextValue = {\n    // Cache warming and prefetching\n    warmCache,\n    prefetchOnHover,\n    prefetchRelatedData,\n    // Cache invalidation\n    invalidatePositions,\n    invalidatePosition,\n    invalidateInterviews,\n    invalidateInterview,\n    clearAllCache,\n    // Background sync\n    syncCriticalData,\n    startBackgroundSync,\n    // Cache metrics\n    cacheMetrics,\n    queryMetrics,\n    getCacheHealthScore,\n    exportMetrics,\n    // Cache management\n    getCacheSize: CacheManager.getCacheSize,\n    clearExpiredCache: CacheManager.clearExpiredCache,\n    // User preferences\n    getUserPreferences: CacheManager.getUserPreferences,\n    setUserPreferences: CacheManager.setUserPreferences,\n    // Offline support\n    offlineQueue,\n    isOnline,\n    addToOfflineQueue,\n    processOfflineQueue,\n    clearOfflineQueue,\n    // Cache persistence\n    isRestored,\n    persistenceStats,\n    persistCache,\n    clearPersistedCache,\n    // Performance monitoring\n    performanceMetrics,\n    performanceSummary,\n    startMeasurement,\n    exportPerformanceData,\n    clearPerformanceData\n  };\n  return /*#__PURE__*/_jsxDEV(CacheContext.Provider, {\n    value: contextValue,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 328,\n    columnNumber: 5\n  }, this);\n};\n\n// Hook to use cache context\n_s(CacheProvider, \"GGU5lW+PVGD+4SPou6gZSGJEZN4=\", false, function () {\n  return [useLocation, useQueryClient, useCacheWarming, useSmartPrefetch, useIntelligentPrefetch, useIdlePrefetch, useCacheInvalidation, useBackgroundSync, useCacheMetrics, useQueryCacheMetrics, useOfflineQueue, useCachePersistence, usePerformanceMonitor];\n});\n_c = CacheProvider;\nexport const useCache = () => {\n  _s2();\n  const context = useContext(CacheContext);\n  if (!context) {\n    throw new Error('useCache must be used within a CacheProvider');\n  }\n  return context;\n};\n\n// HOC for components that need cache functionality\n_s2(useCache, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\nexport const withCache = Component => {\n  return /*#__PURE__*/React.forwardRef((props, ref) => /*#__PURE__*/_jsxDEV(CacheProvider, {\n    children: /*#__PURE__*/_jsxDEV(Component, {\n      ...props,\n      ref: ref\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 346,\n    columnNumber: 5\n  }, this));\n};\n\n// Cache status component for debugging\nexport const CacheStatus = ({\n  showDetails = false\n}) => {\n  _s3();\n  const {\n    cacheMetrics,\n    queryMetrics,\n    getCacheHealthScore,\n    exportMetrics,\n    clearExpiredCache\n  } = useCache();\n  const healthScore = getCacheHealthScore();\n  if (!showDetails) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"fixed bottom-4 right-4 bg-white dark:bg-gray-800 p-2 rounded-lg shadow-lg text-xs\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-2 h-2 rounded-full ${healthScore >= 80 ? 'bg-green-500' : healthScore >= 60 ? 'bg-yellow-500' : 'bg-red-500'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 368,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Cache: \", healthScore, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 372,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Hit Rate: \", (cacheMetrics.hitRate * 100).toFixed(1), \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 373,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 367,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 366,\n      columnNumber: 7\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"fixed bottom-4 right-4 bg-white dark:bg-gray-800 p-4 rounded-lg shadow-lg text-xs max-w-sm\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"space-y-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex justify-between items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"font-semibold\",\n          children: \"Cache Status\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 383,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `px-2 py-1 rounded text-white ${healthScore >= 80 ? 'bg-green-500' : healthScore >= 60 ? 'bg-yellow-500' : 'bg-red-500'}`,\n          children: [healthScore, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 384,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 382,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"grid grid-cols-2 gap-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-600 dark:text-gray-400\",\n            children: \"Hit Rate\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 394,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-mono\",\n            children: [(cacheMetrics.hitRate * 100).toFixed(1), \"%\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 395,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 393,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-600 dark:text-gray-400\",\n            children: \"Queries\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 398,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-mono\",\n            children: queryMetrics.totalQueries\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 399,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 397,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-600 dark:text-gray-400\",\n            children: \"Cache Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 402,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-mono\",\n            children: [(cacheMetrics.cacheSize / 1024).toFixed(1), \"KB\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 403,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 401,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"text-gray-600 dark:text-gray-400\",\n            children: \"Avg Response\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 406,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"font-mono\",\n            children: [cacheMetrics.averageResponseTime.toFixed(0), \"ms\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 407,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 405,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: clearExpiredCache,\n          className: \"px-2 py-1 bg-blue-500 text-white rounded text-xs hover:bg-blue-600\",\n          children: \"Clean\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 412,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: exportMetrics,\n          className: \"px-2 py-1 bg-green-500 text-white rounded text-xs hover:bg-green-600\",\n          children: \"Export\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 418,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 411,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 381,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 380,\n    columnNumber: 5\n  }, this);\n};\n_s3(CacheStatus, \"aA/mPSehKbXZkY2q6PbUGQbZzEI=\", false, function () {\n  return [useCache];\n});\n_c2 = CacheStatus;\nvar _c, _c2;\n$RefreshReg$(_c, \"CacheProvider\");\n$RefreshReg$(_c2, \"CacheStatus\");","map":{"version":3,"names":["React","createContext","useContext","useEffect","useQueryClient","useLocation","useCacheWarming","useSmartPrefetch","useIntelligentPrefetch","useIdlePrefetch","useCacheInvalidation","useBackgroundSync","useCacheMetrics","useQueryCacheMetrics","CacheManager","useOfflineQueue","useCachePersistence","usePerformanceMonitor","jsxDEV","_jsxDEV","CacheContext","undefined","CacheProvider","children","_s","location","queryClient","warmCache","prefetchOnHover","prefetchRelatedData","prefetchBasedOnRoute","prefetchBasedOnTime","prefetchBasedOnUserActivity","invalidatePositions","invalidatePosition","invalidateInterviews","invalidateInterview","clearAllCache","syncCriticalData","startBackgroundSync","syncOnReconnect","syncOnVisibilityChange","metrics","cacheMetrics","getCacheHealthScore","exportMetrics","trackCacheHit","trackCacheMiss","trackQueryTime","trackMutationTime","trackError","trackSuccess","queryMetrics","queue","offlineQueue","isOnline","addToQueue","addToOfflineQueue","processQueue","processOfflineQueue","clearQueue","clearOfflineQueue","isRestored","persistenceStats","persistCache","clearPersistedCache","performanceMetrics","summary","performanceSummary","startMeasurement","exportData","exportPerformanceData","clearData","clearPerformanceData","pathname","interval","setInterval","clearInterval","stopBackgroundSync","stopReconnectSync","stopVisibilitySync","originalFetch","window","fetch","args","startTime","performance","now","response","duration","ok","_args$","toString","includes","error","_args$2","originalGetItem","localStorage","getItem","originalSetItem","setItem","key","result","call","startsWith","value","lastActivity","Date","updateActivity","events","forEach","event","document","addEventListener","activityInterval","timeSinceActivity","getTime","removeEventListener","clearExpiredCache","cleanupInterval","contextValue","getCacheSize","getUserPreferences","setUserPreferences","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useCache","_s2","context","Error","withCache","Component","forwardRef","props","ref","CacheStatus","showDetails","_s3","healthScore","className","hitRate","toFixed","totalQueries","cacheSize","averageResponseTime","onClick","_c2","$RefreshReg$"],"sources":["/home/haim/github/job-search-tracker-api/frontend/src/providers/CacheProvider.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, ReactNode } from 'react';\nimport { useQueryClient } from '@tanstack/react-query';\nimport { useLocation } from 'react-router-dom';\nimport { useCacheWarming, useSmartPrefetch, useIntelligentPrefetch, useIdlePrefetch } from '../hooks/useCacheWarming';\nimport { useCacheInvalidation, useBackgroundSync } from '../hooks/useCacheInvalidation';\nimport { useCacheMetrics, useQueryCacheMetrics } from '../hooks/useCacheMetrics';\nimport { CacheManager, SessionCache } from '../utils/cacheManager';\nimport { OfflineQueue, useOfflineQueue } from '../utils/offlineQueue';\nimport { CachePersistence, useCachePersistence } from '../utils/cachePersistence';\nimport { PerformanceMonitor, usePerformanceMonitor } from '../utils/performanceMonitor';\n\n// Cache context interface\ninterface CacheContextType {\n  // Cache warming and prefetching\n  warmCache: () => Promise<void>;\n  prefetchOnHover: (id: string, type: 'position' | 'interview') => { startPrefetch: () => void; cancelPrefetch: () => void };\n  prefetchRelatedData: (positionId: string) => void;\n  \n  // Cache invalidation\n  invalidatePositions: () => void;\n  invalidatePosition: (id: string) => void;\n  invalidateInterviews: () => void;\n  invalidateInterview: (id: string, positionId?: string) => void;\n  clearAllCache: () => void;\n  \n  // Background sync\n  syncCriticalData: () => void;\n  startBackgroundSync: (interval?: number) => () => void;\n  \n  // Cache metrics\n  cacheMetrics: ReturnType<typeof useCacheMetrics>['metrics'];\n  queryMetrics: ReturnType<typeof useQueryCacheMetrics>['queryMetrics'];\n  getCacheHealthScore: () => number;\n  exportMetrics: () => void;\n  \n  // Cache management\n  getCacheSize: () => { totalSize: number; itemCount: number };\n  clearExpiredCache: () => void;\n  \n  // User preferences\n  getUserPreferences: () => ReturnType<typeof CacheManager.getUserPreferences>;\n  setUserPreferences: (prefs: Parameters<typeof CacheManager.setUserPreferences>[0]) => void;\n  \n  // Offline support\n  offlineQueue: ReturnType<typeof useOfflineQueue>['queue'];\n  isOnline: boolean;\n  addToOfflineQueue: ReturnType<typeof useOfflineQueue>['addToQueue'];\n  processOfflineQueue: () => void;\n  clearOfflineQueue: () => void;\n  \n  // Cache persistence\n  isRestored: boolean;\n  persistenceStats: ReturnType<typeof useCachePersistence>['persistenceStats'];\n  persistCache: () => void;\n  clearPersistedCache: () => void;\n  \n  // Performance monitoring\n  performanceMetrics: ReturnType<typeof usePerformanceMonitor>['metrics'];\n  performanceSummary: ReturnType<typeof usePerformanceMonitor>['summary'];\n  startMeasurement: ReturnType<typeof usePerformanceMonitor>['startMeasurement'];\n  exportPerformanceData: () => void;\n  clearPerformanceData: () => void;\n}\n\nconst CacheContext = createContext<CacheContextType | undefined>(undefined);\n\n// Cache provider component\nexport const CacheProvider: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const location = useLocation();\n  const queryClient = useQueryClient();\n  \n  // Initialize cache warming and prefetching\n  const { warmCache } = useCacheWarming();\n  const { prefetchOnHover, prefetchRelatedData } = useSmartPrefetch();\n  const { prefetchBasedOnRoute, prefetchBasedOnTime, prefetchBasedOnUserActivity } = useIntelligentPrefetch();\n  useIdlePrefetch();\n  \n  // Initialize cache invalidation and background sync\n  const {\n    invalidatePositions,\n    invalidatePosition,\n    invalidateInterviews,\n    invalidateInterview,\n    clearAllCache,\n  } = useCacheInvalidation();\n  \n  const {\n    syncCriticalData,\n    startBackgroundSync,\n    syncOnReconnect,\n    syncOnVisibilityChange,\n  } = useBackgroundSync();\n  \n  // Initialize cache metrics\n  const {\n    metrics: cacheMetrics,\n    getCacheHealthScore,\n    exportMetrics,\n    trackCacheHit,\n    trackCacheMiss,\n    trackQueryTime,\n    trackMutationTime,\n    trackError,\n    trackSuccess,\n  } = useCacheMetrics();\n  \n  const { queryMetrics } = useQueryCacheMetrics();\n  \n  // Initialize offline support\n  const {\n    queue: offlineQueue,\n    isOnline,\n    addToQueue: addToOfflineQueue,\n    processQueue: processOfflineQueue,\n    clearQueue: clearOfflineQueue,\n  } = useOfflineQueue();\n  \n  // Initialize cache persistence\n  const {\n    isRestored,\n    persistenceStats,\n    persistCache,\n    clearPersistedCache,\n  } = useCachePersistence(queryClient);\n  \n  // Initialize performance monitoring\n  const {\n    metrics: performanceMetrics,\n    summary: performanceSummary,\n    startMeasurement,\n    exportData: exportPerformanceData,\n    clearData: clearPerformanceData,\n  } = usePerformanceMonitor();\n  \n  // Set up route-based prefetching\n  useEffect(() => {\n    prefetchBasedOnRoute(location.pathname);\n  }, [location.pathname, prefetchBasedOnRoute]);\n  \n  // Set up time-based prefetching\n  useEffect(() => {\n    prefetchBasedOnTime();\n    \n    // Set up periodic time-based prefetching\n    const interval = setInterval(prefetchBasedOnTime, 60 * 60 * 1000); // Every hour\n    return () => clearInterval(interval);\n  }, [prefetchBasedOnTime]);\n  \n  // Set up background sync\n  useEffect(() => {\n    const stopBackgroundSync = startBackgroundSync();\n    const stopReconnectSync = syncOnReconnect();\n    const stopVisibilitySync = syncOnVisibilityChange();\n    \n    return () => {\n      stopBackgroundSync();\n      stopReconnectSync();\n      stopVisibilitySync();\n    };\n  }, [startBackgroundSync, syncOnReconnect, syncOnVisibilityChange]);\n  \n  // Set up performance monitoring\n  useEffect(() => {\n    // Monitor query performance\n    const originalFetch = window.fetch;\n    window.fetch = async (...args) => {\n      const startTime = performance.now();\n      try {\n        const response = await originalFetch(...args);\n        const duration = performance.now() - startTime;\n        \n        if (response.ok) {\n          trackSuccess();\n          if (args[0]?.toString().includes('/api/')) {\n            trackQueryTime(args[0].toString(), duration);\n          }\n        } else {\n          trackError();\n        }\n        \n        return response;\n      } catch (error) {\n        const duration = performance.now() - startTime;\n        trackError();\n        trackQueryTime(args[0]?.toString() || 'unknown', duration);\n        throw error;\n      }\n    };\n    \n    return () => {\n      window.fetch = originalFetch;\n    };\n  }, [trackSuccess, trackError, trackQueryTime]);\n  \n  // Set up cache hit/miss tracking\n  useEffect(() => {\n    // Override localStorage methods to track cache operations\n    const originalGetItem = localStorage.getItem;\n    const originalSetItem = localStorage.setItem;\n    \n    localStorage.getItem = function(key: string) {\n      const startTime = performance.now();\n      const result = originalGetItem.call(this, key);\n      const duration = performance.now() - startTime;\n      \n      if (key.startsWith('cache_') || key.startsWith('draft_')) {\n        if (result) {\n          trackCacheHit();\n        } else {\n          trackCacheMiss();\n        }\n      }\n      \n      return result;\n    };\n    \n    localStorage.setItem = function(key: string, value: string) {\n      const startTime = performance.now();\n      const result = originalSetItem.call(this, key, value);\n      const duration = performance.now() - startTime;\n      \n      return result;\n    };\n    \n    return () => {\n      localStorage.getItem = originalGetItem;\n      localStorage.setItem = originalSetItem;\n    };\n  }, [trackCacheHit, trackCacheMiss]);\n  \n  // User activity tracking for intelligent prefetching\n  useEffect(() => {\n    let lastActivity = new Date();\n    \n    const updateActivity = () => {\n      lastActivity = new Date();\n    };\n    \n    const events = ['mousedown', 'keydown', 'scroll', 'touchstart'];\n    events.forEach(event => {\n      document.addEventListener(event, updateActivity);\n    });\n    \n    // Check for user activity patterns\n    const activityInterval = setInterval(() => {\n      const timeSinceActivity = Date.now() - lastActivity.getTime();\n      \n      // If user has been inactive for 10 minutes, prefetch based on common patterns\n      if (timeSinceActivity > 10 * 60 * 1000) {\n        prefetchBasedOnUserActivity('idle');\n      }\n    }, 5 * 60 * 1000); // Check every 5 minutes\n    \n    return () => {\n      events.forEach(event => {\n        document.removeEventListener(event, updateActivity);\n      });\n      clearInterval(activityInterval);\n    };\n  }, [prefetchBasedOnUserActivity]);\n  \n  // Cache cleanup on app start\n  useEffect(() => {\n    CacheManager.clearExpiredCache();\n    \n    // Set up periodic cleanup\n    const cleanupInterval = setInterval(() => {\n      CacheManager.clearExpiredCache();\n    }, 30 * 60 * 1000); // Every 30 minutes\n    \n    return () => clearInterval(cleanupInterval);\n  }, []);\n  \n  // Context value\n  const contextValue: CacheContextType = {\n    // Cache warming and prefetching\n    warmCache,\n    prefetchOnHover,\n    prefetchRelatedData,\n    \n    // Cache invalidation\n    invalidatePositions,\n    invalidatePosition,\n    invalidateInterviews,\n    invalidateInterview,\n    clearAllCache,\n    \n    // Background sync\n    syncCriticalData,\n    startBackgroundSync,\n    \n    // Cache metrics\n    cacheMetrics,\n    queryMetrics,\n    getCacheHealthScore,\n    exportMetrics,\n    \n    // Cache management\n    getCacheSize: CacheManager.getCacheSize,\n    clearExpiredCache: CacheManager.clearExpiredCache,\n    \n    // User preferences\n    getUserPreferences: CacheManager.getUserPreferences,\n    setUserPreferences: CacheManager.setUserPreferences,\n    \n    // Offline support\n    offlineQueue,\n    isOnline,\n    addToOfflineQueue,\n    processOfflineQueue,\n    clearOfflineQueue,\n    \n    // Cache persistence\n    isRestored,\n    persistenceStats,\n    persistCache,\n    clearPersistedCache,\n    \n    // Performance monitoring\n    performanceMetrics,\n    performanceSummary,\n    startMeasurement,\n    exportPerformanceData,\n    clearPerformanceData,\n  };\n  \n  return (\n    <CacheContext.Provider value={contextValue}>\n      {children}\n    </CacheContext.Provider>\n  );\n};\n\n// Hook to use cache context\nexport const useCache = (): CacheContextType => {\n  const context = useContext(CacheContext);\n  if (!context) {\n    throw new Error('useCache must be used within a CacheProvider');\n  }\n  return context;\n};\n\n// HOC for components that need cache functionality\nexport const withCache = <P extends object>(Component: React.ComponentType<P>) => {\n  return React.forwardRef<any, P>((props, ref) => (\n    <CacheProvider>\n      <Component {...props} ref={ref} />\n    </CacheProvider>\n  ));\n};\n\n// Cache status component for debugging\nexport const CacheStatus: React.FC<{ showDetails?: boolean }> = ({ showDetails = false }) => {\n  const {\n    cacheMetrics,\n    queryMetrics,\n    getCacheHealthScore,\n    exportMetrics,\n    clearExpiredCache,\n  } = useCache();\n  \n  const healthScore = getCacheHealthScore();\n  \n  if (!showDetails) {\n    return (\n      <div className=\"fixed bottom-4 right-4 bg-white dark:bg-gray-800 p-2 rounded-lg shadow-lg text-xs\">\n        <div className=\"flex items-center space-x-2\">\n          <div className={`w-2 h-2 rounded-full ${\n            healthScore >= 80 ? 'bg-green-500' : \n            healthScore >= 60 ? 'bg-yellow-500' : 'bg-red-500'\n          }`} />\n          <span>Cache: {healthScore}%</span>\n          <span>Hit Rate: {(cacheMetrics.hitRate * 100).toFixed(1)}%</span>\n        </div>\n      </div>\n    );\n  }\n  \n  return (\n    <div className=\"fixed bottom-4 right-4 bg-white dark:bg-gray-800 p-4 rounded-lg shadow-lg text-xs max-w-sm\">\n      <div className=\"space-y-2\">\n        <div className=\"flex justify-between items-center\">\n          <h3 className=\"font-semibold\">Cache Status</h3>\n          <div className={`px-2 py-1 rounded text-white ${\n            healthScore >= 80 ? 'bg-green-500' : \n            healthScore >= 60 ? 'bg-yellow-500' : 'bg-red-500'\n          }`}>\n            {healthScore}%\n          </div>\n        </div>\n        \n        <div className=\"grid grid-cols-2 gap-2\">\n          <div>\n            <div className=\"text-gray-600 dark:text-gray-400\">Hit Rate</div>\n            <div className=\"font-mono\">{(cacheMetrics.hitRate * 100).toFixed(1)}%</div>\n          </div>\n          <div>\n            <div className=\"text-gray-600 dark:text-gray-400\">Queries</div>\n            <div className=\"font-mono\">{queryMetrics.totalQueries}</div>\n          </div>\n          <div>\n            <div className=\"text-gray-600 dark:text-gray-400\">Cache Size</div>\n            <div className=\"font-mono\">{(cacheMetrics.cacheSize / 1024).toFixed(1)}KB</div>\n          </div>\n          <div>\n            <div className=\"text-gray-600 dark:text-gray-400\">Avg Response</div>\n            <div className=\"font-mono\">{cacheMetrics.averageResponseTime.toFixed(0)}ms</div>\n          </div>\n        </div>\n        \n        <div className=\"flex space-x-2\">\n          <button\n            onClick={clearExpiredCache}\n            className=\"px-2 py-1 bg-blue-500 text-white rounded text-xs hover:bg-blue-600\"\n          >\n            Clean\n          </button>\n          <button\n            onClick={exportMetrics}\n            className=\"px-2 py-1 bg-green-500 text-white rounded text-xs hover:bg-green-600\"\n          >\n            Export\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}