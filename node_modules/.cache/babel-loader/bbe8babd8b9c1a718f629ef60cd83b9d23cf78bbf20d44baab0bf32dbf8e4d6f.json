{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$(),\n  _s5 = $RefreshSig$(),\n  _s6 = $RefreshSig$(),\n  _s7 = $RefreshSig$(),\n  _s8 = $RefreshSig$(),\n  _s9 = $RefreshSig$(),\n  _s0 = $RefreshSig$(),\n  _s1 = $RefreshSig$(),\n  _s10 = $RefreshSig$(),\n  _s11 = $RefreshSig$(),\n  _s12 = $RefreshSig$(),\n  _s13 = $RefreshSig$(),\n  _s14 = $RefreshSig$(),\n  _s15 = $RefreshSig$(),\n  _s16 = $RefreshSig$(),\n  _s17 = $RefreshSig$(),\n  _s18 = $RefreshSig$(),\n  _s19 = $RefreshSig$(),\n  _s20 = $RefreshSig$(),\n  _s21 = $RefreshSig$(),\n  _s22 = $RefreshSig$(),\n  _s23 = $RefreshSig$(),\n  _s24 = $RefreshSig$(),\n  _s25 = $RefreshSig$();\nimport { useQuery } from '@tanstack/react-query';\nimport { statisticsService } from '../services';\nimport { queryKeys } from '../lib/queryClient';\n\n// Query hooks\nexport const useStatisticsOverview = () => {\n  _s();\n  return useQuery({\n    queryKey: queryKeys.statistics.overview(),\n    queryFn: () => statisticsService.getOverview(),\n    staleTime: 5 * 60 * 1000 // 5 minutes\n  });\n};\n_s(useStatisticsOverview, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const usePositionStats = () => {\n  _s2();\n  return useQuery({\n    queryKey: queryKeys.statistics.positions(),\n    queryFn: () => statisticsService.getPositionStats(),\n    staleTime: 5 * 60 * 1000\n  });\n};\n_s2(usePositionStats, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useInterviewStats = () => {\n  _s3();\n  return useQuery({\n    queryKey: queryKeys.statistics.interviews(),\n    queryFn: () => statisticsService.getInterviewStats(),\n    staleTime: 5 * 60 * 1000\n  });\n};\n_s3(useInterviewStats, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useCompanyStats = () => {\n  _s4();\n  return useQuery({\n    queryKey: queryKeys.statistics.companies(),\n    queryFn: () => statisticsService.getCompanyStats(),\n    staleTime: 10 * 60 * 1000 // 10 minutes for less frequently changing data\n  });\n};\n_s4(useCompanyStats, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useDashboardSummary = () => {\n  _s5();\n  return useQuery({\n    queryKey: queryKeys.statistics.dashboard(),\n    queryFn: () => statisticsService.getDashboardSummary(),\n    staleTime: 2 * 60 * 1000,\n    // 2 minutes for dashboard data\n    refetchOnWindowFocus: true // Refetch when user returns to dashboard\n  });\n};\n_s5(useDashboardSummary, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useStatsByDateRange = (dateFrom, dateTo) => {\n  _s6();\n  return useQuery({\n    queryKey: queryKeys.statistics.custom({\n      dateFrom,\n      dateTo\n    }),\n    queryFn: () => statisticsService.getStatsByDateRange(dateFrom, dateTo),\n    enabled: !!dateFrom && !!dateTo,\n    staleTime: 5 * 60 * 1000\n  });\n};\n_s6(useStatsByDateRange, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useMonthlyStats = year => {\n  _s7();\n  const currentYear = year || new Date().getFullYear();\n  return useQuery({\n    queryKey: queryKeys.statistics.monthly(currentYear),\n    queryFn: () => statisticsService.getMonthlyStats(currentYear),\n    staleTime: 10 * 60 * 1000\n  });\n};\n_s7(useMonthlyStats, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useSuccessRates = () => {\n  _s8();\n  return useQuery({\n    queryKey: [...queryKeys.statistics.all, 'success-rates'],\n    queryFn: () => statisticsService.getSuccessRates(),\n    staleTime: 10 * 60 * 1000\n  });\n};\n_s8(useSuccessRates, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useTimeStats = () => {\n  _s9();\n  return useQuery({\n    queryKey: [...queryKeys.statistics.all, 'time-metrics'],\n    queryFn: () => statisticsService.getTimeStats(),\n    staleTime: 10 * 60 * 1000\n  });\n};\n_s9(useTimeStats, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useInterviewTrends = () => {\n  _s0();\n  return useQuery({\n    queryKey: [...queryKeys.statistics.all, 'interview-trends'],\n    queryFn: () => statisticsService.getInterviewTrends(),\n    staleTime: 10 * 60 * 1000\n  });\n};\n_s0(useInterviewTrends, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useStatusProgression = () => {\n  _s1();\n  return useQuery({\n    queryKey: [...queryKeys.statistics.all, 'status-progression'],\n    queryFn: () => statisticsService.getStatusProgression(),\n    staleTime: 15 * 60 * 1000 // 15 minutes for analytical data\n  });\n};\n_s1(useStatusProgression, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useTopCompanies = (limit = 10) => {\n  _s10();\n  return useQuery({\n    queryKey: [...queryKeys.statistics.all, 'top-companies', limit],\n    queryFn: () => statisticsService.getTopCompanies(limit),\n    staleTime: 15 * 60 * 1000\n  });\n};\n_s10(useTopCompanies, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useInterviewTypeStats = () => {\n  _s11();\n  return useQuery({\n    queryKey: [...queryKeys.statistics.all, 'interview-types'],\n    queryFn: () => statisticsService.getInterviewTypeStats(),\n    staleTime: 10 * 60 * 1000\n  });\n};\n_s11(useInterviewTypeStats, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useWeeklyActivity = () => {\n  _s12();\n  return useQuery({\n    queryKey: [...queryKeys.statistics.all, 'weekly-activity'],\n    queryFn: () => statisticsService.getWeeklyActivity(),\n    staleTime: 5 * 60 * 1000\n  });\n};\n_s12(useWeeklyActivity, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useApplicationSources = () => {\n  _s13();\n  return useQuery({\n    queryKey: [...queryKeys.statistics.all, 'application-sources'],\n    queryFn: () => statisticsService.getApplicationSources(),\n    staleTime: 15 * 60 * 1000\n  });\n};\n_s13(useApplicationSources, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useSalaryStats = () => {\n  _s14();\n  return useQuery({\n    queryKey: [...queryKeys.statistics.all, 'salary-analysis'],\n    queryFn: () => statisticsService.getSalaryStats(),\n    staleTime: 15 * 60 * 1000\n  });\n};\n_s14(useSalaryStats, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useLocationStats = () => {\n  _s15();\n  return useQuery({\n    queryKey: [...queryKeys.statistics.all, 'locations'],\n    queryFn: () => statisticsService.getLocationStats(),\n    staleTime: 15 * 60 * 1000\n  });\n};\n_s15(useLocationStats, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useCustomStats = filters => {\n  _s16();\n  return useQuery({\n    queryKey: queryKeys.statistics.custom(filters),\n    queryFn: () => statisticsService.getCustomStats(filters),\n    enabled: Object.keys(filters).some(key => filters[key] !== undefined),\n    staleTime: 5 * 60 * 1000\n  });\n};\n\n// Combined hooks for dashboard and analytics\n_s16(useCustomStats, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport const useAnalyticsDashboard = () => {\n  _s17();\n  const overviewQuery = useStatisticsOverview();\n  const successRatesQuery = useSuccessRates();\n  const monthlyStatsQuery = useMonthlyStats();\n  const topCompaniesQuery = useTopCompanies(5);\n  return {\n    overview: overviewQuery,\n    successRates: successRatesQuery,\n    monthlyStats: monthlyStatsQuery,\n    topCompanies: topCompaniesQuery,\n    isLoading: overviewQuery.isLoading || successRatesQuery.isLoading || monthlyStatsQuery.isLoading || topCompaniesQuery.isLoading,\n    error: overviewQuery.error || successRatesQuery.error || monthlyStatsQuery.error || topCompaniesQuery.error\n  };\n};\n_s17(useAnalyticsDashboard, \"u03z83AISVTq7fO1KCkGRZc205Y=\", false, function () {\n  return [useStatisticsOverview, useSuccessRates, useMonthlyStats, useTopCompanies];\n});\nexport const useMainDashboard = () => {\n  _s18();\n  const summaryQuery = useDashboardSummary();\n  const weeklyActivityQuery = useWeeklyActivity();\n  const interviewTrendsQuery = useInterviewTrends();\n  return {\n    summary: summaryQuery,\n    weeklyActivity: weeklyActivityQuery,\n    interviewTrends: interviewTrendsQuery,\n    isLoading: summaryQuery.isLoading || weeklyActivityQuery.isLoading || interviewTrendsQuery.isLoading,\n    error: summaryQuery.error || weeklyActivityQuery.error || interviewTrendsQuery.error\n  };\n};\n_s18(useMainDashboard, \"tMcX0eFHPDOY8BfQ4p/hxWcVoT8=\", false, function () {\n  return [useDashboardSummary, useWeeklyActivity, useInterviewTrends];\n});\nexport const usePerformanceMetrics = () => {\n  _s19();\n  const successRatesQuery = useSuccessRates();\n  const timeStatsQuery = useTimeStats();\n  const statusProgressionQuery = useStatusProgression();\n  const interviewTypeStatsQuery = useInterviewTypeStats();\n  return {\n    successRates: successRatesQuery,\n    timeStats: timeStatsQuery,\n    statusProgression: statusProgressionQuery,\n    interviewTypeStats: interviewTypeStatsQuery,\n    isLoading: successRatesQuery.isLoading || timeStatsQuery.isLoading || statusProgressionQuery.isLoading || interviewTypeStatsQuery.isLoading,\n    error: successRatesQuery.error || timeStatsQuery.error || statusProgressionQuery.error || interviewTypeStatsQuery.error\n  };\n};\n_s19(usePerformanceMetrics, \"KntQDaoeXiD6aik+jPl50exO8fI=\", false, function () {\n  return [useSuccessRates, useTimeStats, useStatusProgression, useInterviewTypeStats];\n});\nexport const useCompanyAnalytics = () => {\n  _s20();\n  const companyStatsQuery = useCompanyStats();\n  const topCompaniesQuery = useTopCompanies();\n  const locationStatsQuery = useLocationStats();\n  return {\n    companyStats: companyStatsQuery,\n    topCompanies: topCompaniesQuery,\n    locationStats: locationStatsQuery,\n    isLoading: companyStatsQuery.isLoading || topCompaniesQuery.isLoading || locationStatsQuery.isLoading,\n    error: companyStatsQuery.error || topCompaniesQuery.error || locationStatsQuery.error\n  };\n};\n\n// Utility hooks for specific use cases\n_s20(useCompanyAnalytics, \"8t3/bnlmAte7lO5sQj16/YgyA1Q=\", false, function () {\n  return [useCompanyStats, useTopCompanies, useLocationStats];\n});\nexport const useStatisticsForDateRange = (startDate, endDate) => {\n  _s21();\n  const dateFrom = startDate.toISOString().split('T')[0] || '';\n  const dateTo = endDate.toISOString().split('T')[0] || '';\n  return useStatsByDateRange(dateFrom, dateTo);\n};\n_s21(useStatisticsForDateRange, \"RUnFHGuNEAXEkS9e+IX1xuEkk+I=\", false, function () {\n  return [useStatsByDateRange];\n});\nexport const useCurrentMonthStats = () => {\n  _s22();\n  const now = new Date();\n  const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n  const endOfMonth = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n  return useStatisticsForDateRange(startOfMonth, endOfMonth);\n};\n_s22(useCurrentMonthStats, \"t6UHi803fIjgppmVXelhqZf/BAo=\", false, function () {\n  return [useStatisticsForDateRange];\n});\nexport const useCurrentYearStats = () => {\n  _s23();\n  const currentYear = new Date().getFullYear();\n  return useMonthlyStats(currentYear);\n};\n_s23(useCurrentYearStats, \"Tj3dnrhQ7rnPndSU/jUmG3T1Pu0=\", false, function () {\n  return [useMonthlyStats];\n});\nexport const useLast30DaysStats = () => {\n  _s24();\n  const endDate = new Date();\n  const startDate = new Date();\n  startDate.setDate(startDate.getDate() - 30);\n  return useStatisticsForDateRange(startDate, endDate);\n};\n_s24(useLast30DaysStats, \"t6UHi803fIjgppmVXelhqZf/BAo=\", false, function () {\n  return [useStatisticsForDateRange];\n});\nexport const useLast90DaysStats = () => {\n  _s25();\n  const endDate = new Date();\n  const startDate = new Date();\n  startDate.setDate(startDate.getDate() - 90);\n  return useStatisticsForDateRange(startDate, endDate);\n};\n_s25(useLast90DaysStats, \"t6UHi803fIjgppmVXelhqZf/BAo=\", false, function () {\n  return [useStatisticsForDateRange];\n});","map":{"version":3,"names":["useQuery","statisticsService","queryKeys","useStatisticsOverview","_s","queryKey","statistics","overview","queryFn","getOverview","staleTime","usePositionStats","_s2","positions","getPositionStats","useInterviewStats","_s3","interviews","getInterviewStats","useCompanyStats","_s4","companies","getCompanyStats","useDashboardSummary","_s5","dashboard","getDashboardSummary","refetchOnWindowFocus","useStatsByDateRange","dateFrom","dateTo","_s6","custom","getStatsByDateRange","enabled","useMonthlyStats","year","_s7","currentYear","Date","getFullYear","monthly","getMonthlyStats","useSuccessRates","_s8","all","getSuccessRates","useTimeStats","_s9","getTimeStats","useInterviewTrends","_s0","getInterviewTrends","useStatusProgression","_s1","getStatusProgression","useTopCompanies","limit","_s10","getTopCompanies","useInterviewTypeStats","_s11","getInterviewTypeStats","useWeeklyActivity","_s12","getWeeklyActivity","useApplicationSources","_s13","getApplicationSources","useSalaryStats","_s14","getSalaryStats","useLocationStats","_s15","getLocationStats","useCustomStats","filters","_s16","getCustomStats","Object","keys","some","key","undefined","useAnalyticsDashboard","_s17","overviewQuery","successRatesQuery","monthlyStatsQuery","topCompaniesQuery","successRates","monthlyStats","topCompanies","isLoading","error","useMainDashboard","_s18","summaryQuery","weeklyActivityQuery","interviewTrendsQuery","summary","weeklyActivity","interviewTrends","usePerformanceMetrics","_s19","timeStatsQuery","statusProgressionQuery","interviewTypeStatsQuery","timeStats","statusProgression","interviewTypeStats","useCompanyAnalytics","_s20","companyStatsQuery","locationStatsQuery","companyStats","locationStats","useStatisticsForDateRange","startDate","endDate","_s21","toISOString","split","useCurrentMonthStats","_s22","now","startOfMonth","getMonth","endOfMonth","useCurrentYearStats","_s23","useLast30DaysStats","_s24","setDate","getDate","useLast90DaysStats","_s25"],"sources":["/home/haim/github/job-search-tracker-api/frontend/src/hooks/useStatistics.ts"],"sourcesContent":["import { useQuery } from '@tanstack/react-query';\nimport { statisticsService } from '../services';\nimport { queryKeys } from '../lib/queryClient';\n\n// Query hooks\nexport const useStatisticsOverview = () => {\n  return useQuery({\n    queryKey: queryKeys.statistics.overview(),\n    queryFn: () => statisticsService.getOverview(),\n    staleTime: 5 * 60 * 1000, // 5 minutes\n  });\n};\n\nexport const usePositionStats = () => {\n  return useQuery({\n    queryKey: queryKeys.statistics.positions(),\n    queryFn: () => statisticsService.getPositionStats(),\n    staleTime: 5 * 60 * 1000,\n  });\n};\n\nexport const useInterviewStats = () => {\n  return useQuery({\n    queryKey: queryKeys.statistics.interviews(),\n    queryFn: () => statisticsService.getInterviewStats(),\n    staleTime: 5 * 60 * 1000,\n  });\n};\n\nexport const useCompanyStats = () => {\n  return useQuery({\n    queryKey: queryKeys.statistics.companies(),\n    queryFn: () => statisticsService.getCompanyStats(),\n    staleTime: 10 * 60 * 1000, // 10 minutes for less frequently changing data\n  });\n};\n\nexport const useDashboardSummary = () => {\n  return useQuery({\n    queryKey: queryKeys.statistics.dashboard(),\n    queryFn: () => statisticsService.getDashboardSummary(),\n    staleTime: 2 * 60 * 1000, // 2 minutes for dashboard data\n    refetchOnWindowFocus: true, // Refetch when user returns to dashboard\n  });\n};\n\nexport const useStatsByDateRange = (dateFrom: string, dateTo: string) => {\n  return useQuery({\n    queryKey: queryKeys.statistics.custom({ dateFrom, dateTo }),\n    queryFn: () => statisticsService.getStatsByDateRange(dateFrom, dateTo),\n    enabled: !!dateFrom && !!dateTo,\n    staleTime: 5 * 60 * 1000,\n  });\n};\n\nexport const useMonthlyStats = (year?: number) => {\n  const currentYear = year || new Date().getFullYear();\n  \n  return useQuery({\n    queryKey: queryKeys.statistics.monthly(currentYear),\n    queryFn: () => statisticsService.getMonthlyStats(currentYear),\n    staleTime: 10 * 60 * 1000,\n  });\n};\n\nexport const useSuccessRates = () => {\n  return useQuery({\n    queryKey: [...queryKeys.statistics.all, 'success-rates'],\n    queryFn: () => statisticsService.getSuccessRates(),\n    staleTime: 10 * 60 * 1000,\n  });\n};\n\nexport const useTimeStats = () => {\n  return useQuery({\n    queryKey: [...queryKeys.statistics.all, 'time-metrics'],\n    queryFn: () => statisticsService.getTimeStats(),\n    staleTime: 10 * 60 * 1000,\n  });\n};\n\nexport const useInterviewTrends = () => {\n  return useQuery({\n    queryKey: [...queryKeys.statistics.all, 'interview-trends'],\n    queryFn: () => statisticsService.getInterviewTrends(),\n    staleTime: 10 * 60 * 1000,\n  });\n};\n\nexport const useStatusProgression = () => {\n  return useQuery({\n    queryKey: [...queryKeys.statistics.all, 'status-progression'],\n    queryFn: () => statisticsService.getStatusProgression(),\n    staleTime: 15 * 60 * 1000, // 15 minutes for analytical data\n  });\n};\n\nexport const useTopCompanies = (limit: number = 10) => {\n  return useQuery({\n    queryKey: [...queryKeys.statistics.all, 'top-companies', limit],\n    queryFn: () => statisticsService.getTopCompanies(limit),\n    staleTime: 15 * 60 * 1000,\n  });\n};\n\nexport const useInterviewTypeStats = () => {\n  return useQuery({\n    queryKey: [...queryKeys.statistics.all, 'interview-types'],\n    queryFn: () => statisticsService.getInterviewTypeStats(),\n    staleTime: 10 * 60 * 1000,\n  });\n};\n\nexport const useWeeklyActivity = () => {\n  return useQuery({\n    queryKey: [...queryKeys.statistics.all, 'weekly-activity'],\n    queryFn: () => statisticsService.getWeeklyActivity(),\n    staleTime: 5 * 60 * 1000,\n  });\n};\n\nexport const useApplicationSources = () => {\n  return useQuery({\n    queryKey: [...queryKeys.statistics.all, 'application-sources'],\n    queryFn: () => statisticsService.getApplicationSources(),\n    staleTime: 15 * 60 * 1000,\n  });\n};\n\nexport const useSalaryStats = () => {\n  return useQuery({\n    queryKey: [...queryKeys.statistics.all, 'salary-analysis'],\n    queryFn: () => statisticsService.getSalaryStats(),\n    staleTime: 15 * 60 * 1000,\n  });\n};\n\nexport const useLocationStats = () => {\n  return useQuery({\n    queryKey: [...queryKeys.statistics.all, 'locations'],\n    queryFn: () => statisticsService.getLocationStats(),\n    staleTime: 15 * 60 * 1000,\n  });\n};\n\nexport const useCustomStats = (filters: {\n  dateFrom?: string;\n  dateTo?: string;\n  companies?: string[];\n  statuses?: string[];\n  locations?: string[];\n}) => {\n  return useQuery({\n    queryKey: queryKeys.statistics.custom(filters),\n    queryFn: () => statisticsService.getCustomStats(filters),\n    enabled: Object.keys(filters).some(key => filters[key as keyof typeof filters] !== undefined),\n    staleTime: 5 * 60 * 1000,\n  });\n};\n\n// Combined hooks for dashboard and analytics\nexport const useAnalyticsDashboard = () => {\n  const overviewQuery = useStatisticsOverview();\n  const successRatesQuery = useSuccessRates();\n  const monthlyStatsQuery = useMonthlyStats();\n  const topCompaniesQuery = useTopCompanies(5);\n\n  return {\n    overview: overviewQuery,\n    successRates: successRatesQuery,\n    monthlyStats: monthlyStatsQuery,\n    topCompanies: topCompaniesQuery,\n    isLoading: overviewQuery.isLoading || successRatesQuery.isLoading || \n               monthlyStatsQuery.isLoading || topCompaniesQuery.isLoading,\n    error: overviewQuery.error || successRatesQuery.error || \n           monthlyStatsQuery.error || topCompaniesQuery.error,\n  };\n};\n\nexport const useMainDashboard = () => {\n  const summaryQuery = useDashboardSummary();\n  const weeklyActivityQuery = useWeeklyActivity();\n  const interviewTrendsQuery = useInterviewTrends();\n\n  return {\n    summary: summaryQuery,\n    weeklyActivity: weeklyActivityQuery,\n    interviewTrends: interviewTrendsQuery,\n    isLoading: summaryQuery.isLoading || weeklyActivityQuery.isLoading || interviewTrendsQuery.isLoading,\n    error: summaryQuery.error || weeklyActivityQuery.error || interviewTrendsQuery.error,\n  };\n};\n\nexport const usePerformanceMetrics = () => {\n  const successRatesQuery = useSuccessRates();\n  const timeStatsQuery = useTimeStats();\n  const statusProgressionQuery = useStatusProgression();\n  const interviewTypeStatsQuery = useInterviewTypeStats();\n\n  return {\n    successRates: successRatesQuery,\n    timeStats: timeStatsQuery,\n    statusProgression: statusProgressionQuery,\n    interviewTypeStats: interviewTypeStatsQuery,\n    isLoading: successRatesQuery.isLoading || timeStatsQuery.isLoading || \n               statusProgressionQuery.isLoading || interviewTypeStatsQuery.isLoading,\n    error: successRatesQuery.error || timeStatsQuery.error || \n           statusProgressionQuery.error || interviewTypeStatsQuery.error,\n  };\n};\n\nexport const useCompanyAnalytics = () => {\n  const companyStatsQuery = useCompanyStats();\n  const topCompaniesQuery = useTopCompanies();\n  const locationStatsQuery = useLocationStats();\n\n  return {\n    companyStats: companyStatsQuery,\n    topCompanies: topCompaniesQuery,\n    locationStats: locationStatsQuery,\n    isLoading: companyStatsQuery.isLoading || topCompaniesQuery.isLoading || locationStatsQuery.isLoading,\n    error: companyStatsQuery.error || topCompaniesQuery.error || locationStatsQuery.error,\n  };\n};\n\n// Utility hooks for specific use cases\nexport const useStatisticsForDateRange = (startDate: Date, endDate: Date) => {\n  const dateFrom = startDate.toISOString().split('T')[0] || '';\n  const dateTo = endDate.toISOString().split('T')[0] || '';\n  \n  return useStatsByDateRange(dateFrom, dateTo);\n};\n\nexport const useCurrentMonthStats = () => {\n  const now = new Date();\n  const startOfMonth = new Date(now.getFullYear(), now.getMonth(), 1);\n  const endOfMonth = new Date(now.getFullYear(), now.getMonth() + 1, 0);\n  \n  return useStatisticsForDateRange(startOfMonth, endOfMonth);\n};\n\nexport const useCurrentYearStats = () => {\n  const currentYear = new Date().getFullYear();\n  return useMonthlyStats(currentYear);\n};\n\nexport const useLast30DaysStats = () => {\n  const endDate = new Date();\n  const startDate = new Date();\n  startDate.setDate(startDate.getDate() - 30);\n  \n  return useStatisticsForDateRange(startDate, endDate);\n};\n\nexport const useLast90DaysStats = () => {\n  const endDate = new Date();\n  const startDate = new Date();\n  startDate.setDate(startDate.getDate() - 90);\n  \n  return useStatisticsForDateRange(startDate, endDate);\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}