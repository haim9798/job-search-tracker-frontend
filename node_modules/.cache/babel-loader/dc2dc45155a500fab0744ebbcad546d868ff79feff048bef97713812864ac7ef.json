{"ast":null,"code":"import _objectSpread from\"/home/haim/github/job-search-tracker-api/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";/**\n * Environment configuration utility\n * Manages environment-specific settings and provides type-safe access\n */class ConfigManager{constructor(){this.config=void 0;this.config=this.loadConfig();}loadConfig(){const env=process.env.REACT_APP_ENV||'development';return{env,apiUrl:process.env.REACT_APP_API_URL||'http://localhost:8000',appName:process.env.REACT_APP_APP_NAME||'Interview Position Tracker',version:process.env.REACT_APP_VERSION||'1.0.0',debug:process.env.REACT_APP_DEBUG==='true',enableDevtools:process.env.REACT_APP_ENABLE_DEVTOOLS==='true',logLevel:process.env.REACT_APP_LOG_LEVEL||'info',generateSourcemap:process.env.GENERATE_SOURCEMAP==='true'};}get(key){return this.config[key];}getAll(){return _objectSpread({},this.config);}isDevelopment(){return this.config.env==='development';}isStaging(){return this.config.env==='staging';}isProduction(){return this.config.env==='production';}getApiUrl(){return this.config.apiUrl;}getAppName(){return this.config.appName;}getVersion(){return this.config.version;}shouldDebug(){return this.config.debug;}shouldEnableDevtools(){return this.config.enableDevtools;}getLogLevel(){return this.config.logLevel;}shouldGenerateSourcemap(){return this.config.generateSourcemap;}/**\n   * Get environment-specific feature flags\n   */getFeatureFlags(){return{enableAnalytics:this.isProduction()||this.isStaging(),enableErrorReporting:this.isProduction(),enablePerformanceMonitoring:this.isProduction()||this.isStaging(),enableAccessibilityTesting:this.isDevelopment(),enableHotReload:this.isDevelopment(),enableSourceMaps:this.shouldGenerateSourcemap()};}/**\n   * Get environment-specific API configuration\n   */getApiConfig(){return{baseURL:this.getApiUrl(),timeout:this.isProduction()?10000:30000,retries:this.isProduction()?3:1,enableCaching:this.isProduction()||this.isStaging()};}/**\n   * Get environment-specific logging configuration\n   */getLoggingConfig(){return{level:this.getLogLevel(),enableConsole:this.isDevelopment()||this.isStaging(),enableRemoteLogging:this.isProduction(),enablePerformanceLogging:this.isProduction()||this.isStaging()};}}// Create singleton instance\nconst configManager=new ConfigManager();// Export convenience functions\nexport const config=configManager;export const getConfig=()=>configManager.getAll();export const getEnv=()=>configManager.get('env');export const isDevelopment=()=>configManager.isDevelopment();export const isStaging=()=>configManager.isStaging();export const isProduction=()=>configManager.isProduction();export const getApiUrl=()=>configManager.getApiUrl();export const getAppName=()=>configManager.getAppName();export const getVersion=()=>configManager.getVersion();export const shouldDebug=()=>configManager.shouldDebug();export const shouldEnableDevtools=()=>configManager.shouldEnableDevtools();export const getLogLevel=()=>configManager.getLogLevel();export const shouldGenerateSourcemap=()=>configManager.shouldGenerateSourcemap();export const getFeatureFlags=()=>configManager.getFeatureFlags();export const getApiConfig=()=>configManager.getApiConfig();export const getLoggingConfig=()=>configManager.getLoggingConfig();export default configManager;","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}