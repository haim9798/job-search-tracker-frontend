{"ast":null,"code":"var _jsxFileName = \"/home/haim/github/job-search-tracker-api/frontend/src/providers/QueryProvider.tsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { QueryClientProvider } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\nimport { queryClient, backgroundSync } from '../lib/queryClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const QueryProvider = ({\n  children\n}) => {\n  _s();\n  // Set up background sync when provider mounts\n  React.useEffect(() => {\n    const cleanup = backgroundSync.start();\n    return cleanup;\n  }, []);\n  return /*#__PURE__*/_jsxDEV(QueryClientProvider, {\n    client: queryClient,\n    children: [children, process.env.NODE_ENV === 'development' && /*#__PURE__*/_jsxDEV(ReactQueryDevtools, {\n      initialIsOpen: false,\n      position: \"bottom-right\",\n      toggleButtonProps: {\n        style: {\n          marginLeft: '5px',\n          transform: 'scale(0.8)',\n          transformOrigin: 'bottom right'\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(QueryProvider, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = QueryProvider;\nexport default QueryProvider;\nvar _c;\n$RefreshReg$(_c, \"QueryProvider\");","map":{"version":3,"names":["React","QueryClientProvider","ReactQueryDevtools","queryClient","backgroundSync","jsxDEV","_jsxDEV","QueryProvider","children","_s","useEffect","cleanup","start","client","process","env","NODE_ENV","initialIsOpen","position","toggleButtonProps","style","marginLeft","transform","transformOrigin","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/haim/github/job-search-tracker-api/frontend/src/providers/QueryProvider.tsx"],"sourcesContent":["import React from 'react';\nimport { QueryClientProvider } from '@tanstack/react-query';\nimport { ReactQueryDevtools } from '@tanstack/react-query-devtools';\nimport { queryClient, backgroundSync } from '../lib/queryClient';\n\ninterface QueryProviderProps {\n  children: React.ReactNode;\n}\n\nexport const QueryProvider: React.FC<QueryProviderProps> = ({ children }) => {\n  // Set up background sync when provider mounts\n  React.useEffect(() => {\n    const cleanup = backgroundSync.start();\n    return cleanup;\n  }, []);\n\n  return (\n    <QueryClientProvider client={queryClient}>\n      {children}\n      {/* Show React Query DevTools in development */}\n      {process.env.NODE_ENV === 'development' && (\n        <ReactQueryDevtools\n          initialIsOpen={false}\n          position=\"bottom-right\"\n          toggleButtonProps={{\n            style: {\n              marginLeft: '5px',\n              transform: 'scale(0.8)',\n              transformOrigin: 'bottom right',\n            },\n          }}\n        />\n      )}\n    </QueryClientProvider>\n  );\n};\n\nexport default QueryProvider;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,SAASC,kBAAkB,QAAQ,gCAAgC;AACnE,SAASC,WAAW,EAAEC,cAAc,QAAQ,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAMjE,OAAO,MAAMC,aAA2C,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3E;EACAT,KAAK,CAACU,SAAS,CAAC,MAAM;IACpB,MAAMC,OAAO,GAAGP,cAAc,CAACQ,KAAK,CAAC,CAAC;IACtC,OAAOD,OAAO;EAChB,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEL,OAAA,CAACL,mBAAmB;IAACY,MAAM,EAAEV,WAAY;IAAAK,QAAA,GACtCA,QAAQ,EAERM,OAAO,CAACC,GAAG,CAACC,QAAQ,KAAK,aAAa,iBACrCV,OAAA,CAACJ,kBAAkB;MACjBe,aAAa,EAAE,KAAM;MACrBC,QAAQ,EAAC,cAAc;MACvBC,iBAAiB,EAAE;QACjBC,KAAK,EAAE;UACLC,UAAU,EAAE,KAAK;UACjBC,SAAS,EAAE,YAAY;UACvBC,eAAe,EAAE;QACnB;MACF;IAAE;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACkB,CAAC;AAE1B,CAAC;AAAClB,EAAA,CA1BWF,aAA2C;AAAAqB,EAAA,GAA3CrB,aAA2C;AA4BxD,eAAeA,aAAa;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}