{"ast":null,"code":"/**\n * Environment configuration utility\n * Manages environment-specific settings and provides type-safe access\n */\n\nclass ConfigManager {\n  constructor() {\n    this.config = void 0;\n    this.config = this.loadConfig();\n  }\n  loadConfig() {\n    const env = process.env.REACT_APP_ENV || 'development';\n    return {\n      env,\n      apiUrl: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n      appName: process.env.REACT_APP_APP_NAME || 'Interview Position Tracker',\n      version: process.env.REACT_APP_VERSION || '1.0.0',\n      debug: process.env.REACT_APP_DEBUG === 'true',\n      enableDevtools: process.env.REACT_APP_ENABLE_DEVTOOLS === 'true',\n      logLevel: process.env.REACT_APP_LOG_LEVEL || 'info',\n      generateSourcemap: process.env.GENERATE_SOURCEMAP === 'true'\n    };\n  }\n  get(key) {\n    return this.config[key];\n  }\n  getAll() {\n    return {\n      ...this.config\n    };\n  }\n  isDevelopment() {\n    return this.config.env === 'development';\n  }\n  isStaging() {\n    return this.config.env === 'staging';\n  }\n  isProduction() {\n    return this.config.env === 'production';\n  }\n  getApiUrl() {\n    return this.config.apiUrl;\n  }\n  getAppName() {\n    return this.config.appName;\n  }\n  getVersion() {\n    return this.config.version;\n  }\n  shouldDebug() {\n    return this.config.debug;\n  }\n  shouldEnableDevtools() {\n    return this.config.enableDevtools;\n  }\n  getLogLevel() {\n    return this.config.logLevel;\n  }\n  shouldGenerateSourcemap() {\n    return this.config.generateSourcemap;\n  }\n\n  /**\n   * Get environment-specific feature flags\n   */\n  getFeatureFlags() {\n    return {\n      enableAnalytics: this.isProduction() || this.isStaging(),\n      enableErrorReporting: this.isProduction(),\n      enablePerformanceMonitoring: this.isProduction() || this.isStaging(),\n      enableAccessibilityTesting: this.isDevelopment(),\n      enableHotReload: this.isDevelopment(),\n      enableSourceMaps: this.shouldGenerateSourcemap()\n    };\n  }\n\n  /**\n   * Get environment-specific API configuration\n   */\n  getApiConfig() {\n    return {\n      baseURL: this.getApiUrl(),\n      timeout: this.isProduction() ? 10000 : 30000,\n      retries: this.isProduction() ? 3 : 1,\n      enableCaching: this.isProduction() || this.isStaging()\n    };\n  }\n\n  /**\n   * Get environment-specific logging configuration\n   */\n  getLoggingConfig() {\n    return {\n      level: this.getLogLevel(),\n      enableConsole: this.isDevelopment() || this.isStaging(),\n      enableRemoteLogging: this.isProduction(),\n      enablePerformanceLogging: this.isProduction() || this.isStaging()\n    };\n  }\n}\n\n// Create singleton instance\nconst configManager = new ConfigManager();\n\n// Export convenience functions\nexport const config = configManager;\nexport const getConfig = () => configManager.getAll();\nexport const getEnv = () => configManager.get('env');\nexport const isDevelopment = () => configManager.isDevelopment();\nexport const isStaging = () => configManager.isStaging();\nexport const isProduction = () => configManager.isProduction();\nexport const getApiUrl = () => configManager.getApiUrl();\nexport const getAppName = () => configManager.getAppName();\nexport const getVersion = () => configManager.getVersion();\nexport const shouldDebug = () => configManager.shouldDebug();\nexport const shouldEnableDevtools = () => configManager.shouldEnableDevtools();\nexport const getLogLevel = () => configManager.getLogLevel();\nexport const shouldGenerateSourcemap = () => configManager.shouldGenerateSourcemap();\nexport const getFeatureFlags = () => configManager.getFeatureFlags();\nexport const getApiConfig = () => configManager.getApiConfig();\nexport const getLoggingConfig = () => configManager.getLoggingConfig();\nexport default configManager;","map":{"version":3,"names":["ConfigManager","constructor","config","loadConfig","env","process","REACT_APP_ENV","apiUrl","REACT_APP_API_URL","appName","REACT_APP_APP_NAME","version","REACT_APP_VERSION","debug","REACT_APP_DEBUG","enableDevtools","REACT_APP_ENABLE_DEVTOOLS","logLevel","REACT_APP_LOG_LEVEL","generateSourcemap","GENERATE_SOURCEMAP","get","key","getAll","isDevelopment","isStaging","isProduction","getApiUrl","getAppName","getVersion","shouldDebug","shouldEnableDevtools","getLogLevel","shouldGenerateSourcemap","getFeatureFlags","enableAnalytics","enableErrorReporting","enablePerformanceMonitoring","enableAccessibilityTesting","enableHotReload","enableSourceMaps","getApiConfig","baseURL","timeout","retries","enableCaching","getLoggingConfig","level","enableConsole","enableRemoteLogging","enablePerformanceLogging","configManager","getConfig","getEnv"],"sources":["/home/haim/github/job-search-tracker-api/frontend/src/config/environment.ts"],"sourcesContent":["/**\n * Environment configuration utility\n * Manages environment-specific settings and provides type-safe access\n */\n\nexport interface AppConfig {\n  env: 'development' | 'staging' | 'production';\n  apiUrl: string;\n  appName: string;\n  version: string;\n  debug: boolean;\n  enableDevtools: boolean;\n  logLevel: 'debug' | 'info' | 'warn' | 'error';\n  generateSourcemap: boolean;\n}\n\nclass ConfigManager {\n  private config: AppConfig;\n\n  constructor() {\n    this.config = this.loadConfig();\n  }\n\n  private loadConfig(): AppConfig {\n    const env = (process.env.REACT_APP_ENV || 'development') as AppConfig['env'];\n    \n    return {\n      env,\n      apiUrl: process.env.REACT_APP_API_URL || 'http://localhost:8000',\n      appName: process.env.REACT_APP_APP_NAME || 'Interview Position Tracker',\n      version: process.env.REACT_APP_VERSION || '1.0.0',\n      debug: process.env.REACT_APP_DEBUG === 'true',\n      enableDevtools: process.env.REACT_APP_ENABLE_DEVTOOLS === 'true',\n      logLevel: (process.env.REACT_APP_LOG_LEVEL || 'info') as AppConfig['logLevel'],\n      generateSourcemap: process.env.GENERATE_SOURCEMAP === 'true',\n    };\n  }\n\n  public get<K extends keyof AppConfig>(key: K): AppConfig[K] {\n    return this.config[key];\n  }\n\n  public getAll(): AppConfig {\n    return { ...this.config };\n  }\n\n  public isDevelopment(): boolean {\n    return this.config.env === 'development';\n  }\n\n  public isStaging(): boolean {\n    return this.config.env === 'staging';\n  }\n\n  public isProduction(): boolean {\n    return this.config.env === 'production';\n  }\n\n  public getApiUrl(): string {\n    return this.config.apiUrl;\n  }\n\n  public getAppName(): string {\n    return this.config.appName;\n  }\n\n  public getVersion(): string {\n    return this.config.version;\n  }\n\n  public shouldDebug(): boolean {\n    return this.config.debug;\n  }\n\n  public shouldEnableDevtools(): boolean {\n    return this.config.enableDevtools;\n  }\n\n  public getLogLevel(): AppConfig['logLevel'] {\n    return this.config.logLevel;\n  }\n\n  public shouldGenerateSourcemap(): boolean {\n    return this.config.generateSourcemap;\n  }\n\n  /**\n   * Get environment-specific feature flags\n   */\n  public getFeatureFlags() {\n    return {\n      enableAnalytics: this.isProduction() || this.isStaging(),\n      enableErrorReporting: this.isProduction(),\n      enablePerformanceMonitoring: this.isProduction() || this.isStaging(),\n      enableAccessibilityTesting: this.isDevelopment(),\n      enableHotReload: this.isDevelopment(),\n      enableSourceMaps: this.shouldGenerateSourcemap(),\n    };\n  }\n\n  /**\n   * Get environment-specific API configuration\n   */\n  public getApiConfig() {\n    return {\n      baseURL: this.getApiUrl(),\n      timeout: this.isProduction() ? 10000 : 30000,\n      retries: this.isProduction() ? 3 : 1,\n      enableCaching: this.isProduction() || this.isStaging(),\n    };\n  }\n\n  /**\n   * Get environment-specific logging configuration\n   */\n  public getLoggingConfig() {\n    return {\n      level: this.getLogLevel(),\n      enableConsole: this.isDevelopment() || this.isStaging(),\n      enableRemoteLogging: this.isProduction(),\n      enablePerformanceLogging: this.isProduction() || this.isStaging(),\n    };\n  }\n}\n\n// Create singleton instance\nconst configManager = new ConfigManager();\n\n// Export convenience functions\nexport const config = configManager;\nexport const getConfig = () => configManager.getAll();\nexport const getEnv = () => configManager.get('env');\nexport const isDevelopment = () => configManager.isDevelopment();\nexport const isStaging = () => configManager.isStaging();\nexport const isProduction = () => configManager.isProduction();\nexport const getApiUrl = () => configManager.getApiUrl();\nexport const getAppName = () => configManager.getAppName();\nexport const getVersion = () => configManager.getVersion();\nexport const shouldDebug = () => configManager.shouldDebug();\nexport const shouldEnableDevtools = () => configManager.shouldEnableDevtools();\nexport const getLogLevel = () => configManager.getLogLevel();\nexport const shouldGenerateSourcemap = () => configManager.shouldGenerateSourcemap();\nexport const getFeatureFlags = () => configManager.getFeatureFlags();\nexport const getApiConfig = () => configManager.getApiConfig();\nexport const getLoggingConfig = () => configManager.getLoggingConfig();\n\nexport default configManager;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}