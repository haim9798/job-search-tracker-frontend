{"ast":null,"code":"var _s = $RefreshSig$(),\n  _s2 = $RefreshSig$(),\n  _s3 = $RefreshSig$(),\n  _s4 = $RefreshSig$();\nimport { useState, useCallback } from 'react';\nimport { useNotifications } from '../utils/notifications';\nimport { useSuccessConfirmation } from '../components/ui/SuccessConfirmation';\nexport const useFeedback = () => {\n  _s();\n  const [state, setState] = useState({\n    loading: false,\n    error: null,\n    success: null\n  });\n  const notifications = useNotifications();\n  const {\n    showConfirmation\n  } = useSuccessConfirmation();\n  const setLoading = useCallback((loading, message) => {\n    setState(prev => ({\n      ...prev,\n      loading,\n      error: null,\n      success: null\n    }));\n    if (loading && message) {\n      notifications.loading(message);\n    }\n  }, [notifications]);\n  const setError = useCallback(error => {\n    const errorMessage = error instanceof Error ? error.message : error;\n    setState(prev => ({\n      ...prev,\n      loading: false,\n      error: errorMessage\n    }));\n    if (error) {\n      notifications.error(error);\n    }\n  }, [notifications]);\n  const setSuccess = useCallback(message => {\n    setState(prev => ({\n      ...prev,\n      loading: false,\n      success: message,\n      error: null\n    }));\n    if (message) {\n      notifications.success(message);\n    }\n  }, [notifications]);\n  const clearFeedback = useCallback(() => {\n    setState({\n      loading: false,\n      error: null,\n      success: null\n    });\n  }, []);\n  const handleAsyncOperation = useCallback(async (operation, options = {}) => {\n    const {\n      loadingMessage = 'Processing...',\n      successMessage = 'Operation completed successfully!',\n      errorMessage,\n      showSuccessConfirmation = false,\n      confirmationTitle = 'Success',\n      confirmationActions\n    } = options;\n    try {\n      setLoading(true, loadingMessage);\n      const result = await operation();\n      const finalSuccessMessage = typeof successMessage === 'function' ? successMessage(result) : successMessage;\n      if (showSuccessConfirmation) {\n        showConfirmation(confirmationTitle, finalSuccessMessage, confirmationActions);\n      } else {\n        setSuccess(finalSuccessMessage);\n      }\n      return result;\n    } catch (error) {\n      const finalErrorMessage = errorMessage ? typeof errorMessage === 'function' ? errorMessage(error) : errorMessage : error instanceof Error ? error.message : 'An unexpected error occurred';\n      setError(finalErrorMessage);\n      throw error;\n    }\n  }, [setLoading, setSuccess, setError, showConfirmation]);\n  return {\n    ...state,\n    setLoading,\n    setError,\n    setSuccess,\n    clearFeedback,\n    handleAsyncOperation\n  };\n};\n\n// Specialized hooks for common operations\n_s(useFeedback, \"Li370+IPDWxzrYUqGjg5sezLGMQ=\", false, function () {\n  return [useNotifications, useSuccessConfirmation];\n});\nexport const useFormFeedback = () => {\n  _s2();\n  const feedback = useFeedback();\n  const handleSubmit = useCallback(async (submitFn, options = {}) => {\n    try {\n      const result = await feedback.handleAsyncOperation(submitFn, {\n        loadingMessage: 'Saving...',\n        successMessage: options.successMessage || 'Saved successfully!',\n        errorMessage: options.errorMessage\n      });\n      if (options.onSuccess) {\n        options.onSuccess(result);\n      }\n      return result;\n    } catch (error) {\n      if (options.onError) {\n        options.onError(error);\n      }\n      throw error;\n    }\n  }, [feedback]);\n  return {\n    ...feedback,\n    handleSubmit\n  };\n};\n_s2(useFormFeedback, \"Sdn3K3YYC/LS5osE6FzbBT1IBPQ=\", false, function () {\n  return [useFeedback];\n});\nexport const useDeleteFeedback = () => {\n  _s3();\n  const feedback = useFeedback();\n  const handleDelete = useCallback(async (deleteFn, resourceName, options = {}) => {\n    try {\n      await feedback.handleAsyncOperation(deleteFn, {\n        loadingMessage: `Deleting ${resourceName.toLowerCase()}...`,\n        successMessage: `${resourceName} deleted successfully!`,\n        showSuccessConfirmation: true,\n        confirmationTitle: 'Deleted'\n      });\n      if (options.onSuccess) {\n        options.onSuccess();\n      }\n    } catch (error) {\n      if (options.onError) {\n        options.onError(error);\n      }\n      throw error;\n    }\n  }, [feedback]);\n  return {\n    ...feedback,\n    handleDelete\n  };\n};\n_s3(useDeleteFeedback, \"FalUfWYbeGMHR8GYtuHVtTRMqIs=\", false, function () {\n  return [useFeedback];\n});\nexport const useLoadingFeedback = () => {\n  _s4();\n  const [loadingStates, setLoadingStates] = useState({});\n  const setLoading = useCallback((key, loading) => {\n    setLoadingStates(prev => ({\n      ...prev,\n      [key]: loading\n    }));\n  }, []);\n  const isLoading = useCallback(key => {\n    return loadingStates[key] || false;\n  }, [loadingStates]);\n  const isAnyLoading = useCallback(() => {\n    return Object.values(loadingStates).some(Boolean);\n  }, [loadingStates]);\n  const clearLoading = useCallback(key => {\n    if (key) {\n      setLoadingStates(prev => {\n        const newState = {\n          ...prev\n        };\n        delete newState[key];\n        return newState;\n      });\n    } else {\n      setLoadingStates({});\n    }\n  }, []);\n  return {\n    setLoading,\n    isLoading,\n    isAnyLoading,\n    clearLoading,\n    loadingStates\n  };\n};\n_s4(useLoadingFeedback, \"VtGovDjwWcfRAXcePOqhkAjweSk=\");","map":{"version":3,"names":["useState","useCallback","useNotifications","useSuccessConfirmation","useFeedback","_s","state","setState","loading","error","success","notifications","showConfirmation","setLoading","message","prev","setError","errorMessage","Error","setSuccess","clearFeedback","handleAsyncOperation","operation","options","loadingMessage","successMessage","showSuccessConfirmation","confirmationTitle","confirmationActions","result","finalSuccessMessage","finalErrorMessage","useFormFeedback","_s2","feedback","handleSubmit","submitFn","onSuccess","onError","useDeleteFeedback","_s3","handleDelete","deleteFn","resourceName","toLowerCase","useLoadingFeedback","_s4","loadingStates","setLoadingStates","key","isLoading","isAnyLoading","Object","values","some","Boolean","clearLoading","newState"],"sources":["/home/haim/github/job-search-tracker-api/frontend/src/hooks/useFeedback.ts"],"sourcesContent":["import { useState, useCallback } from 'react';\nimport { useNotifications } from '../utils/notifications';\nimport { useSuccessConfirmation } from '../components/ui/SuccessConfirmation';\n\ninterface FeedbackState {\n  loading: boolean;\n  error: string | null;\n  success: string | null;\n}\n\ninterface AsyncOperationOptions {\n  loadingMessage?: string;\n  successMessage?: string | ((result: any) => string);\n  errorMessage?: string | ((error: any) => string);\n  showSuccessConfirmation?: boolean;\n  confirmationTitle?: string;\n  confirmationActions?: Array<{\n    label: string;\n    action: () => void;\n    variant?: 'primary' | 'secondary' | 'danger';\n  }>;\n}\n\nexport const useFeedback = () => {\n  const [state, setState] = useState<FeedbackState>({\n    loading: false,\n    error: null,\n    success: null,\n  });\n\n  const notifications = useNotifications();\n  const { showConfirmation } = useSuccessConfirmation();\n\n  const setLoading = useCallback((loading: boolean, message?: string) => {\n    setState(prev => ({ ...prev, loading, error: null, success: null }));\n    if (loading && message) {\n      notifications.loading(message);\n    }\n  }, [notifications]);\n\n  const setError = useCallback((error: string | Error | null) => {\n    const errorMessage = error instanceof Error ? error.message : error;\n    setState(prev => ({ ...prev, loading: false, error: errorMessage }));\n    if (error) {\n      notifications.error(error);\n    }\n  }, [notifications]);\n\n  const setSuccess = useCallback((message: string | null) => {\n    setState(prev => ({ ...prev, loading: false, success: message, error: null }));\n    if (message) {\n      notifications.success(message);\n    }\n  }, [notifications]);\n\n  const clearFeedback = useCallback(() => {\n    setState({ loading: false, error: null, success: null });\n  }, []);\n\n  const handleAsyncOperation = useCallback(async <T>(\n    operation: () => Promise<T>,\n    options: AsyncOperationOptions = {}\n  ): Promise<T> => {\n    const {\n      loadingMessage = 'Processing...',\n      successMessage = 'Operation completed successfully!',\n      errorMessage,\n      showSuccessConfirmation = false,\n      confirmationTitle = 'Success',\n      confirmationActions,\n    } = options;\n\n    try {\n      setLoading(true, loadingMessage);\n      \n      const result = await operation();\n      \n      const finalSuccessMessage = typeof successMessage === 'function' \n        ? successMessage(result) \n        : successMessage;\n\n      if (showSuccessConfirmation) {\n        showConfirmation(\n          confirmationTitle,\n          finalSuccessMessage,\n          confirmationActions\n        );\n      } else {\n        setSuccess(finalSuccessMessage);\n      }\n\n      return result;\n    } catch (error) {\n      const finalErrorMessage = errorMessage\n        ? typeof errorMessage === 'function'\n          ? errorMessage(error)\n          : errorMessage\n        : error instanceof Error\n          ? error.message\n          : 'An unexpected error occurred';\n\n      setError(finalErrorMessage);\n      throw error;\n    }\n  }, [setLoading, setSuccess, setError, showConfirmation]);\n\n  return {\n    ...state,\n    setLoading,\n    setError,\n    setSuccess,\n    clearFeedback,\n    handleAsyncOperation,\n  };\n};\n\n// Specialized hooks for common operations\nexport const useFormFeedback = () => {\n  const feedback = useFeedback();\n\n  const handleSubmit = useCallback(async <T>(\n    submitFn: () => Promise<T>,\n    options: {\n      successMessage?: string;\n      errorMessage?: string;\n      onSuccess?: (result: T) => void;\n      onError?: (error: any) => void;\n    } = {}\n  ) => {\n    try {\n      const result = await feedback.handleAsyncOperation(submitFn, {\n        loadingMessage: 'Saving...',\n        successMessage: options.successMessage || 'Saved successfully!',\n        errorMessage: options.errorMessage,\n      });\n\n      if (options.onSuccess) {\n        options.onSuccess(result);\n      }\n\n      return result;\n    } catch (error) {\n      if (options.onError) {\n        options.onError(error);\n      }\n      throw error;\n    }\n  }, [feedback]);\n\n  return {\n    ...feedback,\n    handleSubmit,\n  };\n};\n\nexport const useDeleteFeedback = () => {\n  const feedback = useFeedback();\n\n  const handleDelete = useCallback(async (\n    deleteFn: () => Promise<void>,\n    resourceName: string,\n    options: {\n      onSuccess?: () => void;\n      onError?: (error: any) => void;\n    } = {}\n  ) => {\n    try {\n      await feedback.handleAsyncOperation(deleteFn, {\n        loadingMessage: `Deleting ${resourceName.toLowerCase()}...`,\n        successMessage: `${resourceName} deleted successfully!`,\n        showSuccessConfirmation: true,\n        confirmationTitle: 'Deleted',\n      });\n\n      if (options.onSuccess) {\n        options.onSuccess();\n      }\n    } catch (error) {\n      if (options.onError) {\n        options.onError(error);\n      }\n      throw error;\n    }\n  }, [feedback]);\n\n  return {\n    ...feedback,\n    handleDelete,\n  };\n};\n\nexport const useLoadingFeedback = () => {\n  const [loadingStates, setLoadingStates] = useState<Record<string, boolean>>({});\n\n  const setLoading = useCallback((key: string, loading: boolean) => {\n    setLoadingStates(prev => ({\n      ...prev,\n      [key]: loading,\n    }));\n  }, []);\n\n  const isLoading = useCallback((key: string) => {\n    return loadingStates[key] || false;\n  }, [loadingStates]);\n\n  const isAnyLoading = useCallback(() => {\n    return Object.values(loadingStates).some(Boolean);\n  }, [loadingStates]);\n\n  const clearLoading = useCallback((key?: string) => {\n    if (key) {\n      setLoadingStates(prev => {\n        const newState = { ...prev };\n        delete newState[key];\n        return newState;\n      });\n    } else {\n      setLoadingStates({});\n    }\n  }, []);\n\n  return {\n    setLoading,\n    isLoading,\n    isAnyLoading,\n    clearLoading,\n    loadingStates,\n  };\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}