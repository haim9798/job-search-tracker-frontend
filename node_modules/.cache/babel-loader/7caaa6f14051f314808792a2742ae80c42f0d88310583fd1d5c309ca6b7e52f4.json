{"ast":null,"code":"var _jsxFileName = \"/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/InlineDatePicker.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { CheckIcon, XMarkIcon } from '@heroicons/react/24/outline';\nimport { Button } from '../ui/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst InlineDatePicker = ({\n  value,\n  onSave,\n  onCancel,\n  loading = false,\n  minDate,\n  maxDate,\n  className = ''\n}) => {\n  _s();\n  const [tempValue, setTempValue] = useState(() => {\n    // Convert ISO string to datetime-local format\n    const date = new Date(value);\n    return format(date, \"yyyy-MM-dd'T'HH:mm\");\n  });\n  const [error, setError] = useState('');\n  const inputRef = useRef(null);\n  useEffect(() => {\n    // Focus the input when component mounts\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n  const handleSave = () => {\n    if (!tempValue) {\n      setError('Date is required');\n      return;\n    }\n\n    // Validate date\n    const selectedDate = new Date(tempValue);\n    const now = new Date();\n    if (minDate && selectedDate < new Date(minDate)) {\n      setError('Date cannot be before minimum date');\n      return;\n    }\n    if (maxDate && selectedDate > new Date(maxDate)) {\n      setError('Date cannot be after maximum date');\n      return;\n    }\n\n    // Convert back to ISO string\n    const isoString = selectedDate.toISOString();\n    onSave(isoString);\n  };\n  const handleKeyDown = e => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSave();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      onCancel();\n    }\n  };\n  const handleChange = e => {\n    setTempValue(e.target.value);\n    setError(''); // Clear error when user types\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `inline-flex items-center space-x-2 ${className}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"relative\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ref: inputRef,\n        type: \"datetime-local\",\n        value: tempValue,\n        onChange: handleChange,\n        onKeyDown: handleKeyDown,\n        min: minDate ? format(new Date(minDate), \"yyyy-MM-dd'T'HH:mm\") : undefined,\n        max: maxDate ? format(new Date(maxDate), \"yyyy-MM-dd'T'HH:mm\") : undefined,\n        className: `px-3 py-1 border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${error ? 'border-red-300' : 'border-gray-300'}`,\n        disabled: loading\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"absolute top-full left-0 mt-1 text-xs text-red-600 whitespace-nowrap\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"ghost\",\n      size: \"sm\",\n      onClick: handleSave,\n      disabled: loading || !tempValue,\n      className: \"p-1 text-green-600 hover:text-green-700 hover:bg-green-50\",\n      children: /*#__PURE__*/_jsxDEV(CheckIcon, {\n        className: \"h-4 w-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      variant: \"ghost\",\n      size: \"sm\",\n      onClick: onCancel,\n      disabled: loading,\n      className: \"p-1 text-red-600 hover:text-red-700 hover:bg-red-50\",\n      children: /*#__PURE__*/_jsxDEV(XMarkIcon, {\n        className: \"h-4 w-4\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n_s(InlineDatePicker, \"j7CTHpZpVTF9YjMxGCge1UhRveI=\");\n_c = InlineDatePicker;\nexport default InlineDatePicker;\nvar _c;\n$RefreshReg$(_c, \"InlineDatePicker\");","map":{"version":3,"names":["React","useState","useRef","useEffect","format","CheckIcon","XMarkIcon","Button","jsxDEV","_jsxDEV","InlineDatePicker","value","onSave","onCancel","loading","minDate","maxDate","className","_s","tempValue","setTempValue","date","Date","error","setError","inputRef","current","focus","handleSave","selectedDate","now","isoString","toISOString","handleKeyDown","e","key","preventDefault","handleChange","target","children","ref","type","onChange","onKeyDown","min","undefined","max","disabled","fileName","_jsxFileName","lineNumber","columnNumber","variant","size","onClick","_c","$RefreshReg$"],"sources":["/home/haim/github/job-search-tracker-api/frontend/src/components/interviews/InlineDatePicker.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { format } from 'date-fns';\nimport { CalendarIcon, CheckIcon, XMarkIcon } from '@heroicons/react/24/outline';\nimport { Button } from '../ui/Button';\n\ninterface InlineDatePickerProps {\n  value: string;\n  onSave: (newDate: string) => void;\n  onCancel: () => void;\n  loading?: boolean;\n  minDate?: string;\n  maxDate?: string;\n  className?: string;\n}\n\nconst InlineDatePicker: React.FC<InlineDatePickerProps> = ({\n  value,\n  onSave,\n  onCancel,\n  loading = false,\n  minDate,\n  maxDate,\n  className = '',\n}) => {\n  const [tempValue, setTempValue] = useState(() => {\n    // Convert ISO string to datetime-local format\n    const date = new Date(value);\n    return format(date, \"yyyy-MM-dd'T'HH:mm\");\n  });\n  const [error, setError] = useState<string>('');\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  useEffect(() => {\n    // Focus the input when component mounts\n    if (inputRef.current) {\n      inputRef.current.focus();\n    }\n  }, []);\n\n  const handleSave = () => {\n    if (!tempValue) {\n      setError('Date is required');\n      return;\n    }\n\n    // Validate date\n    const selectedDate = new Date(tempValue);\n    const now = new Date();\n\n    if (minDate && selectedDate < new Date(minDate)) {\n      setError('Date cannot be before minimum date');\n      return;\n    }\n\n    if (maxDate && selectedDate > new Date(maxDate)) {\n      setError('Date cannot be after maximum date');\n      return;\n    }\n\n    // Convert back to ISO string\n    const isoString = selectedDate.toISOString();\n    onSave(isoString);\n  };\n\n  const handleKeyDown = (e: React.KeyboardEvent) => {\n    if (e.key === 'Enter') {\n      e.preventDefault();\n      handleSave();\n    } else if (e.key === 'Escape') {\n      e.preventDefault();\n      onCancel();\n    }\n  };\n\n  const handleChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setTempValue(e.target.value);\n    setError(''); // Clear error when user types\n  };\n\n  return (\n    <div className={`inline-flex items-center space-x-2 ${className}`}>\n      <div className=\"relative\">\n        <input\n          ref={inputRef}\n          type=\"datetime-local\"\n          value={tempValue}\n          onChange={handleChange}\n          onKeyDown={handleKeyDown}\n          min={minDate ? format(new Date(minDate), \"yyyy-MM-dd'T'HH:mm\") : undefined}\n          max={maxDate ? format(new Date(maxDate), \"yyyy-MM-dd'T'HH:mm\") : undefined}\n          className={`px-3 py-1 border rounded-md text-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500 ${\n            error ? 'border-red-300' : 'border-gray-300'\n          }`}\n          disabled={loading}\n        />\n        {error && (\n          <div className=\"absolute top-full left-0 mt-1 text-xs text-red-600 whitespace-nowrap\">\n            {error}\n          </div>\n        )}\n      </div>\n\n      <Button\n        variant=\"ghost\"\n        size=\"sm\"\n        onClick={handleSave}\n        disabled={loading || !tempValue}\n        className=\"p-1 text-green-600 hover:text-green-700 hover:bg-green-50\"\n      >\n        <CheckIcon className=\"h-4 w-4\" />\n      </Button>\n\n      <Button\n        variant=\"ghost\"\n        size=\"sm\"\n        onClick={onCancel}\n        disabled={loading}\n        className=\"p-1 text-red-600 hover:text-red-700 hover:bg-red-50\"\n      >\n        <XMarkIcon className=\"h-4 w-4\" />\n      </Button>\n    </div>\n  );\n};\n\nexport default InlineDatePicker;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}