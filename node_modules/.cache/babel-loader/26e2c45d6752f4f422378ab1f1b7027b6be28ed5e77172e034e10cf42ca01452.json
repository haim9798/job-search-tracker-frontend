{"ast":null,"code":"import _objectSpread from\"/home/haim/github/job-search-tracker-api/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import{useState,useCallback,useEffect}from'react';import{useSearchParams}from'react-router-dom';import{PositionStatus}from'../types';export const usePositionFilters=()=>{const[searchParams,setSearchParams]=useSearchParams();const[filters,setFiltersState]=useState({});// Initialize filters from URL on mount\nuseEffect(()=>{const urlFilters={};const status=searchParams.get('status');const company=searchParams.get('company');const search=searchParams.get('search');const dateFrom=searchParams.get('date_from');const dateTo=searchParams.get('date_to');if(status&&Object.values(PositionStatus).includes(status)){urlFilters.status=status;}if(company)urlFilters.company=company;if(search)urlFilters.search=search;if(dateFrom)urlFilters.date_from=dateFrom;if(dateTo)urlFilters.date_to=dateTo;setFiltersState(urlFilters);},[searchParams]);// Update URL when filters change\nconst updateURL=useCallback(newFilters=>{const params=new URLSearchParams();Object.entries(newFilters).forEach(_ref=>{let[key,value]=_ref;if(value!==undefined&&value!==''){params.set(key,value);}});setSearchParams(params,{replace:true});},[setSearchParams]);// Set filters and update URL\nconst setFilters=useCallback(newFilters=>{setFiltersState(newFilters);updateURL(newFilters);},[updateURL]);// Update a single filter\nconst updateFilter=useCallback((key,value)=>{const newFilters=_objectSpread(_objectSpread({},filters),{},{[key]:value||undefined});// Remove undefined values\nObject.keys(newFilters).forEach(k=>{if(newFilters[k]===undefined){delete newFilters[k];}});setFilters(newFilters);},[filters,setFilters]);// Clear all filters\nconst clearFilters=useCallback(()=>{setFiltersState({});setSearchParams({},{replace:true});},[setSearchParams]);// Check if any filters are active\nconst hasActiveFilters=Object.values(filters).some(value=>value!==undefined&&value!=='');// Count active filters\nconst activeFilterCount=Object.values(filters).filter(value=>value!==undefined&&value!=='').length;return{filters,setFilters,updateFilter,clearFilters,hasActiveFilters,activeFilterCount};};export default usePositionFilters;","map":{"version":3,"names":["useState","useCallback","useEffect","useSearchParams","PositionStatus","usePositionFilters","searchParams","setSearchParams","filters","setFiltersState","urlFilters","status","get","company","search","dateFrom","dateTo","Object","values","includes","date_from","date_to","updateURL","newFilters","params","URLSearchParams","entries","forEach","_ref","key","value","undefined","set","replace","setFilters","updateFilter","_objectSpread","keys","k","clearFilters","hasActiveFilters","some","activeFilterCount","filter","length"],"sources":["/home/haim/github/job-search-tracker-api/frontend/src/hooks/usePositionFilters.ts"],"sourcesContent":["import { useState, useCallback, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\nimport { PositionFilters, PositionStatus } from '../types';\n\ninterface UsePositionFiltersReturn {\n  filters: PositionFilters;\n  setFilters: (filters: PositionFilters) => void;\n  updateFilter: (key: keyof PositionFilters, value: string | undefined) => void;\n  clearFilters: () => void;\n  hasActiveFilters: boolean;\n  activeFilterCount: number;\n}\n\nexport const usePositionFilters = (): UsePositionFiltersReturn => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [filters, setFiltersState] = useState<PositionFilters>({});\n\n  // Initialize filters from URL on mount\n  useEffect(() => {\n    const urlFilters: PositionFilters = {};\n    \n    const status = searchParams.get('status');\n    const company = searchParams.get('company');\n    const search = searchParams.get('search');\n    const dateFrom = searchParams.get('date_from');\n    const dateTo = searchParams.get('date_to');\n\n    if (status && Object.values(PositionStatus).includes(status as PositionStatus)) {\n      urlFilters.status = status as PositionStatus;\n    }\n    if (company) urlFilters.company = company;\n    if (search) urlFilters.search = search;\n    if (dateFrom) urlFilters.date_from = dateFrom;\n    if (dateTo) urlFilters.date_to = dateTo;\n\n    setFiltersState(urlFilters);\n  }, [searchParams]);\n\n  // Update URL when filters change\n  const updateURL = useCallback((newFilters: PositionFilters) => {\n    const params = new URLSearchParams();\n    \n    Object.entries(newFilters).forEach(([key, value]) => {\n      if (value !== undefined && value !== '') {\n        params.set(key, value);\n      }\n    });\n\n    setSearchParams(params, { replace: true });\n  }, [setSearchParams]);\n\n  // Set filters and update URL\n  const setFilters = useCallback((newFilters: PositionFilters) => {\n    setFiltersState(newFilters);\n    updateURL(newFilters);\n  }, [updateURL]);\n\n  // Update a single filter\n  const updateFilter = useCallback((key: keyof PositionFilters, value: string | undefined) => {\n    const newFilters = {\n      ...filters,\n      [key]: value || undefined,\n    };\n    \n    // Remove undefined values\n    Object.keys(newFilters).forEach(k => {\n      if (newFilters[k as keyof PositionFilters] === undefined) {\n        delete newFilters[k as keyof PositionFilters];\n      }\n    });\n    \n    setFilters(newFilters);\n  }, [filters, setFilters]);\n\n  // Clear all filters\n  const clearFilters = useCallback(() => {\n    setFiltersState({});\n    setSearchParams({}, { replace: true });\n  }, [setSearchParams]);\n\n  // Check if any filters are active\n  const hasActiveFilters = Object.values(filters).some(value => \n    value !== undefined && value !== ''\n  );\n\n  // Count active filters\n  const activeFilterCount = Object.values(filters).filter(value => \n    value !== undefined && value !== ''\n  ).length;\n\n  return {\n    filters,\n    setFilters,\n    updateFilter,\n    clearFilters,\n    hasActiveFilters,\n    activeFilterCount,\n  };\n};\n\nexport default usePositionFilters;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}