{"ast":null,"code":"import _objectSpread from\"/home/haim/github/job-search-tracker-api/frontend/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import React from'react';import{Navigate,useLocation}from'react-router-dom';import{useAuth}from'../../hooks/useAuth';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";export const AuthGuard=_ref=>{let{children,redirectTo='/login',requireAuth=true}=_ref;const{isAuthenticated,isLoading,isInitialized}=useAuth();const location=useLocation();// Show loading spinner while checking authentication\nif(!isInitialized||isLoading){return/*#__PURE__*/_jsx(\"div\",{className:\"min-h-screen flex items-center justify-center bg-gray-50\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"text-center\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"}),/*#__PURE__*/_jsx(\"p\",{className:\"mt-4 text-gray-600\",children:\"Loading...\"})]})});}// If authentication is required but user is not authenticated\nif(requireAuth&&!isAuthenticated){// Save the attempted location for redirect after login\nreturn/*#__PURE__*/_jsx(Navigate,{to:redirectTo,state:{from:location},replace:true});}// If authentication is not required but user is authenticated (e.g., login page)\nif(!requireAuth&&isAuthenticated){var _location$state,_location$state$from;// Redirect to dashboard or the originally requested page\nconst from=((_location$state=location.state)===null||_location$state===void 0?void 0:(_location$state$from=_location$state.from)===null||_location$state$from===void 0?void 0:_location$state$from.pathname)||'/dashboard';return/*#__PURE__*/_jsx(Navigate,{to:from,replace:true});}// Render children if all conditions are met\nreturn/*#__PURE__*/_jsx(_Fragment,{children:children});};// Higher-order component for protecting routes\nexport const withAuthGuard=(Component,options)=>{const WrappedComponent=props=>/*#__PURE__*/_jsx(AuthGuard,_objectSpread(_objectSpread({},options),{},{children:/*#__PURE__*/_jsx(Component,_objectSpread({},props))}));WrappedComponent.displayName=\"withAuthGuard(\".concat(Component.displayName||Component.name,\")\");return WrappedComponent;};// Hook for checking auth status in components\nexport const useAuthGuard=()=>{const{isAuthenticated,isLoading,isInitialized,user}=useAuth();return{isAuthenticated,isLoading,isInitialized,user,canAccess:isAuthenticated&&isInitialized&&!isLoading,shouldRedirect:!isAuthenticated&&isInitialized&&!isLoading};};export default AuthGuard;","map":{"version":3,"names":["React","Navigate","useLocation","useAuth","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","AuthGuard","_ref","children","redirectTo","requireAuth","isAuthenticated","isLoading","isInitialized","location","className","to","state","from","replace","_location$state","_location$state$from","pathname","withAuthGuard","Component","options","WrappedComponent","props","_objectSpread","displayName","concat","name","useAuthGuard","user","canAccess","shouldRedirect"],"sources":["/home/haim/github/job-search-tracker-api/frontend/src/components/auth/AuthGuard.tsx"],"sourcesContent":["import React from 'react';\nimport { Navigate, useLocation } from 'react-router-dom';\nimport { useAuth } from '../../hooks/useAuth';\n\ninterface AuthGuardProps {\n  children: React.ReactNode;\n  redirectTo?: string;\n  requireAuth?: boolean;\n}\n\nexport const AuthGuard: React.FC<AuthGuardProps> = ({\n  children,\n  redirectTo = '/login',\n  requireAuth = true,\n}) => {\n  const { isAuthenticated, isLoading, isInitialized } = useAuth();\n  const location = useLocation();\n\n  // Show loading spinner while checking authentication\n  if (!isInitialized || isLoading) {\n    return (\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-50\">\n        <div className=\"text-center\">\n          <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-600 mx-auto\"></div>\n          <p className=\"mt-4 text-gray-600\">Loading...</p>\n        </div>\n      </div>\n    );\n  }\n\n  // If authentication is required but user is not authenticated\n  if (requireAuth && !isAuthenticated) {\n    // Save the attempted location for redirect after login\n    return (\n      <Navigate\n        to={redirectTo}\n        state={{ from: location }}\n        replace\n      />\n    );\n  }\n\n  // If authentication is not required but user is authenticated (e.g., login page)\n  if (!requireAuth && isAuthenticated) {\n    // Redirect to dashboard or the originally requested page\n    const from = location.state?.from?.pathname || '/dashboard';\n    return <Navigate to={from} replace />;\n  }\n\n  // Render children if all conditions are met\n  return <>{children}</>;\n};\n\n// Higher-order component for protecting routes\nexport const withAuthGuard = <P extends object>(\n  Component: React.ComponentType<P>,\n  options?: Omit<AuthGuardProps, 'children'>\n) => {\n  const WrappedComponent = (props: P) => (\n    <AuthGuard {...options}>\n      <Component {...props} />\n    </AuthGuard>\n  );\n\n  WrappedComponent.displayName = `withAuthGuard(${Component.displayName || Component.name})`;\n  \n  return WrappedComponent;\n};\n\n// Hook for checking auth status in components\nexport const useAuthGuard = () => {\n  const { isAuthenticated, isLoading, isInitialized, user } = useAuth();\n  \n  return {\n    isAuthenticated,\n    isLoading,\n    isInitialized,\n    user,\n    canAccess: isAuthenticated && isInitialized && !isLoading,\n    shouldRedirect: !isAuthenticated && isInitialized && !isLoading,\n  };\n};\n\nexport default AuthGuard;"],"mappings":"sIAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,QAAQ,CAAEC,WAAW,KAAQ,kBAAkB,CACxD,OAASC,OAAO,KAAQ,qBAAqB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,CAAAC,QAAA,IAAAC,SAAA,yBAQ9C,MAAO,MAAM,CAAAC,SAAmC,CAAGC,IAAA,EAI7C,IAJ8C,CAClDC,QAAQ,CACRC,UAAU,CAAG,QAAQ,CACrBC,WAAW,CAAG,IAChB,CAAC,CAAAH,IAAA,CACC,KAAM,CAAEI,eAAe,CAAEC,SAAS,CAAEC,aAAc,CAAC,CAAGd,OAAO,CAAC,CAAC,CAC/D,KAAM,CAAAe,QAAQ,CAAGhB,WAAW,CAAC,CAAC,CAE9B;AACA,GAAI,CAACe,aAAa,EAAID,SAAS,CAAE,CAC/B,mBACEX,IAAA,QAAKc,SAAS,CAAC,0DAA0D,CAAAP,QAAA,cACvEL,KAAA,QAAKY,SAAS,CAAC,aAAa,CAAAP,QAAA,eAC1BP,IAAA,QAAKc,SAAS,CAAC,wEAAwE,CAAM,CAAC,cAC9Fd,IAAA,MAAGc,SAAS,CAAC,oBAAoB,CAAAP,QAAA,CAAC,YAAU,CAAG,CAAC,EAC7C,CAAC,CACH,CAAC,CAEV,CAEA;AACA,GAAIE,WAAW,EAAI,CAACC,eAAe,CAAE,CACnC;AACA,mBACEV,IAAA,CAACJ,QAAQ,EACPmB,EAAE,CAAEP,UAAW,CACfQ,KAAK,CAAE,CAAEC,IAAI,CAAEJ,QAAS,CAAE,CAC1BK,OAAO,MACR,CAAC,CAEN,CAEA;AACA,GAAI,CAACT,WAAW,EAAIC,eAAe,CAAE,KAAAS,eAAA,CAAAC,oBAAA,CACnC;AACA,KAAM,CAAAH,IAAI,CAAG,EAAAE,eAAA,CAAAN,QAAQ,CAACG,KAAK,UAAAG,eAAA,kBAAAC,oBAAA,CAAdD,eAAA,CAAgBF,IAAI,UAAAG,oBAAA,iBAApBA,oBAAA,CAAsBC,QAAQ,GAAI,YAAY,CAC3D,mBAAOrB,IAAA,CAACJ,QAAQ,EAACmB,EAAE,CAAEE,IAAK,CAACC,OAAO,MAAE,CAAC,CACvC,CAEA;AACA,mBAAOlB,IAAA,CAAAI,SAAA,EAAAG,QAAA,CAAGA,QAAQ,CAAG,CAAC,CACxB,CAAC,CAED;AACA,MAAO,MAAM,CAAAe,aAAa,CAAGA,CAC3BC,SAAiC,CACjCC,OAA0C,GACvC,CACH,KAAM,CAAAC,gBAAgB,CAAIC,KAAQ,eAChC1B,IAAA,CAACK,SAAS,CAAAsB,aAAA,CAAAA,aAAA,IAAKH,OAAO,MAAAjB,QAAA,cACpBP,IAAA,CAACuB,SAAS,CAAAI,aAAA,IAAKD,KAAK,CAAG,CAAC,EACf,CACZ,CAEDD,gBAAgB,CAACG,WAAW,kBAAAC,MAAA,CAAoBN,SAAS,CAACK,WAAW,EAAIL,SAAS,CAACO,IAAI,KAAG,CAE1F,MAAO,CAAAL,gBAAgB,CACzB,CAAC,CAED;AACA,MAAO,MAAM,CAAAM,YAAY,CAAGA,CAAA,GAAM,CAChC,KAAM,CAAErB,eAAe,CAAEC,SAAS,CAAEC,aAAa,CAAEoB,IAAK,CAAC,CAAGlC,OAAO,CAAC,CAAC,CAErE,MAAO,CACLY,eAAe,CACfC,SAAS,CACTC,aAAa,CACboB,IAAI,CACJC,SAAS,CAAEvB,eAAe,EAAIE,aAAa,EAAI,CAACD,SAAS,CACzDuB,cAAc,CAAE,CAACxB,eAAe,EAAIE,aAAa,EAAI,CAACD,SACxD,CAAC,CACH,CAAC,CAED,cAAe,CAAAN,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}