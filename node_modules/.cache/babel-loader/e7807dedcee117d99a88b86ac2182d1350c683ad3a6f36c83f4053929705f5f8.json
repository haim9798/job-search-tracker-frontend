{"ast":null,"code":"var _jsxFileName = \"/home/haim/github/job-search-tracker-api/frontend/src/components/ui/LazyImage.tsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from 'react';\nimport { cn } from '../../utils/cn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LazyImage = ({\n  src,\n  alt,\n  placeholder,\n  fallback,\n  className,\n  containerClassName,\n  blur = true,\n  threshold = 0.1,\n  ...props\n}) => {\n  _s();\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isInView, setIsInView] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const imgRef = useRef(null);\n  const containerRef = useRef(null);\n\n  // Intersection Observer for lazy loading\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        setIsInView(true);\n        observer.disconnect();\n      }\n    }, {\n      threshold\n    });\n    observer.observe(container);\n    return () => observer.disconnect();\n  }, [threshold]);\n\n  // Handle image load\n  const handleLoad = () => {\n    setIsLoaded(true);\n    setHasError(false);\n  };\n\n  // Handle image error\n  const handleError = () => {\n    setHasError(true);\n    setIsLoaded(false);\n  };\n\n  // Generate placeholder based on dimensions\n  const generatePlaceholder = (width = 400, height = 300) => {\n    return `data:image/svg+xml;base64,${btoa(`\n      <svg width=\"${width}\" height=\"${height}\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect width=\"100%\" height=\"100%\" fill=\"#f3f4f6\"/>\n        <text x=\"50%\" y=\"50%\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#9ca3af\" text-anchor=\"middle\" dy=\".3em\">\n          Loading...\n        </text>\n      </svg>\n    `)}`;\n  };\n  const currentSrc = hasError && fallback ? fallback : src;\n  const showPlaceholder = !isLoaded && !hasError;\n  const placeholderSrc = placeholder || generatePlaceholder();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: cn('relative overflow-hidden', containerClassName),\n    children: [showPlaceholder && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cn('absolute inset-0 bg-gray-100 flex items-center justify-center', blur && 'backdrop-blur-sm'),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: placeholderSrc,\n        alt: \"\",\n        className: cn('w-full h-full object-cover', blur && 'blur-sm'),\n        \"aria-hidden\": \"true\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this), isInView && /*#__PURE__*/_jsxDEV(\"img\", {\n      ref: imgRef,\n      src: currentSrc,\n      alt: alt,\n      onLoad: handleLoad,\n      onError: handleError,\n      className: cn('w-full h-full object-cover transition-opacity duration-300', isLoaded ? 'opacity-100' : 'opacity-0', className),\n      loading: \"lazy\",\n      ...props\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), hasError && !fallback && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 bg-gray-100 flex items-center justify-center\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center text-gray-500\",\n        children: [/*#__PURE__*/_jsxDEV(\"svg\", {\n          className: \"w-8 h-8 mx-auto mb-2\",\n          fill: \"none\",\n          stroke: \"currentColor\",\n          viewBox: \"0 0 24 24\",\n          children: /*#__PURE__*/_jsxDEV(\"path\", {\n            strokeLinecap: \"round\",\n            strokeLinejoin: \"round\",\n            strokeWidth: 2,\n            d: \"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-xs\",\n          children: \"Failed to load\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), isInView && !isLoaded && !hasError && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"absolute inset-0 flex items-center justify-center bg-gray-50\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n};\n\n// Progressive image loading with multiple sources\n_s(LazyImage, \"otwqndAgHYGtYL5wgwsSgJQZ89I=\");\n_c = LazyImage;\nexport const ProgressiveImage = ({\n  lowQualitySrc,\n  highQualitySrc,\n  alt,\n  className,\n  containerClassName\n}) => {\n  _s2();\n  const [highQualityLoaded, setHighQualityLoaded] = useState(false);\n  const [isInView, setIsInView] = useState(false);\n  const containerRef = useRef(null);\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n    const observer = new IntersectionObserver(([entry]) => {\n      if (entry.isIntersecting) {\n        setIsInView(true);\n        observer.disconnect();\n      }\n    }, {\n      threshold: 0.1\n    });\n    observer.observe(container);\n    return () => observer.disconnect();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    ref: containerRef,\n    className: cn('relative overflow-hidden', containerClassName),\n    children: [isInView && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: lowQualitySrc,\n      alt: alt,\n      className: cn('w-full h-full object-cover transition-opacity duration-300', highQualityLoaded ? 'opacity-0' : 'opacity-100', 'blur-sm scale-110', className),\n      loading: \"lazy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 9\n    }, this), isInView && /*#__PURE__*/_jsxDEV(\"img\", {\n      src: highQualitySrc,\n      alt: alt,\n      onLoad: () => setHighQualityLoaded(true),\n      className: cn('absolute inset-0 w-full h-full object-cover transition-opacity duration-500', highQualityLoaded ? 'opacity-100' : 'opacity-0', className),\n      loading: \"lazy\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n_s2(ProgressiveImage, \"FG55hikbx6EE5i/i7xCweENvyJg=\");\n_c2 = ProgressiveImage;\nexport default LazyImage;\nvar _c, _c2;\n$RefreshReg$(_c, \"LazyImage\");\n$RefreshReg$(_c2, \"ProgressiveImage\");","map":{"version":3,"names":["React","useState","useRef","useEffect","cn","jsxDEV","_jsxDEV","LazyImage","src","alt","placeholder","fallback","className","containerClassName","blur","threshold","props","_s","isLoaded","setIsLoaded","isInView","setIsInView","hasError","setHasError","imgRef","containerRef","container","current","observer","IntersectionObserver","entry","isIntersecting","disconnect","observe","handleLoad","handleError","generatePlaceholder","width","height","btoa","currentSrc","showPlaceholder","placeholderSrc","ref","children","fileName","_jsxFileName","lineNumber","columnNumber","onLoad","onError","loading","fill","stroke","viewBox","strokeLinecap","strokeLinejoin","strokeWidth","d","_c","ProgressiveImage","lowQualitySrc","highQualitySrc","_s2","highQualityLoaded","setHighQualityLoaded","_c2","$RefreshReg$"],"sources":["/home/haim/github/job-search-tracker-api/frontend/src/components/ui/LazyImage.tsx"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport { cn } from '../../utils/cn';\n\ninterface LazyImageProps extends React.ImgHTMLAttributes<HTMLImageElement> {\n  src: string;\n  alt: string;\n  placeholder?: string;\n  fallback?: string;\n  className?: string;\n  containerClassName?: string;\n  blur?: boolean;\n  threshold?: number;\n}\n\nexport const LazyImage: React.FC<LazyImageProps> = ({\n  src,\n  alt,\n  placeholder,\n  fallback,\n  className,\n  containerClassName,\n  blur = true,\n  threshold = 0.1,\n  ...props\n}) => {\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [isInView, setIsInView] = useState(false);\n  const [hasError, setHasError] = useState(false);\n  const imgRef = useRef<HTMLImageElement>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  // Intersection Observer for lazy loading\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsInView(true);\n          observer.disconnect();\n        }\n      },\n      { threshold }\n    );\n\n    observer.observe(container);\n\n    return () => observer.disconnect();\n  }, [threshold]);\n\n  // Handle image load\n  const handleLoad = () => {\n    setIsLoaded(true);\n    setHasError(false);\n  };\n\n  // Handle image error\n  const handleError = () => {\n    setHasError(true);\n    setIsLoaded(false);\n  };\n\n  // Generate placeholder based on dimensions\n  const generatePlaceholder = (width = 400, height = 300) => {\n    return `data:image/svg+xml;base64,${btoa(`\n      <svg width=\"${width}\" height=\"${height}\" xmlns=\"http://www.w3.org/2000/svg\">\n        <rect width=\"100%\" height=\"100%\" fill=\"#f3f4f6\"/>\n        <text x=\"50%\" y=\"50%\" font-family=\"Arial, sans-serif\" font-size=\"14\" fill=\"#9ca3af\" text-anchor=\"middle\" dy=\".3em\">\n          Loading...\n        </text>\n      </svg>\n    `)}`;\n  };\n\n  const currentSrc = hasError && fallback ? fallback : src;\n  const showPlaceholder = !isLoaded && !hasError;\n  const placeholderSrc = placeholder || generatePlaceholder();\n\n  return (\n    <div\n      ref={containerRef}\n      className={cn('relative overflow-hidden', containerClassName)}\n    >\n      {/* Placeholder */}\n      {showPlaceholder && (\n        <div\n          className={cn(\n            'absolute inset-0 bg-gray-100 flex items-center justify-center',\n            blur && 'backdrop-blur-sm'\n          )}\n        >\n          <img\n            src={placeholderSrc}\n            alt=\"\"\n            className={cn('w-full h-full object-cover', blur && 'blur-sm')}\n            aria-hidden=\"true\"\n          />\n        </div>\n      )}\n\n      {/* Actual image */}\n      {isInView && (\n        <img\n          ref={imgRef}\n          src={currentSrc}\n          alt={alt}\n          onLoad={handleLoad}\n          onError={handleError}\n          className={cn(\n            'w-full h-full object-cover transition-opacity duration-300',\n            isLoaded ? 'opacity-100' : 'opacity-0',\n            className\n          )}\n          loading=\"lazy\"\n          {...props}\n        />\n      )}\n\n      {/* Error state */}\n      {hasError && !fallback && (\n        <div className=\"absolute inset-0 bg-gray-100 flex items-center justify-center\">\n          <div className=\"text-center text-gray-500\">\n            <svg\n              className=\"w-8 h-8 mx-auto mb-2\"\n              fill=\"none\"\n              stroke=\"currentColor\"\n              viewBox=\"0 0 24 24\"\n            >\n              <path\n                strokeLinecap=\"round\"\n                strokeLinejoin=\"round\"\n                strokeWidth={2}\n                d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"\n              />\n            </svg>\n            <p className=\"text-xs\">Failed to load</p>\n          </div>\n        </div>\n      )}\n\n      {/* Loading indicator */}\n      {isInView && !isLoaded && !hasError && (\n        <div className=\"absolute inset-0 flex items-center justify-center bg-gray-50\">\n          <div className=\"animate-spin rounded-full h-6 w-6 border-b-2 border-blue-600\" />\n        </div>\n      )}\n    </div>\n  );\n};\n\n// Progressive image loading with multiple sources\nexport const ProgressiveImage: React.FC<{\n  lowQualitySrc: string;\n  highQualitySrc: string;\n  alt: string;\n  className?: string;\n  containerClassName?: string;\n}> = ({\n  lowQualitySrc,\n  highQualitySrc,\n  alt,\n  className,\n  containerClassName,\n}) => {\n  const [highQualityLoaded, setHighQualityLoaded] = useState(false);\n  const [isInView, setIsInView] = useState(false);\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    const container = containerRef.current;\n    if (!container) return;\n\n    const observer = new IntersectionObserver(\n      ([entry]) => {\n        if (entry.isIntersecting) {\n          setIsInView(true);\n          observer.disconnect();\n        }\n      },\n      { threshold: 0.1 }\n    );\n\n    observer.observe(container);\n    return () => observer.disconnect();\n  }, []);\n\n  return (\n    <div\n      ref={containerRef}\n      className={cn('relative overflow-hidden', containerClassName)}\n    >\n      {/* Low quality image (always visible when in view) */}\n      {isInView && (\n        <img\n          src={lowQualitySrc}\n          alt={alt}\n          className={cn(\n            'w-full h-full object-cover transition-opacity duration-300',\n            highQualityLoaded ? 'opacity-0' : 'opacity-100',\n            'blur-sm scale-110',\n            className\n          )}\n          loading=\"lazy\"\n        />\n      )}\n\n      {/* High quality image */}\n      {isInView && (\n        <img\n          src={highQualitySrc}\n          alt={alt}\n          onLoad={() => setHighQualityLoaded(true)}\n          className={cn(\n            'absolute inset-0 w-full h-full object-cover transition-opacity duration-500',\n            highQualityLoaded ? 'opacity-100' : 'opacity-0',\n            className\n          )}\n          loading=\"lazy\"\n        />\n      )}\n    </div>\n  );\n};\n\nexport default LazyImage;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}